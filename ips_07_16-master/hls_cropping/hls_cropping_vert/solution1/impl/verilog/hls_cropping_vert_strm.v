// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hls_cropping_vert_strm,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=17.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=21.688000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=383,HLS_SYN_LUT=3834}" *)

module hls_cropping_vert_strm (
        ap_clk,
        ap_rst_n,
        src_V_V_TDATA,
        src_V_V_TVALID,
        src_V_V_TREADY,
        dst_V,
        dst_V_ap_vld,
        sof_dst_V,
        sof_dst_V_ap_vld,
        eol_dst_V,
        eol_dst_V_ap_vld,
        dst_valid_dst_V,
        dst_valid_dst_V_ap_vld,
        src_valid_V,
        sof_src_V,
        hsync_V,
        hsync_V_ap_vld,
        vsync_V,
        vsync_V_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_true = 1'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv26_1 = 26'b1;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_54C0 = 32'b101010011000000;
parameter    ap_const_lv32_CE94 = 32'b1100111010010100;
parameter    ap_const_lv32_1680 = 32'b1011010000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_A = 32'b1010;

input   ap_clk;
input   ap_rst_n;
input  [15:0] src_V_V_TDATA;
input   src_V_V_TVALID;
output   src_V_V_TREADY;
output  [15:0] dst_V;
output   dst_V_ap_vld;
output  [0:0] sof_dst_V;
output   sof_dst_V_ap_vld;
output  [0:0] eol_dst_V;
output   eol_dst_V_ap_vld;
output  [0:0] dst_valid_dst_V;
output   dst_valid_dst_V_ap_vld;
input  [0:0] src_valid_V;
input  [0:0] sof_src_V;
output  [0:0] hsync_V;
output   hsync_V_ap_vld;
output  [0:0] vsync_V;
output   vsync_V_ap_vld;

reg src_V_V_TREADY;
reg dst_V_ap_vld;
reg sof_dst_V_ap_vld;
reg eol_dst_V_ap_vld;
reg dst_valid_dst_V_ap_vld;
reg hsync_V_ap_vld;
reg vsync_V_ap_vld;
reg    ap_rst_n_inv;
reg   [0:0] begin2pad = 1'b0;
reg   [0:0] readbuffer = 1'b0;
reg   [0:0] begin2buffer = 1'b0;
reg   [31:0] counter = 32'b00000000000000000000000000000000;
reg   [31:0] col_counter = 32'b00000000000000000000000000000000;
reg   [0:0] buff_in = 1'b0;
reg   [31:0] col_counter2 = 32'b00000000000000000000000000000000;
wire   [5:0] linebuffer1_V_address0;
reg    linebuffer1_V_ce0;
reg    linebuffer1_V_we0;
wire   [15:0] linebuffer1_V_d0;
wire   [5:0] linebuffer1_V_address1;
reg    linebuffer1_V_ce1;
wire   [15:0] linebuffer1_V_q1;
wire   [5:0] linebuffer1b_V_address0;
reg    linebuffer1b_V_ce0;
reg    linebuffer1b_V_we0;
wire   [15:0] linebuffer1b_V_d0;
wire   [5:0] linebuffer1b_V_address1;
reg    linebuffer1b_V_ce1;
wire   [15:0] linebuffer1b_V_q1;
wire   [5:0] linebuffer2_V_address0;
reg    linebuffer2_V_ce0;
wire   [15:0] linebuffer2_V_q0;
wire   [5:0] linebuffer2_V_address1;
reg    linebuffer2_V_ce1;
reg    linebuffer2_V_we1;
wire   [15:0] linebuffer2_V_d1;
wire   [5:0] linebuffer2b_V_address0;
reg    linebuffer2b_V_ce0;
reg    linebuffer2b_V_we0;
wire   [15:0] linebuffer2b_V_d0;
wire   [5:0] linebuffer2b_V_address1;
reg    linebuffer2b_V_ce1;
wire   [15:0] linebuffer2b_V_q1;
reg   [31:0] counter2 = 32'b00000000000000000000000000000000;
reg   [1:0] buff2read = 2'b00;
reg   [31:0] counter_rd1 = 32'b00000000000000000000000000000000;
reg   [31:0] counter_rd1b = 32'b00000000000000000000000000000000;
reg   [31:0] counter_rd2 = 32'b00000000000000000000000000000000;
reg   [31:0] counter_rd2b = 32'b00000000000000000000000000000000;
reg   [31:0] counter_pad = 32'b00000000000000000000000000000000;
reg   [31:0] counter3 = 32'b00000000000000000000000000000000;
reg   [0:0] beginvsync = 1'b0;
reg   [31:0] counter_vsync = 32'b00000000000000000000000000000000;
reg   [0:0] begin2pad_load_reg_1929;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_116;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] readbuffer_load_reg_1934;
wire   [0:0] icmp_fu_575_p2;
reg   [0:0] icmp_reg_1945;
wire   [0:0] icmp4_fu_608_p2;
reg   [0:0] icmp4_reg_1955;
wire   [0:0] icmp7_fu_641_p2;
reg   [0:0] icmp7_reg_1965;
wire   [0:0] icmp1_fu_674_p2;
reg   [0:0] icmp1_reg_1975;
wire   [0:0] sel_tmp_fu_699_p2;
reg   [0:0] sel_tmp_reg_1985;
wire   [0:0] sel_tmp5_fu_729_p2;
reg   [0:0] sel_tmp5_reg_1990;
wire   [0:0] sel_tmp7_fu_747_p2;
reg   [0:0] sel_tmp7_reg_1995;
wire   [0:0] sel_tmp9_fu_779_p2;
reg   [0:0] sel_tmp9_reg_2000;
wire   [0:0] tmp_26_fu_945_p2;
reg   [0:0] tmp_26_reg_2005;
wire   [0:0] tmp3_fu_981_p2;
reg   [0:0] tmp3_reg_2010;
wire   [0:0] tmp5_fu_993_p2;
reg   [0:0] tmp5_reg_2015;
wire   [0:0] cond_vld1_fu_1011_p2;
reg   [0:0] cond_vld1_reg_2020;
wire   [0:0] cond_vld2_fu_1029_p2;
reg   [0:0] cond_vld2_reg_2025;
wire   [0:0] cond_vld3_fu_1047_p2;
reg   [0:0] cond_vld3_reg_2030;
wire   [0:0] tmp7_fu_1089_p2;
reg   [0:0] tmp7_reg_2035;
wire   [0:0] cond_hsync1_fu_1107_p2;
reg   [0:0] cond_hsync1_reg_2040;
wire   [0:0] cond_hsync2_fu_1125_p2;
reg   [0:0] cond_hsync2_reg_2045;
wire   [0:0] cond_hsync3_fu_1143_p2;
reg   [0:0] cond_hsync3_reg_2050;
wire   [0:0] tmp10_fu_1185_p2;
reg   [0:0] tmp10_reg_2055;
wire   [0:0] col_counter_flag_3_fu_1211_p2;
wire   [0:0] col_counter2_flag_3_fu_1237_p2;
wire   [0:0] counter_rd1_flag_1_fu_1329_p2;
wire   [0:0] counter_rd1b_flag_2_fu_1359_p2;
wire   [0:0] counter_rd2_flag_3_fu_1381_p2;
wire   [0:0] counter_rd2b_flag_4_fu_1437_p2;
wire   [0:0] p_begin2buffer_flag_fu_1509_p2;
wire   [0:0] p_counter_flag_1_fu_1521_p2;
wire   [0:0] p_s_fu_1553_p2;
wire   [0:0] p_counter2_flag_fu_1565_p2;
wire   [0:0] tmp_57_fu_1579_p2;
reg   [0:0] tmp_57_reg_2100;
wire   [0:0] p_begin2pad_flag_fu_1597_p2;
wire   [0:0] p_buff_in_flag_1_fu_1615_p2;
wire   [0:0] p_buff2read_flag_3_fu_1645_p2;
wire   [0:0] p_counter_pad_flag_1_fu_1687_p2;
wire   [0:0] p_counter3_flag_1_fu_1707_p2;
wire   [0:0] begin2buffer_flag_fu_442_p2;
wire   [0:0] ap_reg_phiprechg_counter_flag_1_reg_296pp0_it0;
wire   [0:0] tmp_fu_476_p2;
reg   [0:0] counter_flag_1_phi_fu_299_p6;
wire   [0:0] buff_in_load_load_fu_482_p1;
wire   [31:0] ap_reg_phiprechg_counter_new_1_reg_309pp0_it0;
reg   [31:0] counter_new_1_phi_fu_312_p6;
wire   [31:0] tmp_1_fu_492_p2;
wire   [31:0] counter_loc_fu_457_p3;
wire   [31:0] ap_reg_phiprechg_counter_loc_1_reg_321pp0_it0;
reg   [31:0] counter_loc_1_phi_fu_324_p6;
wire   [0:0] ap_reg_phiprechg_col_counter_flag_2_reg_332pp0_it0;
reg   [0:0] col_counter_flag_2_phi_fu_335_p6;
wire   [31:0] ap_reg_phiprechg_col_counter_new_2_reg_344pp0_it0;
reg   [31:0] col_counter_new_2_phi_fu_347_p6;
wire   [31:0] tmp_5_fu_508_p2;
wire   [31:0] col_counter_loc_fu_466_p3;
wire   [31:0] ap_reg_phiprechg_col_counter_loc_2_reg_357pp0_it0;
reg   [31:0] col_counter_loc_2_phi_fu_360_p6;
wire   [0:0] ap_reg_phiprechg_col_counter2_flag_1_reg_368pp0_it0;
reg   [0:0] col_counter2_flag_1_phi_fu_371_p6;
wire   [31:0] ap_reg_phiprechg_col_counter2_loc_1_reg_382pp0_it0;
reg   [31:0] col_counter2_loc_1_phi_fu_385_p6;
wire   [31:0] tmp_3_fu_522_p2;
wire  signed [63:0] tmp_4_fu_502_p1;
wire  signed [63:0] tmp_2_fu_516_p1;
wire  signed [63:0] tmp_s_fu_587_p1;
wire  signed [63:0] tmp_13_fu_620_p1;
wire  signed [63:0] tmp_17_fu_653_p1;
wire  signed [63:0] tmp_20_fu_680_p1;
wire   [0:0] not_tmp_2_fu_1603_p2;
wire   [0:0] not_tmp_1_fu_1559_p2;
wire   [0:0] not_tmp_s_fu_1515_p2;
wire   [31:0] p_counter_new_1_fu_1527_p3;
wire   [31:0] col_counter_new_3_fu_1217_p3;
wire   [0:0] p_buff_in_new_1_fu_1621_p2;
wire   [31:0] col_counter2_new_3_fu_1243_p3;
wire   [31:0] p_counter2_loc_fu_1571_p3;
wire   [1:0] newSel2_fu_1673_p3;
wire   [31:0] counter_rd1_new_1_fu_1351_p3;
wire   [31:0] counter_rd1b_new_2_fu_1373_p3;
wire   [31:0] counter_rd2_new_3_fu_1387_p3;
wire   [31:0] counter_rd2b_new_4_fu_1459_p3;
wire   [31:0] p_counter_pad_new_1_fu_1699_p3;
wire   [31:0] p_counter3_loc_1_fu_1713_p3;
wire   [0:0] not_tmp_4_fu_1897_p2;
wire   [0:0] p_beginvsync_flag_fu_1892_p2;
wire   [31:0] p_counter_vsync_loc_fu_1909_p3;
wire   [0:0] p_counter_vsync_flag_fu_1903_p2;
wire   [0:0] brmerge_fu_414_p2;
wire   [0:0] not_brmerge_fu_436_p2;
wire   [31:0] p_counter_load_fu_420_p3;
wire   [31:0] p_col_counter_load_fu_428_p3;
wire   [0:0] begin2buffer_loc_fu_451_p2;
wire   [25:0] tmp_8_fu_565_p4;
wire   [25:0] tmp_11_fu_598_p4;
wire   [25:0] tmp_15_fu_631_p4;
wire   [25:0] tmp_19_fu_664_p4;
wire   [31:0] tmp_6_fu_553_p2;
wire   [0:0] tmp_7_fu_559_p2;
wire   [0:0] sel_tmp1_fu_705_p2;
wire   [0:0] tmp_9_fu_581_p2;
wire   [0:0] sel_tmp2_fu_711_p2;
wire   [0:0] sel_tmp3_fu_717_p2;
wire   [0:0] sel_tmp4_fu_723_p2;
wire   [0:0] tmp_12_fu_614_p2;
wire   [0:0] tmp_16_fu_647_p2;
wire   [0:0] sel_tmp6_fu_735_p2;
wire   [0:0] tmp1_fu_741_p2;
wire   [0:0] tmp345_demorgan_fu_753_p2;
wire   [0:0] tmp2_fu_759_p2;
wire   [31:0] tmp_10_fu_592_p2;
wire   [31:0] sel_tmp8_fu_771_p3;
wire   [31:0] sel_tmp10_fu_785_p3;
wire   [31:0] sel_tmp11_fu_793_p3;
wire   [31:0] sel_tmp12_fu_801_p3;
wire   [31:0] tmp_14_fu_625_p2;
wire   [31:0] sel_tmp13_fu_817_p3;
wire   [31:0] sel_tmp14_fu_825_p3;
wire   [31:0] sel_tmp15_fu_833_p3;
wire   [31:0] tmp_18_fu_658_p2;
wire   [31:0] sel_tmp16_fu_849_p3;
wire   [31:0] sel_tmp17_fu_857_p3;
wire   [31:0] tmp_21_fu_685_p2;
wire   [31:0] sel_tmp18_fu_873_p3;
wire   [31:0] tmp_22_fu_897_p2;
wire   [0:0] tmp_23_fu_903_p2;
wire   [31:0] tmp_24_fu_909_p2;
wire   [31:0] tmp_24_counter3_load_fu_915_p3;
wire   [31:0] counter2_loc_fu_691_p3;
wire   [31:0] counter_rd1_loc_fu_809_p3;
wire   [31:0] counter_rd2_loc_fu_865_p3;
wire   [31:0] counter_rd1b_loc_fu_841_p3;
wire   [31:0] counter_rd2b_loc_fu_881_p3;
wire   [31:0] counter_pad_loc_fu_923_p3;
wire   [0:0] cond_eol1_fu_951_p2;
wire   [0:0] cond_eol2_fu_957_p2;
wire   [0:0] cond_eol4_fu_969_p2;
wire   [0:0] cond_eol5_fu_975_p2;
wire   [0:0] tmp4_fu_987_p2;
wire   [0:0] cond_eol3_fu_963_p2;
wire   [0:0] tmp_27_fu_999_p2;
wire   [0:0] tmp_28_fu_1005_p2;
wire   [0:0] tmp_29_fu_1017_p2;
wire   [0:0] tmp_30_fu_1023_p2;
wire   [0:0] tmp_31_fu_1035_p2;
wire   [0:0] tmp_32_fu_1041_p2;
wire   [0:0] tmp_33_fu_1053_p2;
wire   [0:0] tmp_34_fu_1059_p2;
wire   [0:0] tmp_35_fu_1071_p2;
wire   [0:0] tmp_36_fu_1077_p2;
wire   [0:0] cond_vld4_fu_1065_p2;
wire   [0:0] cond_vld5_fu_1083_p2;
wire   [0:0] tmp_37_fu_1095_p2;
wire   [0:0] tmp_38_fu_1101_p2;
wire   [0:0] tmp_39_fu_1113_p2;
wire   [0:0] tmp_40_fu_1119_p2;
wire   [0:0] tmp_41_fu_1131_p2;
wire   [0:0] tmp_42_fu_1137_p2;
wire   [0:0] tmp_43_fu_1149_p2;
wire   [0:0] tmp_44_fu_1155_p2;
wire   [0:0] tmp_45_fu_1167_p2;
wire   [0:0] tmp_46_fu_1173_p2;
wire   [0:0] cond_hsync4_fu_1161_p2;
wire   [0:0] cond_hsync5_fu_1179_p2;
wire   [0:0] tmp_48_fu_1197_p2;
wire   [0:0] tmp_47_fu_1191_p2;
wire   [0:0] not_tmp_3_fu_1225_p2;
wire   [0:0] p_col_counter2_flag_1_fu_1231_p2;
wire   [31:0] p_col_counter2_loc_1_fu_1203_p3;
wire   [0:0] tmp_52_fu_1281_p2;
wire   [0:0] tmp_49_fu_1251_p2;
wire   [0:0] tmp_50_fu_1269_p2;
wire   [0:0] sel_tmp23_fu_1295_p2;
wire   [0:0] sel_tmp259_demorgan_fu_1307_p2;
wire   [0:0] tmp_51_fu_1275_p2;
wire   [0:0] sel_tmp25_fu_1313_p2;
wire   [0:0] counter_rd1_flag_fu_765_p2;
wire   [0:0] sel_tmp24_fu_1301_p2;
wire   [31:0] sel_tmp27_fu_1335_p3;
wire   [0:0] sel_tmp26_fu_1319_p2;
wire   [31:0] sel_tmp28_fu_1343_p3;
wire   [31:0] sel_tmp29_fu_1365_p3;
wire   [0:0] tmp_50_not_fu_1395_p2;
wire   [0:0] tmp_51_not_fu_1407_p2;
wire   [0:0] not_sel_tmp_fu_1401_p2;
wire   [0:0] not_sel_tmp1_fu_1413_p2;
wire   [0:0] tmp13_fu_1425_p2;
wire   [0:0] tmp12_fu_1419_p2;
wire   [0:0] sel_tmp30_fu_1431_p2;
wire   [31:0] p_counter_rd2b_loc_fu_1287_p3;
wire   [31:0] sel_tmp31_fu_1443_p3;
wire   [31:0] sel_tmp32_fu_1451_p3;
wire   [0:0] tmp_55_fu_1503_p2;
wire   [0:0] tmp_56_fu_1535_p2;
wire   [0:0] tmp_54_fu_1497_p2;
wire   [31:0] counter3_loc_1_fu_937_p3;
wire   [0:0] tmp14_fu_1609_p2;
wire   [0:0] tmp16_fu_1633_p2;
wire   [0:0] tmp17_fu_1639_p2;
wire   [0:0] tmp15_fu_1627_p2;
wire   [0:0] not_tmp_5_fu_1651_p2;
wire   [1:0] sel_tmp262_cast_fu_1325_p1;
wire   [1:0] newSel_cast_fu_1657_p3;
wire   [1:0] newSel1_fu_1665_p3;
wire   [0:0] tmp18_fu_1681_p2;
wire   [0:0] tmp_53_fu_1467_p2;
wire   [0:0] tmp_59_fu_1693_p2;
wire   [0:0] counter3_flag_1_fu_931_p2;
wire   [15:0] p_0131_0_i_fu_1751_p3;
wire   [15:0] p_0131_1_i_fu_1758_p3;
wire   [15:0] sel_tmp19_fu_1779_p3;
wire   [15:0] p_0131_2_i_fu_1765_p3;
wire   [15:0] sel_tmp20_fu_1786_p3;
wire   [15:0] p_0131_3_i_fu_1772_p3;
wire   [15:0] sel_tmp21_fu_1793_p3;
wire   [15:0] sel_tmp22_fu_1800_p3;
wire   [15:0] p_0131_8_i_fu_1807_p3;
wire   [31:0] tmp_25_fu_1830_p2;
wire   [0:0] tmp8_fu_1853_p2;
wire   [0:0] tmp6_fu_1849_p2;
wire   [0:0] tmp11_fu_1868_p2;
wire   [0:0] tmp9_fu_1864_p2;
wire   [31:0] counter_vsync_loc_fu_1836_p3;
wire   [0:0] tmp_58_fu_1886_p2;
reg   [0:0] ap_NS_fsm;
wire    ap_sig_pprstidle_pp0;


hls_cropping_vert_strm_linebuffer1_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( linebuffer1_V_address0 ),
    .ce0( linebuffer1_V_ce0 ),
    .we0( linebuffer1_V_we0 ),
    .d0( linebuffer1_V_d0 ),
    .address1( linebuffer1_V_address1 ),
    .ce1( linebuffer1_V_ce1 ),
    .q1( linebuffer1_V_q1 )
);

hls_cropping_vert_strm_linebuffer1_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer1b_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( linebuffer1b_V_address0 ),
    .ce0( linebuffer1b_V_ce0 ),
    .we0( linebuffer1b_V_we0 ),
    .d0( linebuffer1b_V_d0 ),
    .address1( linebuffer1b_V_address1 ),
    .ce1( linebuffer1b_V_ce1 ),
    .q1( linebuffer1b_V_q1 )
);

hls_cropping_vert_strm_linebuffer2_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( linebuffer2_V_address0 ),
    .ce0( linebuffer2_V_ce0 ),
    .q0( linebuffer2_V_q0 ),
    .address1( linebuffer2_V_address1 ),
    .ce1( linebuffer2_V_ce1 ),
    .we1( linebuffer2_V_we1 ),
    .d1( linebuffer2_V_d1 )
);

hls_cropping_vert_strm_linebuffer1_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer2b_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( linebuffer2b_V_address0 ),
    .ce0( linebuffer2b_V_ce0 ),
    .we0( linebuffer2b_V_we0 ),
    .d0( linebuffer2b_V_d0 ),
    .address1( linebuffer2b_V_address1 ),
    .ce1( linebuffer2b_V_ce1 ),
    .q1( linebuffer2b_V_q1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_begin2buffer_flag_fu_1509_p2))) begin
        begin2buffer <= not_tmp_s_fu_1515_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_begin2pad_flag_fu_1597_p2))) begin
        begin2pad <= not_tmp_2_fu_1603_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        begin2pad_load_reg_1929 <= begin2pad;
        cond_hsync1_reg_2040 <= cond_hsync1_fu_1107_p2;
        cond_hsync2_reg_2045 <= cond_hsync2_fu_1125_p2;
        cond_hsync3_reg_2050 <= cond_hsync3_fu_1143_p2;
        cond_vld1_reg_2020 <= cond_vld1_fu_1011_p2;
        cond_vld2_reg_2025 <= cond_vld2_fu_1029_p2;
        cond_vld3_reg_2030 <= cond_vld3_fu_1047_p2;
        icmp1_reg_1975 <= icmp1_fu_674_p2;
        icmp4_reg_1955 <= icmp4_fu_608_p2;
        icmp7_reg_1965 <= icmp7_fu_641_p2;
        icmp_reg_1945 <= icmp_fu_575_p2;
        readbuffer_load_reg_1934 <= readbuffer;
        sel_tmp5_reg_1990 <= sel_tmp5_fu_729_p2;
        sel_tmp7_reg_1995 <= sel_tmp7_fu_747_p2;
        sel_tmp9_reg_2000 <= sel_tmp9_fu_779_p2;
        sel_tmp_reg_1985 <= sel_tmp_fu_699_p2;
        tmp10_reg_2055 <= tmp10_fu_1185_p2;
        tmp3_reg_2010 <= tmp3_fu_981_p2;
        tmp5_reg_2015 <= tmp5_fu_993_p2;
        tmp7_reg_2035 <= tmp7_fu_1089_p2;
        tmp_26_reg_2005 <= tmp_26_fu_945_p2;
        tmp_57_reg_2100 <= tmp_57_fu_1579_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_beginvsync_flag_fu_1892_p2))) begin
        beginvsync <= not_tmp_4_fu_1897_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_buff2read_flag_3_fu_1645_p2))) begin
        buff2read <= newSel2_fu_1673_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_buff_in_flag_1_fu_1615_p2))) begin
        buff_in <= p_buff_in_new_1_fu_1621_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == col_counter_flag_3_fu_1211_p2))) begin
        col_counter <= col_counter_new_3_fu_1217_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == col_counter2_flag_3_fu_1237_p2))) begin
        col_counter2 <= col_counter2_new_3_fu_1243_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_counter_flag_1_fu_1521_p2))) begin
        counter <= p_counter_new_1_fu_1527_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_counter2_flag_fu_1565_p2))) begin
        counter2 <= p_counter2_loc_fu_1571_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_counter3_flag_1_fu_1707_p2))) begin
        counter3 <= p_counter3_loc_1_fu_1713_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_counter_pad_flag_1_fu_1687_p2))) begin
        counter_pad <= p_counter_pad_new_1_fu_1699_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == counter_rd1_flag_1_fu_1329_p2))) begin
        counter_rd1 <= counter_rd1_new_1_fu_1351_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == counter_rd1b_flag_2_fu_1359_p2))) begin
        counter_rd1b <= counter_rd1b_new_2_fu_1373_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == counter_rd2_flag_3_fu_1381_p2))) begin
        counter_rd2 <= counter_rd2_new_3_fu_1387_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == counter_rd2b_flag_4_fu_1437_p2))) begin
        counter_rd2b <= counter_rd2b_new_4_fu_1459_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_counter_vsync_flag_fu_1903_p2))) begin
        counter_vsync <= p_counter_vsync_loc_fu_1909_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_s_fu_1553_p2))) begin
        readbuffer <= not_tmp_1_fu_1559_p2;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. ///
always @ (ap_sig_bdd_116)
begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

assign ap_sig_pprstidle_pp0 = ap_const_logic_0;

/// col_counter2_flag_1_phi_fu_371_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1 or ap_reg_phiprechg_col_counter2_flag_1_reg_368pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        col_counter2_flag_1_phi_fu_371_p6 = ap_const_lv1_1;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_476_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1)))) begin
        col_counter2_flag_1_phi_fu_371_p6 = ap_const_lv1_0;
    end else begin
        col_counter2_flag_1_phi_fu_371_p6 = ap_reg_phiprechg_col_counter2_flag_1_reg_368pp0_it0;
    end
end

/// col_counter2_loc_1_phi_fu_385_p6 assign process. ///
always @ (col_counter2 or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1 or ap_reg_phiprechg_col_counter2_loc_1_reg_382pp0_it0 or tmp_3_fu_522_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        col_counter2_loc_1_phi_fu_385_p6 = tmp_3_fu_522_p2;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_476_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1)))) begin
        col_counter2_loc_1_phi_fu_385_p6 = col_counter2;
    end else begin
        col_counter2_loc_1_phi_fu_385_p6 = ap_reg_phiprechg_col_counter2_loc_1_reg_382pp0_it0;
    end
end

/// col_counter_flag_2_phi_fu_335_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or begin2buffer_flag_fu_442_p2 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1 or ap_reg_phiprechg_col_counter_flag_2_reg_332pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        col_counter_flag_2_phi_fu_335_p6 = ap_const_lv1_1;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_476_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1)))) begin
        col_counter_flag_2_phi_fu_335_p6 = begin2buffer_flag_fu_442_p2;
    end else begin
        col_counter_flag_2_phi_fu_335_p6 = ap_reg_phiprechg_col_counter_flag_2_reg_332pp0_it0;
    end
end

/// col_counter_loc_2_phi_fu_360_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1 or tmp_5_fu_508_p2 or col_counter_loc_fu_466_p3 or ap_reg_phiprechg_col_counter_loc_2_reg_357pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        col_counter_loc_2_phi_fu_360_p6 = tmp_5_fu_508_p2;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_476_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1)))) begin
        col_counter_loc_2_phi_fu_360_p6 = col_counter_loc_fu_466_p3;
    end else begin
        col_counter_loc_2_phi_fu_360_p6 = ap_reg_phiprechg_col_counter_loc_2_reg_357pp0_it0;
    end
end

/// col_counter_new_2_phi_fu_347_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1 or ap_reg_phiprechg_col_counter_new_2_reg_344pp0_it0 or tmp_5_fu_508_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        col_counter_new_2_phi_fu_347_p6 = tmp_5_fu_508_p2;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_476_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1)))) begin
        col_counter_new_2_phi_fu_347_p6 = ap_const_lv32_0;
    end else begin
        col_counter_new_2_phi_fu_347_p6 = ap_reg_phiprechg_col_counter_new_2_reg_344pp0_it0;
    end
end

/// counter_flag_1_phi_fu_299_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or begin2buffer_flag_fu_442_p2 or ap_reg_phiprechg_counter_flag_1_reg_296pp0_it0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1)))) begin
        counter_flag_1_phi_fu_299_p6 = ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_476_p2))) begin
        counter_flag_1_phi_fu_299_p6 = begin2buffer_flag_fu_442_p2;
    end else begin
        counter_flag_1_phi_fu_299_p6 = ap_reg_phiprechg_counter_flag_1_reg_296pp0_it0;
    end
end

/// counter_loc_1_phi_fu_324_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1 or tmp_1_fu_492_p2 or counter_loc_fu_457_p3 or ap_reg_phiprechg_counter_loc_1_reg_321pp0_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1)))) begin
        counter_loc_1_phi_fu_324_p6 = tmp_1_fu_492_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_476_p2))) begin
        counter_loc_1_phi_fu_324_p6 = counter_loc_fu_457_p3;
    end else begin
        counter_loc_1_phi_fu_324_p6 = ap_reg_phiprechg_counter_loc_1_reg_321pp0_it0;
    end
end

/// counter_new_1_phi_fu_312_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1 or ap_reg_phiprechg_counter_new_1_reg_309pp0_it0 or tmp_1_fu_492_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1)))) begin
        counter_new_1_phi_fu_312_p6 = tmp_1_fu_492_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_476_p2))) begin
        counter_new_1_phi_fu_312_p6 = ap_const_lv32_0;
    end else begin
        counter_new_1_phi_fu_312_p6 = ap_reg_phiprechg_counter_new_1_reg_309pp0_it0;
    end
end

/// dst_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        dst_V_ap_vld = ap_const_logic_1;
    end else begin
        dst_V_ap_vld = ap_const_logic_0;
    end
end

/// dst_valid_dst_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        dst_valid_dst_V_ap_vld = ap_const_logic_1;
    end else begin
        dst_valid_dst_V_ap_vld = ap_const_logic_0;
    end
end

/// eol_dst_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        eol_dst_V_ap_vld = ap_const_logic_1;
    end else begin
        eol_dst_V_ap_vld = ap_const_logic_0;
    end
end

/// hsync_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        hsync_V_ap_vld = ap_const_logic_1;
    end else begin
        hsync_V_ap_vld = ap_const_logic_0;
    end
end

/// linebuffer1_V_ce0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer1_V_ce0 = ap_const_logic_1;
    end else begin
        linebuffer1_V_ce0 = ap_const_logic_0;
    end
end

/// linebuffer1_V_ce1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer1_V_ce1 = ap_const_logic_1;
    end else begin
        linebuffer1_V_ce1 = ap_const_logic_0;
    end
end

/// linebuffer1_V_we0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        linebuffer1_V_we0 = ap_const_logic_1;
    end else begin
        linebuffer1_V_we0 = ap_const_logic_0;
    end
end

/// linebuffer1b_V_ce0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer1b_V_ce0 = ap_const_logic_1;
    end else begin
        linebuffer1b_V_ce0 = ap_const_logic_0;
    end
end

/// linebuffer1b_V_ce1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer1b_V_ce1 = ap_const_logic_1;
    end else begin
        linebuffer1b_V_ce1 = ap_const_logic_0;
    end
end

/// linebuffer1b_V_we0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        linebuffer1b_V_we0 = ap_const_logic_1;
    end else begin
        linebuffer1b_V_we0 = ap_const_logic_0;
    end
end

/// linebuffer2_V_ce0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer2_V_ce0 = ap_const_logic_1;
    end else begin
        linebuffer2_V_ce0 = ap_const_logic_0;
    end
end

/// linebuffer2_V_ce1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer2_V_ce1 = ap_const_logic_1;
    end else begin
        linebuffer2_V_ce1 = ap_const_logic_0;
    end
end

/// linebuffer2_V_we1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        linebuffer2_V_we1 = ap_const_logic_1;
    end else begin
        linebuffer2_V_we1 = ap_const_logic_0;
    end
end

/// linebuffer2b_V_ce0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer2b_V_ce0 = ap_const_logic_1;
    end else begin
        linebuffer2b_V_ce0 = ap_const_logic_0;
    end
end

/// linebuffer2b_V_ce1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer2b_V_ce1 = ap_const_logic_1;
    end else begin
        linebuffer2b_V_ce1 = ap_const_logic_0;
    end
end

/// linebuffer2b_V_we0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_476_p2 or buff_in_load_load_fu_482_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == tmp_fu_476_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_482_p1))) begin
        linebuffer2b_V_we0 = ap_const_logic_1;
    end else begin
        linebuffer2b_V_we0 = ap_const_logic_0;
    end
end

/// sof_dst_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        sof_dst_V_ap_vld = ap_const_logic_1;
    end else begin
        sof_dst_V_ap_vld = ap_const_logic_0;
    end
end

/// src_V_V_TREADY assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        src_V_V_TREADY = ap_const_logic_1;
    end else begin
        src_V_V_TREADY = ap_const_logic_0;
    end
end

/// vsync_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        vsync_V_ap_vld = ap_const_logic_1;
    end else begin
        vsync_V_ap_vld = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (src_V_V_TVALID or ap_CS_fsm or ap_sig_pprstidle_pp0)
begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_phiprechg_col_counter2_flag_1_reg_368pp0_it0 = 'bx;
assign ap_reg_phiprechg_col_counter2_loc_1_reg_382pp0_it0 = 'bx;
assign ap_reg_phiprechg_col_counter_flag_2_reg_332pp0_it0 = 'bx;
assign ap_reg_phiprechg_col_counter_loc_2_reg_357pp0_it0 = 'bx;
assign ap_reg_phiprechg_col_counter_new_2_reg_344pp0_it0 = 'bx;
assign ap_reg_phiprechg_counter_flag_1_reg_296pp0_it0 = 'bx;
assign ap_reg_phiprechg_counter_loc_1_reg_321pp0_it0 = 'bx;
assign ap_reg_phiprechg_counter_new_1_reg_309pp0_it0 = 'bx;
assign ap_reg_ppiten_pp0_it0 = ap_const_logic_1;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_116 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_116 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign begin2buffer_flag_fu_442_p2 = (sof_src_V & not_brmerge_fu_436_p2);
assign begin2buffer_loc_fu_451_p2 = (begin2buffer | begin2buffer_flag_fu_442_p2);
assign brmerge_fu_414_p2 = (begin2pad | readbuffer);
assign buff_in_load_load_fu_482_p1 = buff_in;
assign col_counter2_flag_3_fu_1237_p2 = (col_counter2_flag_1_phi_fu_371_p6 | p_col_counter2_flag_1_fu_1231_p2);
assign col_counter2_new_3_fu_1243_p3 = ((tmp_47_fu_1191_p2)? col_counter2_loc_1_phi_fu_385_p6: p_col_counter2_loc_1_fu_1203_p3);
assign col_counter_flag_3_fu_1211_p2 = (tmp_47_fu_1191_p2 | col_counter_flag_2_phi_fu_335_p6);
assign col_counter_loc_fu_466_p3 = ((brmerge_fu_414_p2)? col_counter: p_col_counter_load_fu_428_p3);
assign col_counter_new_3_fu_1217_p3 = ((tmp_47_fu_1191_p2)? ap_const_lv32_0: col_counter_new_2_phi_fu_347_p6);
assign cond_eol1_fu_951_p2 = (counter_rd1_loc_fu_809_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign cond_eol2_fu_957_p2 = (counter_rd2_loc_fu_865_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign cond_eol3_fu_963_p2 = (counter_rd1b_loc_fu_841_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign cond_eol4_fu_969_p2 = (counter_rd2b_loc_fu_881_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign cond_eol5_fu_975_p2 = (counter_pad_loc_fu_923_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign cond_hsync1_fu_1107_p2 = (tmp_37_fu_1095_p2 & tmp_38_fu_1101_p2);
assign cond_hsync2_fu_1125_p2 = (tmp_39_fu_1113_p2 & tmp_40_fu_1119_p2);
assign cond_hsync3_fu_1143_p2 = (tmp_41_fu_1131_p2 & tmp_42_fu_1137_p2);
assign cond_hsync4_fu_1161_p2 = (tmp_43_fu_1149_p2 & tmp_44_fu_1155_p2);
assign cond_hsync5_fu_1179_p2 = (tmp_45_fu_1167_p2 & tmp_46_fu_1173_p2);
assign cond_vld1_fu_1011_p2 = (tmp_27_fu_999_p2 & tmp_28_fu_1005_p2);
assign cond_vld2_fu_1029_p2 = (tmp_29_fu_1017_p2 & tmp_30_fu_1023_p2);
assign cond_vld3_fu_1047_p2 = (tmp_31_fu_1035_p2 & tmp_32_fu_1041_p2);
assign cond_vld4_fu_1065_p2 = (tmp_33_fu_1053_p2 & tmp_34_fu_1059_p2);
assign cond_vld5_fu_1083_p2 = (tmp_35_fu_1071_p2 & tmp_36_fu_1077_p2);
assign counter2_loc_fu_691_p3 = ((readbuffer)? tmp_6_fu_553_p2: counter2);
assign counter3_flag_1_fu_931_p2 = (begin2pad & tmp_23_fu_903_p2);
assign counter3_loc_1_fu_937_p3 = ((begin2pad)? tmp_24_counter3_load_fu_915_p3: counter3);
assign counter_loc_fu_457_p3 = ((brmerge_fu_414_p2)? counter: p_counter_load_fu_420_p3);
assign counter_pad_loc_fu_923_p3 = ((begin2pad)? tmp_22_fu_897_p2: counter_pad);
assign counter_rd1_flag_1_fu_1329_p2 = (counter_rd1_flag_fu_765_p2 | tmp_49_fu_1251_p2);
assign counter_rd1_flag_fu_765_p2 = (sel_tmp_fu_699_p2 & tmp2_fu_759_p2);
assign counter_rd1_loc_fu_809_p3 = ((readbuffer)? sel_tmp12_fu_801_p3: counter_rd1);
assign counter_rd1_new_1_fu_1351_p3 = ((sel_tmp26_fu_1319_p2)? counter_rd1_loc_fu_809_p3: sel_tmp28_fu_1343_p3);
assign counter_rd1b_flag_2_fu_1359_p2 = (sel_tmp9_fu_779_p2 | sel_tmp24_fu_1301_p2);
assign counter_rd1b_loc_fu_841_p3 = ((readbuffer)? sel_tmp15_fu_833_p3: counter_rd1b);
assign counter_rd1b_new_2_fu_1373_p3 = ((sel_tmp26_fu_1319_p2)? counter_rd1b_loc_fu_841_p3: sel_tmp29_fu_1365_p3);
assign counter_rd2_flag_3_fu_1381_p2 = (sel_tmp26_fu_1319_p2 | sel_tmp5_fu_729_p2);
assign counter_rd2_loc_fu_865_p3 = ((readbuffer)? sel_tmp17_fu_857_p3: counter_rd2);
assign counter_rd2_new_3_fu_1387_p3 = ((sel_tmp26_fu_1319_p2)? ap_const_lv32_0: counter_rd2_loc_fu_865_p3);
assign counter_rd2b_flag_4_fu_1437_p2 = (sel_tmp7_fu_747_p2 | sel_tmp30_fu_1431_p2);
assign counter_rd2b_loc_fu_881_p3 = ((readbuffer)? sel_tmp18_fu_873_p3: counter_rd2b);
assign counter_rd2b_new_4_fu_1459_p3 = ((sel_tmp26_fu_1319_p2)? counter_rd2b_loc_fu_881_p3: sel_tmp32_fu_1451_p3);
assign counter_vsync_loc_fu_1836_p3 = ((beginvsync)? tmp_25_fu_1830_p2: counter_vsync);
assign dst_V = ((begin2pad_load_reg_1929)? ap_const_lv16_0: p_0131_8_i_fu_1807_p3);
assign dst_valid_dst_V = (tmp8_fu_1853_p2 | tmp6_fu_1849_p2);
assign eol_dst_V = (tmp5_reg_2015 | tmp3_reg_2010);
assign hsync_V = (tmp11_fu_1868_p2 | tmp9_fu_1864_p2);
assign icmp1_fu_674_p2 = ($signed(tmp_19_fu_664_p4) < $signed(26'b1)? 1'b1: 1'b0);
assign icmp4_fu_608_p2 = ($signed(tmp_11_fu_598_p4) < $signed(26'b1)? 1'b1: 1'b0);
assign icmp7_fu_641_p2 = ($signed(tmp_15_fu_631_p4) < $signed(26'b1)? 1'b1: 1'b0);
assign icmp_fu_575_p2 = ($signed(tmp_8_fu_565_p4) < $signed(26'b1)? 1'b1: 1'b0);
assign linebuffer1_V_address0 = tmp_4_fu_502_p1;
assign linebuffer1_V_address1 = tmp_s_fu_587_p1;
assign linebuffer1_V_d0 = src_V_V_TDATA;
assign linebuffer1b_V_address0 = tmp_4_fu_502_p1;
assign linebuffer1b_V_address1 = tmp_13_fu_620_p1;
assign linebuffer1b_V_d0 = src_V_V_TDATA;
assign linebuffer2_V_address0 = tmp_17_fu_653_p1;
assign linebuffer2_V_address1 = tmp_2_fu_516_p1;
assign linebuffer2_V_d1 = src_V_V_TDATA;
assign linebuffer2b_V_address0 = tmp_2_fu_516_p1;
assign linebuffer2b_V_address1 = tmp_20_fu_680_p1;
assign linebuffer2b_V_d0 = src_V_V_TDATA;
assign newSel1_fu_1665_p3 = ((sel_tmp24_fu_1301_p2)? ap_const_lv2_2: sel_tmp262_cast_fu_1325_p1);
assign newSel2_fu_1673_p3 = ((tmp16_fu_1633_p2)? newSel_cast_fu_1657_p3: newSel1_fu_1665_p3);
assign newSel_cast_fu_1657_p3 = ((not_tmp_5_fu_1651_p2)? ap_const_lv2_3: ap_const_lv2_0);
assign not_brmerge_fu_436_p2 = (brmerge_fu_414_p2 ^ ap_const_lv1_1);
assign not_sel_tmp1_fu_1413_p2 = (sel_tmp259_demorgan_fu_1307_p2 | tmp_51_not_fu_1407_p2);
assign not_sel_tmp_fu_1401_p2 = (tmp_49_fu_1251_p2 | tmp_50_not_fu_1395_p2);
assign not_tmp_1_fu_1559_p2 = (tmp_56_fu_1535_p2 ^ ap_const_lv1_1);
assign not_tmp_2_fu_1603_p2 = (tmp_57_fu_1579_p2 ^ ap_const_lv1_1);
assign not_tmp_3_fu_1225_p2 = (tmp_47_fu_1191_p2 ^ ap_const_lv1_1);
assign not_tmp_4_fu_1897_p2 = (tmp_58_fu_1886_p2 ^ ap_const_lv1_1);
assign not_tmp_5_fu_1651_p2 = (tmp_57_fu_1579_p2 ^ ap_const_lv1_1);
assign not_tmp_s_fu_1515_p2 = (tmp_55_fu_1503_p2 ^ ap_const_lv1_1);
assign p_0131_0_i_fu_1751_p3 = ((icmp_reg_1945)? linebuffer1_V_q1: ap_const_lv16_0);
assign p_0131_1_i_fu_1758_p3 = ((icmp4_reg_1955)? linebuffer1b_V_q1: ap_const_lv16_0);
assign p_0131_2_i_fu_1765_p3 = ((icmp7_reg_1965)? linebuffer2_V_q0: ap_const_lv16_0);
assign p_0131_3_i_fu_1772_p3 = ((icmp1_reg_1975)? linebuffer2b_V_q1: ap_const_lv16_0);
assign p_0131_8_i_fu_1807_p3 = ((readbuffer_load_reg_1934)? sel_tmp22_fu_1800_p3: ap_const_lv16_0);
assign p_begin2buffer_flag_fu_1509_p2 = (tmp_55_fu_1503_p2 | begin2buffer_flag_fu_442_p2);
assign p_begin2pad_flag_fu_1597_p2 = (tmp_57_fu_1579_p2 | tmp_56_fu_1535_p2);
assign p_beginvsync_flag_fu_1892_p2 = (tmp_58_fu_1886_p2 | tmp_57_reg_2100);
assign p_buff2read_flag_3_fu_1645_p2 = (tmp17_fu_1639_p2 | tmp15_fu_1627_p2);
assign p_buff_in_flag_1_fu_1615_p2 = (tmp14_fu_1609_p2 | tmp_47_fu_1191_p2);
assign p_buff_in_new_1_fu_1621_p2 = (tmp_47_fu_1191_p2 & not_tmp_2_fu_1603_p2);
assign p_col_counter2_flag_1_fu_1231_p2 = (tmp_48_fu_1197_p2 & not_tmp_3_fu_1225_p2);
assign p_col_counter2_loc_1_fu_1203_p3 = ((tmp_48_fu_1197_p2)? ap_const_lv32_0: col_counter2_loc_1_phi_fu_385_p6);
assign p_col_counter_load_fu_428_p3 = ((sof_src_V)? ap_const_lv32_0: col_counter);
assign p_counter2_flag_fu_1565_p2 = (tmp_56_fu_1535_p2 | readbuffer);
assign p_counter2_loc_fu_1571_p3 = ((tmp_56_fu_1535_p2)? ap_const_lv32_0: counter2_loc_fu_691_p3);
assign p_counter3_flag_1_fu_1707_p2 = (tmp_57_fu_1579_p2 | counter3_flag_1_fu_931_p2);
assign p_counter3_loc_1_fu_1713_p3 = ((tmp_57_fu_1579_p2)? ap_const_lv32_0: counter3_loc_1_fu_937_p3);
assign p_counter_flag_1_fu_1521_p2 = (tmp_55_fu_1503_p2 | counter_flag_1_phi_fu_299_p6);
assign p_counter_load_fu_420_p3 = ((sof_src_V)? ap_const_lv32_0: counter);
assign p_counter_new_1_fu_1527_p3 = ((tmp_55_fu_1503_p2)? ap_const_lv32_0: counter_new_1_phi_fu_312_p6);
assign p_counter_pad_flag_1_fu_1687_p2 = (tmp18_fu_1681_p2 | tmp_53_fu_1467_p2);
assign p_counter_pad_new_1_fu_1699_p3 = ((tmp_59_fu_1693_p2)? ap_const_lv32_0: counter_pad_loc_fu_923_p3);
assign p_counter_rd2b_loc_fu_1287_p3 = ((tmp_52_fu_1281_p2)? ap_const_lv32_0: counter_rd2b_loc_fu_881_p3);
assign p_counter_vsync_flag_fu_1903_p2 = (tmp_58_fu_1886_p2 | beginvsync);
assign p_counter_vsync_loc_fu_1909_p3 = ((tmp_58_fu_1886_p2)? ap_const_lv32_0: counter_vsync_loc_fu_1836_p3);
assign p_s_fu_1553_p2 = (tmp_56_fu_1535_p2 | tmp_54_fu_1497_p2);
assign sel_tmp10_fu_785_p3 = ((sel_tmp9_fu_779_p2)? counter_rd1: sel_tmp8_fu_771_p3);
assign sel_tmp11_fu_793_p3 = ((sel_tmp5_fu_729_p2)? counter_rd1: sel_tmp10_fu_785_p3);
assign sel_tmp12_fu_801_p3 = ((sel_tmp7_fu_747_p2)? counter_rd1: sel_tmp11_fu_793_p3);
assign sel_tmp13_fu_817_p3 = ((sel_tmp9_fu_779_p2)? tmp_14_fu_625_p2: counter_rd1b);
assign sel_tmp14_fu_825_p3 = ((sel_tmp5_fu_729_p2)? counter_rd1b: sel_tmp13_fu_817_p3);
assign sel_tmp15_fu_833_p3 = ((sel_tmp7_fu_747_p2)? counter_rd1b: sel_tmp14_fu_825_p3);
assign sel_tmp16_fu_849_p3 = ((sel_tmp5_fu_729_p2)? tmp_18_fu_658_p2: counter_rd2);
assign sel_tmp17_fu_857_p3 = ((sel_tmp7_fu_747_p2)? counter_rd2: sel_tmp16_fu_849_p3);
assign sel_tmp18_fu_873_p3 = ((sel_tmp7_fu_747_p2)? tmp_21_fu_685_p2: counter_rd2b);
assign sel_tmp19_fu_1779_p3 = ((sel_tmp_reg_1985)? p_0131_0_i_fu_1751_p3: ap_const_lv16_0);
assign sel_tmp1_fu_705_p2 = (tmp_7_fu_559_p2 ^ ap_const_lv1_1);
assign sel_tmp20_fu_1786_p3 = ((sel_tmp9_reg_2000)? p_0131_1_i_fu_1758_p3: sel_tmp19_fu_1779_p3);
assign sel_tmp21_fu_1793_p3 = ((sel_tmp5_reg_1990)? p_0131_2_i_fu_1765_p3: sel_tmp20_fu_1786_p3);
assign sel_tmp22_fu_1800_p3 = ((sel_tmp7_reg_1995)? p_0131_3_i_fu_1772_p3: sel_tmp21_fu_1793_p3);
assign sel_tmp23_fu_1295_p2 = (tmp_49_fu_1251_p2 ^ ap_const_lv1_1);
assign sel_tmp24_fu_1301_p2 = (tmp_50_fu_1269_p2 & sel_tmp23_fu_1295_p2);
assign sel_tmp259_demorgan_fu_1307_p2 = (tmp_49_fu_1251_p2 | tmp_50_fu_1269_p2);
assign sel_tmp25_fu_1313_p2 = (sel_tmp259_demorgan_fu_1307_p2 ^ ap_const_lv1_1);
assign sel_tmp262_cast_fu_1325_p1 = tmp_49_fu_1251_p2;
assign sel_tmp26_fu_1319_p2 = (tmp_51_fu_1275_p2 & sel_tmp25_fu_1313_p2);
assign sel_tmp27_fu_1335_p3 = ((tmp_49_fu_1251_p2)? ap_const_lv32_0: counter_rd1_loc_fu_809_p3);
assign sel_tmp28_fu_1343_p3 = ((sel_tmp24_fu_1301_p2)? counter_rd1_loc_fu_809_p3: sel_tmp27_fu_1335_p3);
assign sel_tmp29_fu_1365_p3 = ((sel_tmp24_fu_1301_p2)? ap_const_lv32_0: counter_rd1b_loc_fu_841_p3);
assign sel_tmp2_fu_711_p2 = (readbuffer & sel_tmp1_fu_705_p2);
assign sel_tmp30_fu_1431_p2 = (tmp13_fu_1425_p2 & tmp12_fu_1419_p2);
assign sel_tmp31_fu_1443_p3 = ((tmp_49_fu_1251_p2)? counter_rd2b_loc_fu_881_p3: p_counter_rd2b_loc_fu_1287_p3);
assign sel_tmp32_fu_1451_p3 = ((sel_tmp24_fu_1301_p2)? counter_rd2b_loc_fu_881_p3: sel_tmp31_fu_1443_p3);
assign sel_tmp3_fu_717_p2 = (tmp_9_fu_581_p2 ^ ap_const_lv1_1);
assign sel_tmp4_fu_723_p2 = (sel_tmp2_fu_711_p2 & sel_tmp3_fu_717_p2);
assign sel_tmp5_fu_729_p2 = (sel_tmp4_fu_723_p2 & tmp_12_fu_614_p2);
assign sel_tmp6_fu_735_p2 = (tmp_12_fu_614_p2 ^ ap_const_lv1_1);
assign sel_tmp7_fu_747_p2 = (tmp1_fu_741_p2 & sel_tmp4_fu_723_p2);
assign sel_tmp8_fu_771_p3 = ((sel_tmp_fu_699_p2)? tmp_10_fu_592_p2: counter_rd1);
assign sel_tmp9_fu_779_p2 = (sel_tmp2_fu_711_p2 & tmp_9_fu_581_p2);
assign sel_tmp_fu_699_p2 = (readbuffer & tmp_7_fu_559_p2);
assign sof_dst_V = tmp_26_reg_2005;
assign tmp10_fu_1185_p2 = (cond_hsync4_fu_1161_p2 | cond_hsync5_fu_1179_p2);
assign tmp11_fu_1868_p2 = (tmp10_reg_2055 | cond_hsync3_reg_2050);
assign tmp12_fu_1419_p2 = (tmp_52_fu_1281_p2 & sel_tmp23_fu_1295_p2);
assign tmp13_fu_1425_p2 = (not_sel_tmp_fu_1401_p2 & not_sel_tmp1_fu_1413_p2);
assign tmp14_fu_1609_p2 = (tmp_48_fu_1197_p2 | tmp_57_fu_1579_p2);
assign tmp15_fu_1627_p2 = (tmp_49_fu_1251_p2 | tmp_52_fu_1281_p2);
assign tmp16_fu_1633_p2 = (sel_tmp26_fu_1319_p2 | tmp_57_fu_1579_p2);
assign tmp17_fu_1639_p2 = (tmp16_fu_1633_p2 | sel_tmp24_fu_1301_p2);
assign tmp18_fu_1681_p2 = (begin2pad | tmp_57_fu_1579_p2);
assign tmp1_fu_741_p2 = (tmp_16_fu_647_p2 & sel_tmp6_fu_735_p2);
assign tmp2_fu_759_p2 = (tmp345_demorgan_fu_753_p2 ^ ap_const_lv1_1);
assign tmp345_demorgan_fu_753_p2 = (sel_tmp5_fu_729_p2 | sel_tmp7_fu_747_p2);
assign tmp3_fu_981_p2 = (cond_eol1_fu_951_p2 | cond_eol2_fu_957_p2);
assign tmp4_fu_987_p2 = (cond_eol4_fu_969_p2 | cond_eol5_fu_975_p2);
assign tmp5_fu_993_p2 = (tmp4_fu_987_p2 | cond_eol3_fu_963_p2);
assign tmp6_fu_1849_p2 = (cond_vld1_reg_2020 | cond_vld2_reg_2025);
assign tmp7_fu_1089_p2 = (cond_vld4_fu_1065_p2 | cond_vld5_fu_1083_p2);
assign tmp8_fu_1853_p2 = (tmp7_reg_2035 | cond_vld3_reg_2030);
assign tmp9_fu_1864_p2 = (cond_hsync1_reg_2040 | cond_hsync2_reg_2045);
assign tmp_10_fu_592_p2 = (counter_rd1 + ap_const_lv32_1);
assign tmp_11_fu_598_p4 = {{counter_rd1b[ap_const_lv32_1F : ap_const_lv32_6]}};
assign tmp_12_fu_614_p2 = (buff2read == ap_const_lv2_2? 1'b1: 1'b0);
assign tmp_13_fu_620_p1 = $signed(counter_rd1b);
assign tmp_14_fu_625_p2 = (counter_rd1b + ap_const_lv32_1);
assign tmp_15_fu_631_p4 = {{counter_rd2[ap_const_lv32_1F : ap_const_lv32_6]}};
assign tmp_16_fu_647_p2 = (buff2read == ap_const_lv2_3? 1'b1: 1'b0);
assign tmp_17_fu_653_p1 = $signed(counter_rd2);
assign tmp_18_fu_658_p2 = (counter_rd2 + ap_const_lv32_1);
assign tmp_19_fu_664_p4 = {{counter_rd2b[ap_const_lv32_1F : ap_const_lv32_6]}};
assign tmp_1_fu_492_p2 = (counter_loc_fu_457_p3 + ap_const_lv32_1);
assign tmp_20_fu_680_p1 = $signed(counter_rd2b);
assign tmp_21_fu_685_p2 = (counter_rd2b + ap_const_lv32_1);
assign tmp_22_fu_897_p2 = (counter_pad + ap_const_lv32_1);
assign tmp_23_fu_903_p2 = ($signed(tmp_22_fu_897_p2) < $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_24_counter3_load_fu_915_p3 = ((tmp_23_fu_903_p2)? tmp_24_fu_909_p2: counter3);
assign tmp_24_fu_909_p2 = (counter3 + ap_const_lv32_1);
assign tmp_25_fu_1830_p2 = (counter_vsync + ap_const_lv32_1);
assign tmp_26_fu_945_p2 = (counter2_loc_fu_691_p3 == ap_const_lv32_1? 1'b1: 1'b0);
assign tmp_27_fu_999_p2 = ($signed(counter_rd1_loc_fu_809_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_28_fu_1005_p2 = ($signed(counter_rd1_loc_fu_809_p3) < $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_29_fu_1017_p2 = ($signed(counter_rd1b_loc_fu_841_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_2_fu_516_p1 = $signed(col_counter2);
assign tmp_30_fu_1023_p2 = ($signed(counter_rd1b_loc_fu_841_p3) < $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_31_fu_1035_p2 = ($signed(counter_rd2_loc_fu_865_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_32_fu_1041_p2 = ($signed(counter_rd2_loc_fu_865_p3) < $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_33_fu_1053_p2 = ($signed(counter_rd2b_loc_fu_881_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_34_fu_1059_p2 = ($signed(counter_rd2b_loc_fu_881_p3) < $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_35_fu_1071_p2 = ($signed(counter_pad_loc_fu_923_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_36_fu_1077_p2 = ($signed(counter_pad_loc_fu_923_p3) < $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_37_fu_1095_p2 = ($signed(counter_rd1_loc_fu_809_p3) > $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_38_fu_1101_p2 = ($signed(counter_rd1_loc_fu_809_p3) < $signed(32'b1001110)? 1'b1: 1'b0);
assign tmp_39_fu_1113_p2 = ($signed(counter_rd1b_loc_fu_841_p3) > $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_3_fu_522_p2 = (col_counter2 + ap_const_lv32_1);
assign tmp_40_fu_1119_p2 = ($signed(counter_rd1b_loc_fu_841_p3) < $signed(32'b1001110)? 1'b1: 1'b0);
assign tmp_41_fu_1131_p2 = ($signed(counter_rd2_loc_fu_865_p3) > $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_42_fu_1137_p2 = ($signed(counter_rd2_loc_fu_865_p3) < $signed(32'b1001110)? 1'b1: 1'b0);
assign tmp_43_fu_1149_p2 = ($signed(counter_rd2b_loc_fu_881_p3) > $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_44_fu_1155_p2 = ($signed(counter_rd2b_loc_fu_881_p3) < $signed(32'b1001110)? 1'b1: 1'b0);
assign tmp_45_fu_1167_p2 = ($signed(counter_pad_loc_fu_923_p3) > $signed(32'b1000001)? 1'b1: 1'b0);
assign tmp_46_fu_1173_p2 = ($signed(counter_pad_loc_fu_923_p3) < $signed(32'b1001110)? 1'b1: 1'b0);
assign tmp_47_fu_1191_p2 = (col_counter_loc_2_phi_fu_360_p6 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_48_fu_1197_p2 = (col_counter2_loc_1_phi_fu_385_p6 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_49_fu_1251_p2 = (counter_rd1_loc_fu_809_p3 == ap_const_lv32_4E? 1'b1: 1'b0);
assign tmp_4_fu_502_p1 = $signed(col_counter_loc_fu_466_p3);
assign tmp_50_fu_1269_p2 = (counter_rd1b_loc_fu_841_p3 == ap_const_lv32_4E? 1'b1: 1'b0);
assign tmp_50_not_fu_1395_p2 = (tmp_50_fu_1269_p2 ^ ap_const_lv1_1);
assign tmp_51_fu_1275_p2 = (counter_rd2_loc_fu_865_p3 == ap_const_lv32_4E? 1'b1: 1'b0);
assign tmp_51_not_fu_1407_p2 = (tmp_51_fu_1275_p2 ^ ap_const_lv1_1);
assign tmp_52_fu_1281_p2 = (counter_rd2b_loc_fu_881_p3 == ap_const_lv32_4E? 1'b1: 1'b0);
assign tmp_53_fu_1467_p2 = (counter_pad_loc_fu_923_p3 == ap_const_lv32_4E? 1'b1: 1'b0);
assign tmp_54_fu_1497_p2 = (counter_loc_1_phi_fu_324_p6 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_55_fu_1503_p2 = (counter_loc_1_phi_fu_324_p6 == ap_const_lv32_54C0? 1'b1: 1'b0);
assign tmp_56_fu_1535_p2 = (counter2_loc_fu_691_p3 == ap_const_lv32_CE94? 1'b1: 1'b0);
assign tmp_57_fu_1579_p2 = (counter3_loc_1_fu_937_p3 == ap_const_lv32_1680? 1'b1: 1'b0);
assign tmp_58_fu_1886_p2 = (counter_vsync_loc_fu_1836_p3 == ap_const_lv32_A? 1'b1: 1'b0);
assign tmp_59_fu_1693_p2 = (tmp_57_fu_1579_p2 | tmp_53_fu_1467_p2);
assign tmp_5_fu_508_p2 = (col_counter_loc_fu_466_p3 + ap_const_lv32_1);
assign tmp_6_fu_553_p2 = (counter2 + ap_const_lv32_1);
assign tmp_7_fu_559_p2 = (buff2read == ap_const_lv2_0? 1'b1: 1'b0);
assign tmp_8_fu_565_p4 = {{counter_rd1[ap_const_lv32_1F : ap_const_lv32_6]}};
assign tmp_9_fu_581_p2 = (buff2read == ap_const_lv2_1? 1'b1: 1'b0);
assign tmp_fu_476_p2 = (begin2buffer_loc_fu_451_p2 & src_valid_V);
assign tmp_s_fu_587_p1 = $signed(counter_rd1);
assign vsync_V = (counter_vsync_loc_fu_1836_p3 == ap_const_lv32_5? 1'b1: 1'b0);


endmodule //hls_cropping_vert_strm

