-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_cropping_vert_strm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    src_V_V_TVALID : IN STD_LOGIC;
    src_V_V_TREADY : OUT STD_LOGIC;
    dst_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    dst_V_ap_vld : OUT STD_LOGIC;
    sof_dst_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    sof_dst_V_ap_vld : OUT STD_LOGIC;
    eol_dst_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    eol_dst_V_ap_vld : OUT STD_LOGIC;
    dst_valid_dst_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_valid_dst_V_ap_vld : OUT STD_LOGIC;
    src_valid_V : IN STD_LOGIC_VECTOR (0 downto 0);
    sof_src_V : IN STD_LOGIC_VECTOR (0 downto 0);
    hsync_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    hsync_V_ap_vld : OUT STD_LOGIC;
    vsync_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    vsync_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of hls_cropping_vert_strm is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hls_cropping_vert_strm,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=17.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=21.688000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=383,HLS_SYN_LUT=3834}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_54C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000101010011000000";
    constant ap_const_lv32_CE94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001100111010010100";
    constant ap_const_lv32_1680 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001011010000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal begin2pad : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal readbuffer : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal begin2buffer : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal counter : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal col_counter : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal buff_in : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal col_counter2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal linebuffer1_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linebuffer1_V_ce0 : STD_LOGIC;
    signal linebuffer1_V_we0 : STD_LOGIC;
    signal linebuffer1_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal linebuffer1_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal linebuffer1_V_ce1 : STD_LOGIC;
    signal linebuffer1_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal linebuffer1b_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linebuffer1b_V_ce0 : STD_LOGIC;
    signal linebuffer1b_V_we0 : STD_LOGIC;
    signal linebuffer1b_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal linebuffer1b_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal linebuffer1b_V_ce1 : STD_LOGIC;
    signal linebuffer1b_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal linebuffer2_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linebuffer2_V_ce0 : STD_LOGIC;
    signal linebuffer2_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal linebuffer2_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal linebuffer2_V_ce1 : STD_LOGIC;
    signal linebuffer2_V_we1 : STD_LOGIC;
    signal linebuffer2_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal linebuffer2b_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linebuffer2b_V_ce0 : STD_LOGIC;
    signal linebuffer2b_V_we0 : STD_LOGIC;
    signal linebuffer2b_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal linebuffer2b_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal linebuffer2b_V_ce1 : STD_LOGIC;
    signal linebuffer2b_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal counter2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal buff2read : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal counter_rd1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal counter_rd1b : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal counter_rd2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal counter_rd2b : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal counter_pad : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal counter3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal beginvsync : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal counter_vsync : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal begin2pad_load_reg_1929 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_116 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal readbuffer_load_reg_1934 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1945 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_reg_1955 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp7_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp7_reg_1965 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_1975 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_1985 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_1990 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1995 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_2000 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_2005 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_reg_2010 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_reg_2015 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_vld1_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_vld1_reg_2020 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_vld2_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_vld2_reg_2025 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_vld3_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_vld3_reg_2030 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_1089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_reg_2035 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_hsync1_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_hsync1_reg_2040 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_hsync2_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_hsync2_reg_2045 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_hsync3_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_hsync3_reg_2050 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp10_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp10_reg_2055 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_counter_flag_3_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_counter2_flag_3_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_rd1_flag_1_fu_1329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_rd1b_flag_2_fu_1359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_rd2_flag_3_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_rd2b_flag_4_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_begin2buffer_flag_fu_1509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_counter_flag_1_fu_1521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_counter2_flag_fu_1565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_2100 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_begin2pad_flag_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_buff_in_flag_1_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_buff2read_flag_3_fu_1645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_counter_pad_flag_1_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_counter3_flag_1_fu_1707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal begin2buffer_flag_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_counter_flag_1_reg_296pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_flag_1_phi_fu_299_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff_in_load_load_fu_482_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_counter_new_1_reg_309pp0_it0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_new_1_phi_fu_312_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_loc_fu_457_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_counter_loc_1_reg_321pp0_it0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_loc_1_phi_fu_324_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_col_counter_flag_2_reg_332pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_counter_flag_2_phi_fu_335_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_col_counter_new_2_reg_344pp0_it0 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_counter_new_2_phi_fu_347_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_counter_loc_fu_466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_col_counter_loc_2_reg_357pp0_it0 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_counter_loc_2_phi_fu_360_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_col_counter2_flag_1_reg_368pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_counter2_flag_1_phi_fu_371_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_col_counter2_loc_1_reg_382pp0_it0 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_counter2_loc_1_phi_fu_385_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal not_tmp_2_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_1_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_s_fu_1515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_counter_new_1_fu_1527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_counter_new_3_fu_1217_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_buff_in_new_1_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_counter2_new_3_fu_1243_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_counter2_loc_fu_1571_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel2_fu_1673_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal counter_rd1_new_1_fu_1351_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_rd1b_new_2_fu_1373_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_rd2_new_3_fu_1387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_rd2b_new_4_fu_1459_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_counter_pad_new_1_fu_1699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_counter3_loc_1_fu_1713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_4_fu_1897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_beginvsync_flag_fu_1892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_counter_vsync_loc_fu_1909_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_counter_vsync_flag_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_brmerge_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_counter_load_fu_420_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_col_counter_load_fu_428_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal begin2buffer_loc_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_565_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_11_fu_598_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_15_fu_631_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_19_fu_664_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_6_fu_553_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp345_demorgan_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_592_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp8_fu_771_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp10_fu_785_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp11_fu_793_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp12_fu_801_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_625_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp13_fu_817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp14_fu_825_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp15_fu_833_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_658_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp16_fu_849_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp17_fu_857_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp18_fu_873_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_909_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_counter3_load_fu_915_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter2_loc_fu_691_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_rd1_loc_fu_809_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_rd2_loc_fu_865_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_rd1b_loc_fu_841_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_rd2b_loc_fu_881_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_pad_loc_fu_923_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cond_eol1_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_eol2_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_eol4_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_eol5_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_eol3_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_vld4_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_vld5_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_hsync4_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_hsync5_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_3_fu_1225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_col_counter2_flag_1_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_col_counter2_loc_1_fu_1203_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_fu_1295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp259_demorgan_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_rd1_flag_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_fu_1301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_fu_1335_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp26_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_fu_1343_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp29_fu_1365_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_not_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_not_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp1_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_counter_rd2b_loc_fu_1287_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp31_fu_1443_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp32_fu_1451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_1503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter3_loc_1_fu_937_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp16_fu_1633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp17_fu_1639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_fu_1627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_5_fu_1651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp262_cast_fu_1325_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal newSel_cast_fu_1657_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal newSel1_fu_1665_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp18_fu_1681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter3_flag_1_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0131_0_i_fu_1751_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0131_1_i_fu_1758_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp19_fu_1779_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0131_2_i_fu_1765_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp20_fu_1786_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0131_3_i_fu_1772_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp21_fu_1793_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp22_fu_1800_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0131_8_i_fu_1807_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_1830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_fu_1868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_1864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_vsync_loc_fu_1836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_1886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;

    component hls_cropping_vert_strm_linebuffer1_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component hls_cropping_vert_strm_linebuffer2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    linebuffer1_V_U : component hls_cropping_vert_strm_linebuffer1_V
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => linebuffer1_V_address0,
        ce0 => linebuffer1_V_ce0,
        we0 => linebuffer1_V_we0,
        d0 => linebuffer1_V_d0,
        address1 => linebuffer1_V_address1,
        ce1 => linebuffer1_V_ce1,
        q1 => linebuffer1_V_q1);

    linebuffer1b_V_U : component hls_cropping_vert_strm_linebuffer1_V
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => linebuffer1b_V_address0,
        ce0 => linebuffer1b_V_ce0,
        we0 => linebuffer1b_V_we0,
        d0 => linebuffer1b_V_d0,
        address1 => linebuffer1b_V_address1,
        ce1 => linebuffer1b_V_ce1,
        q1 => linebuffer1b_V_q1);

    linebuffer2_V_U : component hls_cropping_vert_strm_linebuffer2_V
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => linebuffer2_V_address0,
        ce0 => linebuffer2_V_ce0,
        q0 => linebuffer2_V_q0,
        address1 => linebuffer2_V_address1,
        ce1 => linebuffer2_V_ce1,
        we1 => linebuffer2_V_we1,
        d1 => linebuffer2_V_d1);

    linebuffer2b_V_U : component hls_cropping_vert_strm_linebuffer1_V
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => linebuffer2b_V_address0,
        ce0 => linebuffer2b_V_ce0,
        we0 => linebuffer2b_V_we0,
        d0 => linebuffer2b_V_d0,
        address1 => linebuffer2b_V_address1,
        ce1 => linebuffer2b_V_ce1,
        q1 => linebuffer2b_V_q1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                end if; 
            end if;
        end if;
    end process;


    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_begin2buffer_flag_fu_1509_p2)))) then
                begin2buffer <= not_tmp_s_fu_1515_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_begin2pad_flag_fu_1597_p2)))) then
                begin2pad <= not_tmp_2_fu_1603_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then
                begin2pad_load_reg_1929 <= begin2pad;
                cond_hsync1_reg_2040 <= cond_hsync1_fu_1107_p2;
                cond_hsync2_reg_2045 <= cond_hsync2_fu_1125_p2;
                cond_hsync3_reg_2050 <= cond_hsync3_fu_1143_p2;
                cond_vld1_reg_2020 <= cond_vld1_fu_1011_p2;
                cond_vld2_reg_2025 <= cond_vld2_fu_1029_p2;
                cond_vld3_reg_2030 <= cond_vld3_fu_1047_p2;
                icmp1_reg_1975 <= icmp1_fu_674_p2;
                icmp4_reg_1955 <= icmp4_fu_608_p2;
                icmp7_reg_1965 <= icmp7_fu_641_p2;
                icmp_reg_1945 <= icmp_fu_575_p2;
                readbuffer_load_reg_1934 <= readbuffer;
                sel_tmp5_reg_1990 <= sel_tmp5_fu_729_p2;
                sel_tmp7_reg_1995 <= sel_tmp7_fu_747_p2;
                sel_tmp9_reg_2000 <= sel_tmp9_fu_779_p2;
                sel_tmp_reg_1985 <= sel_tmp_fu_699_p2;
                tmp10_reg_2055 <= tmp10_fu_1185_p2;
                tmp3_reg_2010 <= tmp3_fu_981_p2;
                tmp5_reg_2015 <= tmp5_fu_993_p2;
                tmp7_reg_2035 <= tmp7_fu_1089_p2;
                tmp_26_reg_2005 <= tmp_26_fu_945_p2;
                tmp_57_reg_2100 <= tmp_57_fu_1579_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_beginvsync_flag_fu_1892_p2)))) then
                beginvsync <= not_tmp_4_fu_1897_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_buff2read_flag_3_fu_1645_p2)))) then
                buff2read <= newSel2_fu_1673_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_buff_in_flag_1_fu_1615_p2)))) then
                buff_in <= p_buff_in_new_1_fu_1621_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = col_counter_flag_3_fu_1211_p2)))) then
                col_counter <= col_counter_new_3_fu_1217_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = col_counter2_flag_3_fu_1237_p2)))) then
                col_counter2 <= col_counter2_new_3_fu_1243_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_counter_flag_1_fu_1521_p2)))) then
                counter <= p_counter_new_1_fu_1527_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_counter2_flag_fu_1565_p2)))) then
                counter2 <= p_counter2_loc_fu_1571_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_counter3_flag_1_fu_1707_p2)))) then
                counter3 <= p_counter3_loc_1_fu_1713_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_counter_pad_flag_1_fu_1687_p2)))) then
                counter_pad <= p_counter_pad_new_1_fu_1699_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = counter_rd1_flag_1_fu_1329_p2)))) then
                counter_rd1 <= counter_rd1_new_1_fu_1351_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = counter_rd1b_flag_2_fu_1359_p2)))) then
                counter_rd1b <= counter_rd1b_new_2_fu_1373_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = counter_rd2_flag_3_fu_1381_p2)))) then
                counter_rd2 <= counter_rd2_new_3_fu_1387_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = counter_rd2b_flag_4_fu_1437_p2)))) then
                counter_rd2b <= counter_rd2b_new_4_fu_1459_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_counter_vsync_flag_fu_1903_p2)))) then
                counter_vsync <= p_counter_vsync_loc_fu_1909_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = p_s_fu_1553_p2)))) then
                readbuffer <= not_tmp_1_fu_1559_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (src_V_V_TVALID, ap_CS_fsm, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_reg_phiprechg_col_counter2_flag_1_reg_368pp0_it0 <= "X";
    ap_reg_phiprechg_col_counter2_loc_1_reg_382pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_col_counter_flag_2_reg_332pp0_it0 <= "X";
    ap_reg_phiprechg_col_counter_loc_2_reg_357pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_col_counter_new_2_reg_344pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_counter_flag_1_reg_296pp0_it0 <= "X";
    ap_reg_phiprechg_counter_loc_1_reg_321pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_counter_new_1_reg_309pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_116 assign process. --
    ap_sig_bdd_116_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_116 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_bdd_116)
    begin
        if (ap_sig_bdd_116) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_sig_pprstidle_pp0 <= ap_const_logic_0;
    begin2buffer_flag_fu_442_p2 <= (sof_src_V and not_brmerge_fu_436_p2);
    begin2buffer_loc_fu_451_p2 <= (begin2buffer or begin2buffer_flag_fu_442_p2);
    brmerge_fu_414_p2 <= (begin2pad or readbuffer);
    buff_in_load_load_fu_482_p1 <= buff_in;

    -- col_counter2_flag_1_phi_fu_371_p6 assign process. --
    col_counter2_flag_1_phi_fu_371_p6_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1, ap_reg_phiprechg_col_counter2_flag_1_reg_368pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            col_counter2_flag_1_phi_fu_371_p6 <= ap_const_lv1_1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = tmp_fu_476_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            col_counter2_flag_1_phi_fu_371_p6 <= ap_const_lv1_0;
        else 
            col_counter2_flag_1_phi_fu_371_p6 <= ap_reg_phiprechg_col_counter2_flag_1_reg_368pp0_it0;
        end if; 
    end process;

    col_counter2_flag_3_fu_1237_p2 <= (col_counter2_flag_1_phi_fu_371_p6 or p_col_counter2_flag_1_fu_1231_p2);

    -- col_counter2_loc_1_phi_fu_385_p6 assign process. --
    col_counter2_loc_1_phi_fu_385_p6_assign_proc : process(col_counter2, ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1, ap_reg_phiprechg_col_counter2_loc_1_reg_382pp0_it0, tmp_3_fu_522_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            col_counter2_loc_1_phi_fu_385_p6 <= tmp_3_fu_522_p2;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = tmp_fu_476_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            col_counter2_loc_1_phi_fu_385_p6 <= col_counter2;
        else 
            col_counter2_loc_1_phi_fu_385_p6 <= ap_reg_phiprechg_col_counter2_loc_1_reg_382pp0_it0;
        end if; 
    end process;

    col_counter2_new_3_fu_1243_p3 <= 
        col_counter2_loc_1_phi_fu_385_p6 when (tmp_47_fu_1191_p2(0) = '1') else 
        p_col_counter2_loc_1_fu_1203_p3;

    -- col_counter_flag_2_phi_fu_335_p6 assign process. --
    col_counter_flag_2_phi_fu_335_p6_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, begin2buffer_flag_fu_442_p2, tmp_fu_476_p2, buff_in_load_load_fu_482_p1, ap_reg_phiprechg_col_counter_flag_2_reg_332pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1))) then 
            col_counter_flag_2_phi_fu_335_p6 <= ap_const_lv1_1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = tmp_fu_476_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1))))) then 
            col_counter_flag_2_phi_fu_335_p6 <= begin2buffer_flag_fu_442_p2;
        else 
            col_counter_flag_2_phi_fu_335_p6 <= ap_reg_phiprechg_col_counter_flag_2_reg_332pp0_it0;
        end if; 
    end process;

    col_counter_flag_3_fu_1211_p2 <= (tmp_47_fu_1191_p2 or col_counter_flag_2_phi_fu_335_p6);

    -- col_counter_loc_2_phi_fu_360_p6 assign process. --
    col_counter_loc_2_phi_fu_360_p6_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1, tmp_5_fu_508_p2, col_counter_loc_fu_466_p3, ap_reg_phiprechg_col_counter_loc_2_reg_357pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1))) then 
            col_counter_loc_2_phi_fu_360_p6 <= tmp_5_fu_508_p2;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = tmp_fu_476_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1))))) then 
            col_counter_loc_2_phi_fu_360_p6 <= col_counter_loc_fu_466_p3;
        else 
            col_counter_loc_2_phi_fu_360_p6 <= ap_reg_phiprechg_col_counter_loc_2_reg_357pp0_it0;
        end if; 
    end process;

    col_counter_loc_fu_466_p3 <= 
        col_counter when (brmerge_fu_414_p2(0) = '1') else 
        p_col_counter_load_fu_428_p3;

    -- col_counter_new_2_phi_fu_347_p6 assign process. --
    col_counter_new_2_phi_fu_347_p6_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1, ap_reg_phiprechg_col_counter_new_2_reg_344pp0_it0, tmp_5_fu_508_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1))) then 
            col_counter_new_2_phi_fu_347_p6 <= tmp_5_fu_508_p2;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = tmp_fu_476_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1))))) then 
            col_counter_new_2_phi_fu_347_p6 <= ap_const_lv32_0;
        else 
            col_counter_new_2_phi_fu_347_p6 <= ap_reg_phiprechg_col_counter_new_2_reg_344pp0_it0;
        end if; 
    end process;

    col_counter_new_3_fu_1217_p3 <= 
        ap_const_lv32_0 when (tmp_47_fu_1191_p2(0) = '1') else 
        col_counter_new_2_phi_fu_347_p6;
    cond_eol1_fu_951_p2 <= "1" when (counter_rd1_loc_fu_809_p3 = ap_const_lv32_40) else "0";
    cond_eol2_fu_957_p2 <= "1" when (counter_rd2_loc_fu_865_p3 = ap_const_lv32_40) else "0";
    cond_eol3_fu_963_p2 <= "1" when (counter_rd1b_loc_fu_841_p3 = ap_const_lv32_40) else "0";
    cond_eol4_fu_969_p2 <= "1" when (counter_rd2b_loc_fu_881_p3 = ap_const_lv32_40) else "0";
    cond_eol5_fu_975_p2 <= "1" when (counter_pad_loc_fu_923_p3 = ap_const_lv32_40) else "0";
    cond_hsync1_fu_1107_p2 <= (tmp_37_fu_1095_p2 and tmp_38_fu_1101_p2);
    cond_hsync2_fu_1125_p2 <= (tmp_39_fu_1113_p2 and tmp_40_fu_1119_p2);
    cond_hsync3_fu_1143_p2 <= (tmp_41_fu_1131_p2 and tmp_42_fu_1137_p2);
    cond_hsync4_fu_1161_p2 <= (tmp_43_fu_1149_p2 and tmp_44_fu_1155_p2);
    cond_hsync5_fu_1179_p2 <= (tmp_45_fu_1167_p2 and tmp_46_fu_1173_p2);
    cond_vld1_fu_1011_p2 <= (tmp_27_fu_999_p2 and tmp_28_fu_1005_p2);
    cond_vld2_fu_1029_p2 <= (tmp_29_fu_1017_p2 and tmp_30_fu_1023_p2);
    cond_vld3_fu_1047_p2 <= (tmp_31_fu_1035_p2 and tmp_32_fu_1041_p2);
    cond_vld4_fu_1065_p2 <= (tmp_33_fu_1053_p2 and tmp_34_fu_1059_p2);
    cond_vld5_fu_1083_p2 <= (tmp_35_fu_1071_p2 and tmp_36_fu_1077_p2);
    counter2_loc_fu_691_p3 <= 
        tmp_6_fu_553_p2 when (readbuffer(0) = '1') else 
        counter2;
    counter3_flag_1_fu_931_p2 <= (begin2pad and tmp_23_fu_903_p2);
    counter3_loc_1_fu_937_p3 <= 
        tmp_24_counter3_load_fu_915_p3 when (begin2pad(0) = '1') else 
        counter3;

    -- counter_flag_1_phi_fu_299_p6 assign process. --
    counter_flag_1_phi_fu_299_p6_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, begin2buffer_flag_fu_442_p2, ap_reg_phiprechg_counter_flag_1_reg_296pp0_it0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            counter_flag_1_phi_fu_299_p6 <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = tmp_fu_476_p2))) then 
            counter_flag_1_phi_fu_299_p6 <= begin2buffer_flag_fu_442_p2;
        else 
            counter_flag_1_phi_fu_299_p6 <= ap_reg_phiprechg_counter_flag_1_reg_296pp0_it0;
        end if; 
    end process;


    -- counter_loc_1_phi_fu_324_p6 assign process. --
    counter_loc_1_phi_fu_324_p6_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1, tmp_1_fu_492_p2, counter_loc_fu_457_p3, ap_reg_phiprechg_counter_loc_1_reg_321pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            counter_loc_1_phi_fu_324_p6 <= tmp_1_fu_492_p2;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = tmp_fu_476_p2))) then 
            counter_loc_1_phi_fu_324_p6 <= counter_loc_fu_457_p3;
        else 
            counter_loc_1_phi_fu_324_p6 <= ap_reg_phiprechg_counter_loc_1_reg_321pp0_it0;
        end if; 
    end process;

    counter_loc_fu_457_p3 <= 
        counter when (brmerge_fu_414_p2(0) = '1') else 
        p_counter_load_fu_420_p3;

    -- counter_new_1_phi_fu_312_p6 assign process. --
    counter_new_1_phi_fu_312_p6_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1, ap_reg_phiprechg_counter_new_1_reg_309pp0_it0, tmp_1_fu_492_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            counter_new_1_phi_fu_312_p6 <= tmp_1_fu_492_p2;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = tmp_fu_476_p2))) then 
            counter_new_1_phi_fu_312_p6 <= ap_const_lv32_0;
        else 
            counter_new_1_phi_fu_312_p6 <= ap_reg_phiprechg_counter_new_1_reg_309pp0_it0;
        end if; 
    end process;

    counter_pad_loc_fu_923_p3 <= 
        tmp_22_fu_897_p2 when (begin2pad(0) = '1') else 
        counter_pad;
    counter_rd1_flag_1_fu_1329_p2 <= (counter_rd1_flag_fu_765_p2 or tmp_49_fu_1251_p2);
    counter_rd1_flag_fu_765_p2 <= (sel_tmp_fu_699_p2 and tmp2_fu_759_p2);
    counter_rd1_loc_fu_809_p3 <= 
        sel_tmp12_fu_801_p3 when (readbuffer(0) = '1') else 
        counter_rd1;
    counter_rd1_new_1_fu_1351_p3 <= 
        counter_rd1_loc_fu_809_p3 when (sel_tmp26_fu_1319_p2(0) = '1') else 
        sel_tmp28_fu_1343_p3;
    counter_rd1b_flag_2_fu_1359_p2 <= (sel_tmp9_fu_779_p2 or sel_tmp24_fu_1301_p2);
    counter_rd1b_loc_fu_841_p3 <= 
        sel_tmp15_fu_833_p3 when (readbuffer(0) = '1') else 
        counter_rd1b;
    counter_rd1b_new_2_fu_1373_p3 <= 
        counter_rd1b_loc_fu_841_p3 when (sel_tmp26_fu_1319_p2(0) = '1') else 
        sel_tmp29_fu_1365_p3;
    counter_rd2_flag_3_fu_1381_p2 <= (sel_tmp26_fu_1319_p2 or sel_tmp5_fu_729_p2);
    counter_rd2_loc_fu_865_p3 <= 
        sel_tmp17_fu_857_p3 when (readbuffer(0) = '1') else 
        counter_rd2;
    counter_rd2_new_3_fu_1387_p3 <= 
        ap_const_lv32_0 when (sel_tmp26_fu_1319_p2(0) = '1') else 
        counter_rd2_loc_fu_865_p3;
    counter_rd2b_flag_4_fu_1437_p2 <= (sel_tmp7_fu_747_p2 or sel_tmp30_fu_1431_p2);
    counter_rd2b_loc_fu_881_p3 <= 
        sel_tmp18_fu_873_p3 when (readbuffer(0) = '1') else 
        counter_rd2b;
    counter_rd2b_new_4_fu_1459_p3 <= 
        counter_rd2b_loc_fu_881_p3 when (sel_tmp26_fu_1319_p2(0) = '1') else 
        sel_tmp32_fu_1451_p3;
    counter_vsync_loc_fu_1836_p3 <= 
        tmp_25_fu_1830_p2 when (beginvsync(0) = '1') else 
        counter_vsync;
    dst_V <= 
        ap_const_lv16_0 when (begin2pad_load_reg_1929(0) = '1') else 
        p_0131_8_i_fu_1807_p3;

    -- dst_V_ap_vld assign process. --
    dst_V_ap_vld_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            dst_V_ap_vld <= ap_const_logic_1;
        else 
            dst_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    dst_valid_dst_V <= (tmp8_fu_1853_p2 or tmp6_fu_1849_p2);

    -- dst_valid_dst_V_ap_vld assign process. --
    dst_valid_dst_V_ap_vld_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            dst_valid_dst_V_ap_vld <= ap_const_logic_1;
        else 
            dst_valid_dst_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    eol_dst_V <= (tmp5_reg_2015 or tmp3_reg_2010);

    -- eol_dst_V_ap_vld assign process. --
    eol_dst_V_ap_vld_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            eol_dst_V_ap_vld <= ap_const_logic_1;
        else 
            eol_dst_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    hsync_V <= (tmp11_fu_1868_p2 or tmp9_fu_1864_p2);

    -- hsync_V_ap_vld assign process. --
    hsync_V_ap_vld_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            hsync_V_ap_vld <= ap_const_logic_1;
        else 
            hsync_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp1_fu_674_p2 <= "1" when (signed(tmp_19_fu_664_p4) < signed(ap_const_lv26_1)) else "0";
    icmp4_fu_608_p2 <= "1" when (signed(tmp_11_fu_598_p4) < signed(ap_const_lv26_1)) else "0";
    icmp7_fu_641_p2 <= "1" when (signed(tmp_15_fu_631_p4) < signed(ap_const_lv26_1)) else "0";
    icmp_fu_575_p2 <= "1" when (signed(tmp_8_fu_565_p4) < signed(ap_const_lv26_1)) else "0";
    linebuffer1_V_address0 <= tmp_4_fu_502_p1(6 - 1 downto 0);
    linebuffer1_V_address1 <= tmp_s_fu_587_p1(6 - 1 downto 0);

    -- linebuffer1_V_ce0 assign process. --
    linebuffer1_V_ce0_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            linebuffer1_V_ce0 <= ap_const_logic_1;
        else 
            linebuffer1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- linebuffer1_V_ce1 assign process. --
    linebuffer1_V_ce1_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            linebuffer1_V_ce1 <= ap_const_logic_1;
        else 
            linebuffer1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer1_V_d0 <= src_V_V_TDATA;

    -- linebuffer1_V_we0 assign process. --
    linebuffer1_V_we0_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            linebuffer1_V_we0 <= ap_const_logic_1;
        else 
            linebuffer1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer1b_V_address0 <= tmp_4_fu_502_p1(6 - 1 downto 0);
    linebuffer1b_V_address1 <= tmp_13_fu_620_p1(6 - 1 downto 0);

    -- linebuffer1b_V_ce0 assign process. --
    linebuffer1b_V_ce0_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            linebuffer1b_V_ce0 <= ap_const_logic_1;
        else 
            linebuffer1b_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- linebuffer1b_V_ce1 assign process. --
    linebuffer1b_V_ce1_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            linebuffer1b_V_ce1 <= ap_const_logic_1;
        else 
            linebuffer1b_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer1b_V_d0 <= src_V_V_TDATA;

    -- linebuffer1b_V_we0 assign process. --
    linebuffer1b_V_we0_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and (ap_const_lv1_0 = buff_in_load_load_fu_482_p1)))) then 
            linebuffer1b_V_we0 <= ap_const_logic_1;
        else 
            linebuffer1b_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer2_V_address0 <= tmp_17_fu_653_p1(6 - 1 downto 0);
    linebuffer2_V_address1 <= tmp_2_fu_516_p1(6 - 1 downto 0);

    -- linebuffer2_V_ce0 assign process. --
    linebuffer2_V_ce0_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            linebuffer2_V_ce0 <= ap_const_logic_1;
        else 
            linebuffer2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- linebuffer2_V_ce1 assign process. --
    linebuffer2_V_ce1_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            linebuffer2_V_ce1 <= ap_const_logic_1;
        else 
            linebuffer2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer2_V_d1 <= src_V_V_TDATA;

    -- linebuffer2_V_we1 assign process. --
    linebuffer2_V_we1_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1))))) then 
            linebuffer2_V_we1 <= ap_const_logic_1;
        else 
            linebuffer2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer2b_V_address0 <= tmp_2_fu_516_p1(6 - 1 downto 0);
    linebuffer2b_V_address1 <= tmp_20_fu_680_p1(6 - 1 downto 0);

    -- linebuffer2b_V_ce0 assign process. --
    linebuffer2b_V_ce0_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            linebuffer2b_V_ce0 <= ap_const_logic_1;
        else 
            linebuffer2b_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- linebuffer2b_V_ce1 assign process. --
    linebuffer2b_V_ce1_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            linebuffer2b_V_ce1 <= ap_const_logic_1;
        else 
            linebuffer2b_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer2b_V_d0 <= src_V_V_TDATA;

    -- linebuffer2b_V_we0 assign process. --
    linebuffer2b_V_we0_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, tmp_fu_476_p2, buff_in_load_load_fu_482_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_476_p2)) and not((ap_const_lv1_0 = buff_in_load_load_fu_482_p1))))) then 
            linebuffer2b_V_we0 <= ap_const_logic_1;
        else 
            linebuffer2b_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    newSel1_fu_1665_p3 <= 
        ap_const_lv2_2 when (sel_tmp24_fu_1301_p2(0) = '1') else 
        sel_tmp262_cast_fu_1325_p1;
    newSel2_fu_1673_p3 <= 
        newSel_cast_fu_1657_p3 when (tmp16_fu_1633_p2(0) = '1') else 
        newSel1_fu_1665_p3;
    newSel_cast_fu_1657_p3 <= 
        ap_const_lv2_3 when (not_tmp_5_fu_1651_p2(0) = '1') else 
        ap_const_lv2_0;
    not_brmerge_fu_436_p2 <= (brmerge_fu_414_p2 xor ap_const_lv1_1);
    not_sel_tmp1_fu_1413_p2 <= (sel_tmp259_demorgan_fu_1307_p2 or tmp_51_not_fu_1407_p2);
    not_sel_tmp_fu_1401_p2 <= (tmp_49_fu_1251_p2 or tmp_50_not_fu_1395_p2);
    not_tmp_1_fu_1559_p2 <= (tmp_56_fu_1535_p2 xor ap_const_lv1_1);
    not_tmp_2_fu_1603_p2 <= (tmp_57_fu_1579_p2 xor ap_const_lv1_1);
    not_tmp_3_fu_1225_p2 <= (tmp_47_fu_1191_p2 xor ap_const_lv1_1);
    not_tmp_4_fu_1897_p2 <= (tmp_58_fu_1886_p2 xor ap_const_lv1_1);
    not_tmp_5_fu_1651_p2 <= (tmp_57_fu_1579_p2 xor ap_const_lv1_1);
    not_tmp_s_fu_1515_p2 <= (tmp_55_fu_1503_p2 xor ap_const_lv1_1);
    p_0131_0_i_fu_1751_p3 <= 
        linebuffer1_V_q1 when (icmp_reg_1945(0) = '1') else 
        ap_const_lv16_0;
    p_0131_1_i_fu_1758_p3 <= 
        linebuffer1b_V_q1 when (icmp4_reg_1955(0) = '1') else 
        ap_const_lv16_0;
    p_0131_2_i_fu_1765_p3 <= 
        linebuffer2_V_q0 when (icmp7_reg_1965(0) = '1') else 
        ap_const_lv16_0;
    p_0131_3_i_fu_1772_p3 <= 
        linebuffer2b_V_q1 when (icmp1_reg_1975(0) = '1') else 
        ap_const_lv16_0;
    p_0131_8_i_fu_1807_p3 <= 
        sel_tmp22_fu_1800_p3 when (readbuffer_load_reg_1934(0) = '1') else 
        ap_const_lv16_0;
    p_begin2buffer_flag_fu_1509_p2 <= (tmp_55_fu_1503_p2 or begin2buffer_flag_fu_442_p2);
    p_begin2pad_flag_fu_1597_p2 <= (tmp_57_fu_1579_p2 or tmp_56_fu_1535_p2);
    p_beginvsync_flag_fu_1892_p2 <= (tmp_58_fu_1886_p2 or tmp_57_reg_2100);
    p_buff2read_flag_3_fu_1645_p2 <= (tmp17_fu_1639_p2 or tmp15_fu_1627_p2);
    p_buff_in_flag_1_fu_1615_p2 <= (tmp14_fu_1609_p2 or tmp_47_fu_1191_p2);
    p_buff_in_new_1_fu_1621_p2 <= (tmp_47_fu_1191_p2 and not_tmp_2_fu_1603_p2);
    p_col_counter2_flag_1_fu_1231_p2 <= (tmp_48_fu_1197_p2 and not_tmp_3_fu_1225_p2);
    p_col_counter2_loc_1_fu_1203_p3 <= 
        ap_const_lv32_0 when (tmp_48_fu_1197_p2(0) = '1') else 
        col_counter2_loc_1_phi_fu_385_p6;
    p_col_counter_load_fu_428_p3 <= 
        ap_const_lv32_0 when (sof_src_V(0) = '1') else 
        col_counter;
    p_counter2_flag_fu_1565_p2 <= (tmp_56_fu_1535_p2 or readbuffer);
    p_counter2_loc_fu_1571_p3 <= 
        ap_const_lv32_0 when (tmp_56_fu_1535_p2(0) = '1') else 
        counter2_loc_fu_691_p3;
    p_counter3_flag_1_fu_1707_p2 <= (tmp_57_fu_1579_p2 or counter3_flag_1_fu_931_p2);
    p_counter3_loc_1_fu_1713_p3 <= 
        ap_const_lv32_0 when (tmp_57_fu_1579_p2(0) = '1') else 
        counter3_loc_1_fu_937_p3;
    p_counter_flag_1_fu_1521_p2 <= (tmp_55_fu_1503_p2 or counter_flag_1_phi_fu_299_p6);
    p_counter_load_fu_420_p3 <= 
        ap_const_lv32_0 when (sof_src_V(0) = '1') else 
        counter;
    p_counter_new_1_fu_1527_p3 <= 
        ap_const_lv32_0 when (tmp_55_fu_1503_p2(0) = '1') else 
        counter_new_1_phi_fu_312_p6;
    p_counter_pad_flag_1_fu_1687_p2 <= (tmp18_fu_1681_p2 or tmp_53_fu_1467_p2);
    p_counter_pad_new_1_fu_1699_p3 <= 
        ap_const_lv32_0 when (tmp_59_fu_1693_p2(0) = '1') else 
        counter_pad_loc_fu_923_p3;
    p_counter_rd2b_loc_fu_1287_p3 <= 
        ap_const_lv32_0 when (tmp_52_fu_1281_p2(0) = '1') else 
        counter_rd2b_loc_fu_881_p3;
    p_counter_vsync_flag_fu_1903_p2 <= (tmp_58_fu_1886_p2 or beginvsync);
    p_counter_vsync_loc_fu_1909_p3 <= 
        ap_const_lv32_0 when (tmp_58_fu_1886_p2(0) = '1') else 
        counter_vsync_loc_fu_1836_p3;
    p_s_fu_1553_p2 <= (tmp_56_fu_1535_p2 or tmp_54_fu_1497_p2);
    sel_tmp10_fu_785_p3 <= 
        counter_rd1 when (sel_tmp9_fu_779_p2(0) = '1') else 
        sel_tmp8_fu_771_p3;
    sel_tmp11_fu_793_p3 <= 
        counter_rd1 when (sel_tmp5_fu_729_p2(0) = '1') else 
        sel_tmp10_fu_785_p3;
    sel_tmp12_fu_801_p3 <= 
        counter_rd1 when (sel_tmp7_fu_747_p2(0) = '1') else 
        sel_tmp11_fu_793_p3;
    sel_tmp13_fu_817_p3 <= 
        tmp_14_fu_625_p2 when (sel_tmp9_fu_779_p2(0) = '1') else 
        counter_rd1b;
    sel_tmp14_fu_825_p3 <= 
        counter_rd1b when (sel_tmp5_fu_729_p2(0) = '1') else 
        sel_tmp13_fu_817_p3;
    sel_tmp15_fu_833_p3 <= 
        counter_rd1b when (sel_tmp7_fu_747_p2(0) = '1') else 
        sel_tmp14_fu_825_p3;
    sel_tmp16_fu_849_p3 <= 
        tmp_18_fu_658_p2 when (sel_tmp5_fu_729_p2(0) = '1') else 
        counter_rd2;
    sel_tmp17_fu_857_p3 <= 
        counter_rd2 when (sel_tmp7_fu_747_p2(0) = '1') else 
        sel_tmp16_fu_849_p3;
    sel_tmp18_fu_873_p3 <= 
        tmp_21_fu_685_p2 when (sel_tmp7_fu_747_p2(0) = '1') else 
        counter_rd2b;
    sel_tmp19_fu_1779_p3 <= 
        p_0131_0_i_fu_1751_p3 when (sel_tmp_reg_1985(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp1_fu_705_p2 <= (tmp_7_fu_559_p2 xor ap_const_lv1_1);
    sel_tmp20_fu_1786_p3 <= 
        p_0131_1_i_fu_1758_p3 when (sel_tmp9_reg_2000(0) = '1') else 
        sel_tmp19_fu_1779_p3;
    sel_tmp21_fu_1793_p3 <= 
        p_0131_2_i_fu_1765_p3 when (sel_tmp5_reg_1990(0) = '1') else 
        sel_tmp20_fu_1786_p3;
    sel_tmp22_fu_1800_p3 <= 
        p_0131_3_i_fu_1772_p3 when (sel_tmp7_reg_1995(0) = '1') else 
        sel_tmp21_fu_1793_p3;
    sel_tmp23_fu_1295_p2 <= (tmp_49_fu_1251_p2 xor ap_const_lv1_1);
    sel_tmp24_fu_1301_p2 <= (tmp_50_fu_1269_p2 and sel_tmp23_fu_1295_p2);
    sel_tmp259_demorgan_fu_1307_p2 <= (tmp_49_fu_1251_p2 or tmp_50_fu_1269_p2);
    sel_tmp25_fu_1313_p2 <= (sel_tmp259_demorgan_fu_1307_p2 xor ap_const_lv1_1);
    sel_tmp262_cast_fu_1325_p1 <= std_logic_vector(resize(unsigned(tmp_49_fu_1251_p2),2));
    sel_tmp26_fu_1319_p2 <= (tmp_51_fu_1275_p2 and sel_tmp25_fu_1313_p2);
    sel_tmp27_fu_1335_p3 <= 
        ap_const_lv32_0 when (tmp_49_fu_1251_p2(0) = '1') else 
        counter_rd1_loc_fu_809_p3;
    sel_tmp28_fu_1343_p3 <= 
        counter_rd1_loc_fu_809_p3 when (sel_tmp24_fu_1301_p2(0) = '1') else 
        sel_tmp27_fu_1335_p3;
    sel_tmp29_fu_1365_p3 <= 
        ap_const_lv32_0 when (sel_tmp24_fu_1301_p2(0) = '1') else 
        counter_rd1b_loc_fu_841_p3;
    sel_tmp2_fu_711_p2 <= (readbuffer and sel_tmp1_fu_705_p2);
    sel_tmp30_fu_1431_p2 <= (tmp13_fu_1425_p2 and tmp12_fu_1419_p2);
    sel_tmp31_fu_1443_p3 <= 
        counter_rd2b_loc_fu_881_p3 when (tmp_49_fu_1251_p2(0) = '1') else 
        p_counter_rd2b_loc_fu_1287_p3;
    sel_tmp32_fu_1451_p3 <= 
        counter_rd2b_loc_fu_881_p3 when (sel_tmp24_fu_1301_p2(0) = '1') else 
        sel_tmp31_fu_1443_p3;
    sel_tmp3_fu_717_p2 <= (tmp_9_fu_581_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_723_p2 <= (sel_tmp2_fu_711_p2 and sel_tmp3_fu_717_p2);
    sel_tmp5_fu_729_p2 <= (sel_tmp4_fu_723_p2 and tmp_12_fu_614_p2);
    sel_tmp6_fu_735_p2 <= (tmp_12_fu_614_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_747_p2 <= (tmp1_fu_741_p2 and sel_tmp4_fu_723_p2);
    sel_tmp8_fu_771_p3 <= 
        tmp_10_fu_592_p2 when (sel_tmp_fu_699_p2(0) = '1') else 
        counter_rd1;
    sel_tmp9_fu_779_p2 <= (sel_tmp2_fu_711_p2 and tmp_9_fu_581_p2);
    sel_tmp_fu_699_p2 <= (readbuffer and tmp_7_fu_559_p2);
    sof_dst_V <= tmp_26_reg_2005;

    -- sof_dst_V_ap_vld assign process. --
    sof_dst_V_ap_vld_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            sof_dst_V_ap_vld <= ap_const_logic_1;
        else 
            sof_dst_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    -- src_V_V_TREADY assign process. --
    src_V_V_TREADY_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            src_V_V_TREADY <= ap_const_logic_1;
        else 
            src_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_1185_p2 <= (cond_hsync4_fu_1161_p2 or cond_hsync5_fu_1179_p2);
    tmp11_fu_1868_p2 <= (tmp10_reg_2055 or cond_hsync3_reg_2050);
    tmp12_fu_1419_p2 <= (tmp_52_fu_1281_p2 and sel_tmp23_fu_1295_p2);
    tmp13_fu_1425_p2 <= (not_sel_tmp_fu_1401_p2 and not_sel_tmp1_fu_1413_p2);
    tmp14_fu_1609_p2 <= (tmp_48_fu_1197_p2 or tmp_57_fu_1579_p2);
    tmp15_fu_1627_p2 <= (tmp_49_fu_1251_p2 or tmp_52_fu_1281_p2);
    tmp16_fu_1633_p2 <= (sel_tmp26_fu_1319_p2 or tmp_57_fu_1579_p2);
    tmp17_fu_1639_p2 <= (tmp16_fu_1633_p2 or sel_tmp24_fu_1301_p2);
    tmp18_fu_1681_p2 <= (begin2pad or tmp_57_fu_1579_p2);
    tmp1_fu_741_p2 <= (tmp_16_fu_647_p2 and sel_tmp6_fu_735_p2);
    tmp2_fu_759_p2 <= (tmp345_demorgan_fu_753_p2 xor ap_const_lv1_1);
    tmp345_demorgan_fu_753_p2 <= (sel_tmp5_fu_729_p2 or sel_tmp7_fu_747_p2);
    tmp3_fu_981_p2 <= (cond_eol1_fu_951_p2 or cond_eol2_fu_957_p2);
    tmp4_fu_987_p2 <= (cond_eol4_fu_969_p2 or cond_eol5_fu_975_p2);
    tmp5_fu_993_p2 <= (tmp4_fu_987_p2 or cond_eol3_fu_963_p2);
    tmp6_fu_1849_p2 <= (cond_vld1_reg_2020 or cond_vld2_reg_2025);
    tmp7_fu_1089_p2 <= (cond_vld4_fu_1065_p2 or cond_vld5_fu_1083_p2);
    tmp8_fu_1853_p2 <= (tmp7_reg_2035 or cond_vld3_reg_2030);
    tmp9_fu_1864_p2 <= (cond_hsync1_reg_2040 or cond_hsync2_reg_2045);
    tmp_10_fu_592_p2 <= std_logic_vector(unsigned(counter_rd1) + unsigned(ap_const_lv32_1));
    tmp_11_fu_598_p4 <= counter_rd1b(31 downto 6);
    tmp_12_fu_614_p2 <= "1" when (buff2read = ap_const_lv2_2) else "0";
        tmp_13_fu_620_p1 <= std_logic_vector(resize(signed(counter_rd1b),64));

    tmp_14_fu_625_p2 <= std_logic_vector(unsigned(counter_rd1b) + unsigned(ap_const_lv32_1));
    tmp_15_fu_631_p4 <= counter_rd2(31 downto 6);
    tmp_16_fu_647_p2 <= "1" when (buff2read = ap_const_lv2_3) else "0";
        tmp_17_fu_653_p1 <= std_logic_vector(resize(signed(counter_rd2),64));

    tmp_18_fu_658_p2 <= std_logic_vector(unsigned(counter_rd2) + unsigned(ap_const_lv32_1));
    tmp_19_fu_664_p4 <= counter_rd2b(31 downto 6);
    tmp_1_fu_492_p2 <= std_logic_vector(unsigned(counter_loc_fu_457_p3) + unsigned(ap_const_lv32_1));
        tmp_20_fu_680_p1 <= std_logic_vector(resize(signed(counter_rd2b),64));

    tmp_21_fu_685_p2 <= std_logic_vector(unsigned(counter_rd2b) + unsigned(ap_const_lv32_1));
    tmp_22_fu_897_p2 <= std_logic_vector(unsigned(counter_pad) + unsigned(ap_const_lv32_1));
    tmp_23_fu_903_p2 <= "1" when (signed(tmp_22_fu_897_p2) < signed(ap_const_lv32_41)) else "0";
    tmp_24_counter3_load_fu_915_p3 <= 
        tmp_24_fu_909_p2 when (tmp_23_fu_903_p2(0) = '1') else 
        counter3;
    tmp_24_fu_909_p2 <= std_logic_vector(unsigned(counter3) + unsigned(ap_const_lv32_1));
    tmp_25_fu_1830_p2 <= std_logic_vector(unsigned(counter_vsync) + unsigned(ap_const_lv32_1));
    tmp_26_fu_945_p2 <= "1" when (counter2_loc_fu_691_p3 = ap_const_lv32_1) else "0";
    tmp_27_fu_999_p2 <= "1" when (signed(counter_rd1_loc_fu_809_p3) > signed(ap_const_lv32_0)) else "0";
    tmp_28_fu_1005_p2 <= "1" when (signed(counter_rd1_loc_fu_809_p3) < signed(ap_const_lv32_41)) else "0";
    tmp_29_fu_1017_p2 <= "1" when (signed(counter_rd1b_loc_fu_841_p3) > signed(ap_const_lv32_0)) else "0";
        tmp_2_fu_516_p1 <= std_logic_vector(resize(signed(col_counter2),64));

    tmp_30_fu_1023_p2 <= "1" when (signed(counter_rd1b_loc_fu_841_p3) < signed(ap_const_lv32_41)) else "0";
    tmp_31_fu_1035_p2 <= "1" when (signed(counter_rd2_loc_fu_865_p3) > signed(ap_const_lv32_0)) else "0";
    tmp_32_fu_1041_p2 <= "1" when (signed(counter_rd2_loc_fu_865_p3) < signed(ap_const_lv32_41)) else "0";
    tmp_33_fu_1053_p2 <= "1" when (signed(counter_rd2b_loc_fu_881_p3) > signed(ap_const_lv32_0)) else "0";
    tmp_34_fu_1059_p2 <= "1" when (signed(counter_rd2b_loc_fu_881_p3) < signed(ap_const_lv32_41)) else "0";
    tmp_35_fu_1071_p2 <= "1" when (signed(counter_pad_loc_fu_923_p3) > signed(ap_const_lv32_0)) else "0";
    tmp_36_fu_1077_p2 <= "1" when (signed(counter_pad_loc_fu_923_p3) < signed(ap_const_lv32_41)) else "0";
    tmp_37_fu_1095_p2 <= "1" when (signed(counter_rd1_loc_fu_809_p3) > signed(ap_const_lv32_41)) else "0";
    tmp_38_fu_1101_p2 <= "1" when (signed(counter_rd1_loc_fu_809_p3) < signed(ap_const_lv32_4E)) else "0";
    tmp_39_fu_1113_p2 <= "1" when (signed(counter_rd1b_loc_fu_841_p3) > signed(ap_const_lv32_41)) else "0";
    tmp_3_fu_522_p2 <= std_logic_vector(unsigned(col_counter2) + unsigned(ap_const_lv32_1));
    tmp_40_fu_1119_p2 <= "1" when (signed(counter_rd1b_loc_fu_841_p3) < signed(ap_const_lv32_4E)) else "0";
    tmp_41_fu_1131_p2 <= "1" when (signed(counter_rd2_loc_fu_865_p3) > signed(ap_const_lv32_41)) else "0";
    tmp_42_fu_1137_p2 <= "1" when (signed(counter_rd2_loc_fu_865_p3) < signed(ap_const_lv32_4E)) else "0";
    tmp_43_fu_1149_p2 <= "1" when (signed(counter_rd2b_loc_fu_881_p3) > signed(ap_const_lv32_41)) else "0";
    tmp_44_fu_1155_p2 <= "1" when (signed(counter_rd2b_loc_fu_881_p3) < signed(ap_const_lv32_4E)) else "0";
    tmp_45_fu_1167_p2 <= "1" when (signed(counter_pad_loc_fu_923_p3) > signed(ap_const_lv32_41)) else "0";
    tmp_46_fu_1173_p2 <= "1" when (signed(counter_pad_loc_fu_923_p3) < signed(ap_const_lv32_4E)) else "0";
    tmp_47_fu_1191_p2 <= "1" when (col_counter_loc_2_phi_fu_360_p6 = ap_const_lv32_40) else "0";
    tmp_48_fu_1197_p2 <= "1" when (col_counter2_loc_1_phi_fu_385_p6 = ap_const_lv32_40) else "0";
    tmp_49_fu_1251_p2 <= "1" when (counter_rd1_loc_fu_809_p3 = ap_const_lv32_4E) else "0";
        tmp_4_fu_502_p1 <= std_logic_vector(resize(signed(col_counter_loc_fu_466_p3),64));

    tmp_50_fu_1269_p2 <= "1" when (counter_rd1b_loc_fu_841_p3 = ap_const_lv32_4E) else "0";
    tmp_50_not_fu_1395_p2 <= (tmp_50_fu_1269_p2 xor ap_const_lv1_1);
    tmp_51_fu_1275_p2 <= "1" when (counter_rd2_loc_fu_865_p3 = ap_const_lv32_4E) else "0";
    tmp_51_not_fu_1407_p2 <= (tmp_51_fu_1275_p2 xor ap_const_lv1_1);
    tmp_52_fu_1281_p2 <= "1" when (counter_rd2b_loc_fu_881_p3 = ap_const_lv32_4E) else "0";
    tmp_53_fu_1467_p2 <= "1" when (counter_pad_loc_fu_923_p3 = ap_const_lv32_4E) else "0";
    tmp_54_fu_1497_p2 <= "1" when (counter_loc_1_phi_fu_324_p6 = ap_const_lv32_40) else "0";
    tmp_55_fu_1503_p2 <= "1" when (counter_loc_1_phi_fu_324_p6 = ap_const_lv32_54C0) else "0";
    tmp_56_fu_1535_p2 <= "1" when (counter2_loc_fu_691_p3 = ap_const_lv32_CE94) else "0";
    tmp_57_fu_1579_p2 <= "1" when (counter3_loc_1_fu_937_p3 = ap_const_lv32_1680) else "0";
    tmp_58_fu_1886_p2 <= "1" when (counter_vsync_loc_fu_1836_p3 = ap_const_lv32_A) else "0";
    tmp_59_fu_1693_p2 <= (tmp_57_fu_1579_p2 or tmp_53_fu_1467_p2);
    tmp_5_fu_508_p2 <= std_logic_vector(unsigned(col_counter_loc_fu_466_p3) + unsigned(ap_const_lv32_1));
    tmp_6_fu_553_p2 <= std_logic_vector(unsigned(counter2) + unsigned(ap_const_lv32_1));
    tmp_7_fu_559_p2 <= "1" when (buff2read = ap_const_lv2_0) else "0";
    tmp_8_fu_565_p4 <= counter_rd1(31 downto 6);
    tmp_9_fu_581_p2 <= "1" when (buff2read = ap_const_lv2_1) else "0";
    tmp_fu_476_p2 <= (begin2buffer_loc_fu_451_p2 and src_valid_V);
        tmp_s_fu_587_p1 <= std_logic_vector(resize(signed(counter_rd1),64));

    vsync_V <= "1" when (counter_vsync_loc_fu_1836_p3 = ap_const_lv32_5) else "0";

    -- vsync_V_ap_vld assign process. --
    vsync_V_ap_vld_assign_proc : process(src_V_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((src_V_V_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1))))) then 
            vsync_V_ap_vld <= ap_const_logic_1;
        else 
            vsync_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
