

================================================================
== Vivado HLS Report for 'hls_cropping_vert_strm'
================================================================
* Date:           Fri Jul 17 14:23:31 2015

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        hls_cropping_vert
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  17.00|     21.69|        2.13|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    1|    1|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 2
* Pipeline: 1
  Pipeline-0: II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
* FSM state operations: 

 <State 1>: 21.69ns
ST_1: tmp_V [1/1] 0.00ns
_ifconv:15  %tmp_V = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %src_V_V)

ST_1: valid_tmp [1/1] 0.00ns
_ifconv:16  %valid_tmp = call i1 @_ssdm_op_Read.ap_auto.i1P(i1* %src_valid_V)

ST_1: sof_init [1/1] 0.00ns
_ifconv:17  %sof_init = call i1 @_ssdm_op_Read.ap_auto.i1P(i1* %sof_src_V)

ST_1: begin2pad_load [1/1] 0.00ns
_ifconv:18  %begin2pad_load = load i1* @begin2pad, align 1

ST_1: readbuffer_load [1/1] 0.00ns
_ifconv:19  %readbuffer_load = load i1* @readbuffer, align 1

ST_1: begin2buffer_load [1/1] 0.00ns
_ifconv:20  %begin2buffer_load = load i1* @begin2buffer, align 1

ST_1: counter_load [1/1] 0.00ns
_ifconv:21  %counter_load = load i32* @counter, align 4

ST_1: col_counter_load [1/1] 0.00ns
_ifconv:22  %col_counter_load = load i32* @col_counter, align 4

ST_1: brmerge [1/1] 1.37ns
_ifconv:23  %brmerge = or i1 %begin2pad_load, %readbuffer_load

ST_1: p_counter_load [1/1] 1.37ns
_ifconv:24  %p_counter_load = select i1 %sof_init, i32 0, i32 %counter_load

ST_1: p_col_counter_load [1/1] 1.37ns
_ifconv:25  %p_col_counter_load = select i1 %sof_init, i32 0, i32 %col_counter_load

ST_1: not_brmerge [1/1] 1.37ns
_ifconv:26  %not_brmerge = xor i1 %brmerge, true

ST_1: begin2buffer_flag [1/1] 1.37ns
_ifconv:27  %begin2buffer_flag = and i1 %sof_init, %not_brmerge

ST_1: begin2buffer_loc [1/1] 1.37ns
_ifconv:28  %begin2buffer_loc = or i1 %begin2buffer_load, %begin2buffer_flag

ST_1: counter_loc [1/1] 1.37ns
_ifconv:29  %counter_loc = select i1 %brmerge, i32 %counter_load, i32 %p_counter_load

ST_1: col_counter_loc [1/1] 1.37ns
_ifconv:30  %col_counter_loc = select i1 %brmerge, i32 %col_counter_load, i32 %p_col_counter_load

ST_1: tmp [1/1] 1.37ns
_ifconv:31  %tmp = and i1 %begin2buffer_loc, %valid_tmp

ST_1: buff_in_load [1/1] 0.00ns
_ifconv:32  %buff_in_load = load i1* @buff_in, align 1

ST_1: col_counter2_load [1/1] 0.00ns
_ifconv:33  %col_counter2_load = load i32* @col_counter2, align 4

ST_1: stg_22 [1/1] 1.57ns
_ifconv:34  br i1 %tmp, label %0, label %._crit_edge243.i_ifconv

ST_1: tmp_1 [1/1] 2.44ns
:0  %tmp_1 = add nsw i32 %counter_loc, 1

ST_1: stg_24 [1/1] 0.00ns
:1  br i1 %buff_in_load, label %2, label %1

ST_1: tmp_4 [1/1] 0.00ns
:0  %tmp_4 = sext i32 %col_counter_loc to i64

ST_1: linebuffer1_V_addr [1/1] 0.00ns
:1  %linebuffer1_V_addr = getelementptr [64 x i16]* @linebuffer1_V, i64 0, i64 %tmp_4

ST_1: stg_27 [1/1] 2.39ns
:2  store i16 %tmp_V, i16* %linebuffer1_V_addr, align 2

ST_1: linebuffer1b_V_addr [1/1] 0.00ns
:3  %linebuffer1b_V_addr = getelementptr [64 x i16]* @linebuffer1b_V, i64 0, i64 %tmp_4

ST_1: stg_29 [1/1] 2.39ns
:4  store i16 %tmp_V, i16* %linebuffer1b_V_addr, align 2

ST_1: tmp_5 [1/1] 2.44ns
:5  %tmp_5 = add nsw i32 %col_counter_loc, 1

ST_1: stg_31 [1/1] 1.57ns
:6  br label %._crit_edge243.i_ifconv

ST_1: tmp_2 [1/1] 0.00ns
:0  %tmp_2 = sext i32 %col_counter2_load to i64

ST_1: linebuffer2_V_addr [1/1] 0.00ns
:1  %linebuffer2_V_addr = getelementptr [64 x i16]* @linebuffer2_V, i64 0, i64 %tmp_2

ST_1: stg_34 [1/1] 2.39ns
:2  store i16 %tmp_V, i16* %linebuffer2_V_addr, align 2

ST_1: linebuffer2b_V_addr [1/1] 0.00ns
:3  %linebuffer2b_V_addr = getelementptr [64 x i16]* @linebuffer2b_V, i64 0, i64 %tmp_2

ST_1: stg_36 [1/1] 2.39ns
:4  store i16 %tmp_V, i16* %linebuffer2b_V_addr, align 2

ST_1: tmp_3 [1/1] 2.44ns
:5  %tmp_3 = add nsw i32 %col_counter2_load, 1

ST_1: stg_38 [1/1] 1.57ns
:6  br label %._crit_edge243.i_ifconv

ST_1: counter_flag_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:0  %counter_flag_1 = phi i1 [ %begin2buffer_flag, %_ifconv ], [ true, %2 ], [ true, %1 ]

ST_1: counter_new_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:1  %counter_new_1 = phi i32 [ 0, %_ifconv ], [ %tmp_1, %2 ], [ %tmp_1, %1 ]

ST_1: counter_loc_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:2  %counter_loc_1 = phi i32 [ %counter_loc, %_ifconv ], [ %tmp_1, %2 ], [ %tmp_1, %1 ]

ST_1: col_counter_flag_2 [1/1] 0.00ns
._crit_edge243.i_ifconv:3  %col_counter_flag_2 = phi i1 [ %begin2buffer_flag, %_ifconv ], [ %begin2buffer_flag, %2 ], [ true, %1 ]

ST_1: col_counter_new_2 [1/1] 0.00ns
._crit_edge243.i_ifconv:4  %col_counter_new_2 = phi i32 [ 0, %_ifconv ], [ 0, %2 ], [ %tmp_5, %1 ]

ST_1: col_counter_loc_2 [1/1] 0.00ns
._crit_edge243.i_ifconv:5  %col_counter_loc_2 = phi i32 [ %col_counter_loc, %_ifconv ], [ %col_counter_loc, %2 ], [ %tmp_5, %1 ]

ST_1: col_counter2_flag_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:6  %col_counter2_flag_1 = phi i1 [ false, %_ifconv ], [ true, %2 ], [ false, %1 ]

ST_1: col_counter2_loc_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:7  %col_counter2_loc_1 = phi i32 [ %col_counter2_load, %_ifconv ], [ %tmp_3, %2 ], [ %col_counter2_load, %1 ]

ST_1: counter2_load [1/1] 0.00ns
._crit_edge243.i_ifconv:8  %counter2_load = load i32* @counter2, align 4

ST_1: buff2read_load [1/1] 0.00ns
._crit_edge243.i_ifconv:9  %buff2read_load = load i2* @buff2read, align 1

ST_1: counter_rd1_load [1/1] 0.00ns
._crit_edge243.i_ifconv:10  %counter_rd1_load = load i32* @counter_rd1, align 4

ST_1: counter_rd1b_load [1/1] 0.00ns
._crit_edge243.i_ifconv:11  %counter_rd1b_load = load i32* @counter_rd1b, align 4

ST_1: counter_rd2_load [1/1] 0.00ns
._crit_edge243.i_ifconv:12  %counter_rd2_load = load i32* @counter_rd2, align 4

ST_1: counter_rd2b_load [1/1] 0.00ns
._crit_edge243.i_ifconv:13  %counter_rd2b_load = load i32* @counter_rd2b, align 4

ST_1: tmp_6 [1/1] 2.44ns
._crit_edge243.i_ifconv:14  %tmp_6 = add nsw i32 %counter2_load, 1

ST_1: tmp_7 [1/1] 1.36ns
._crit_edge243.i_ifconv:15  %tmp_7 = icmp eq i2 %buff2read_load, 0

ST_1: tmp_8 [1/1] 0.00ns
._crit_edge243.i_ifconv:16  %tmp_8 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %counter_rd1_load, i32 6, i32 31)

ST_1: icmp [1/1] 2.43ns
._crit_edge243.i_ifconv:17  %icmp = icmp slt i26 %tmp_8, 1

ST_1: tmp_9 [1/1] 1.36ns
._crit_edge243.i_ifconv:18  %tmp_9 = icmp eq i2 %buff2read_load, 1

ST_1: tmp_s [1/1] 0.00ns
._crit_edge243.i_ifconv:19  %tmp_s = sext i32 %counter_rd1_load to i64

ST_1: linebuffer1_V_addr_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:20  %linebuffer1_V_addr_1 = getelementptr [64 x i16]* @linebuffer1_V, i64 0, i64 %tmp_s

ST_1: tmp2i_V [2/2] 2.39ns
._crit_edge243.i_ifconv:21  %tmp2i_V = load i16* %linebuffer1_V_addr_1, align 2

ST_1: tmp_10 [1/1] 2.44ns
._crit_edge243.i_ifconv:23  %tmp_10 = add nsw i32 %counter_rd1_load, 1

ST_1: tmp_11 [1/1] 0.00ns
._crit_edge243.i_ifconv:24  %tmp_11 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %counter_rd1b_load, i32 6, i32 31)

ST_1: icmp4 [1/1] 2.43ns
._crit_edge243.i_ifconv:25  %icmp4 = icmp slt i26 %tmp_11, 1

ST_1: tmp_12 [1/1] 1.36ns
._crit_edge243.i_ifconv:26  %tmp_12 = icmp eq i2 %buff2read_load, -2

ST_1: tmp_13 [1/1] 0.00ns
._crit_edge243.i_ifconv:27  %tmp_13 = sext i32 %counter_rd1b_load to i64

ST_1: linebuffer1b_V_addr_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:28  %linebuffer1b_V_addr_1 = getelementptr [64 x i16]* @linebuffer1b_V, i64 0, i64 %tmp_13

ST_1: tmp2i_V_1 [2/2] 2.39ns
._crit_edge243.i_ifconv:29  %tmp2i_V_1 = load i16* %linebuffer1b_V_addr_1, align 2

ST_1: tmp_14 [1/1] 2.44ns
._crit_edge243.i_ifconv:31  %tmp_14 = add nsw i32 %counter_rd1b_load, 1

ST_1: tmp_15 [1/1] 0.00ns
._crit_edge243.i_ifconv:32  %tmp_15 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %counter_rd2_load, i32 6, i32 31)

ST_1: icmp7 [1/1] 2.43ns
._crit_edge243.i_ifconv:33  %icmp7 = icmp slt i26 %tmp_15, 1

ST_1: tmp_16 [1/1] 1.36ns
._crit_edge243.i_ifconv:34  %tmp_16 = icmp eq i2 %buff2read_load, -1

ST_1: tmp_17 [1/1] 0.00ns
._crit_edge243.i_ifconv:35  %tmp_17 = sext i32 %counter_rd2_load to i64

ST_1: linebuffer2_V_addr_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:36  %linebuffer2_V_addr_1 = getelementptr [64 x i16]* @linebuffer2_V, i64 0, i64 %tmp_17

ST_1: tmp2i_V_2 [2/2] 2.39ns
._crit_edge243.i_ifconv:37  %tmp2i_V_2 = load i16* %linebuffer2_V_addr_1, align 2

ST_1: tmp_18 [1/1] 2.44ns
._crit_edge243.i_ifconv:39  %tmp_18 = add nsw i32 %counter_rd2_load, 1

ST_1: tmp_19 [1/1] 0.00ns
._crit_edge243.i_ifconv:40  %tmp_19 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %counter_rd2b_load, i32 6, i32 31)

ST_1: icmp1 [1/1] 2.43ns
._crit_edge243.i_ifconv:41  %icmp1 = icmp slt i26 %tmp_19, 1

ST_1: tmp_20 [1/1] 0.00ns
._crit_edge243.i_ifconv:42  %tmp_20 = sext i32 %counter_rd2b_load to i64

ST_1: linebuffer2b_V_addr_1 [1/1] 0.00ns
._crit_edge243.i_ifconv:43  %linebuffer2b_V_addr_1 = getelementptr [64 x i16]* @linebuffer2b_V, i64 0, i64 %tmp_20

ST_1: tmp2i_V_3 [2/2] 2.39ns
._crit_edge243.i_ifconv:44  %tmp2i_V_3 = load i16* %linebuffer2b_V_addr_1, align 2

ST_1: tmp_21 [1/1] 2.44ns
._crit_edge243.i_ifconv:46  %tmp_21 = add nsw i32 %counter_rd2b_load, 1

ST_1: counter2_loc [1/1] 1.37ns
._crit_edge243.i_ifconv:47  %counter2_loc = select i1 %readbuffer_load, i32 %tmp_6, i32 %counter2_load

ST_1: sel_tmp [1/1] 1.37ns
._crit_edge243.i_ifconv:48  %sel_tmp = and i1 %readbuffer_load, %tmp_7

ST_1: sel_tmp1 [1/1] 1.37ns
._crit_edge243.i_ifconv:49  %sel_tmp1 = xor i1 %tmp_7, true

ST_1: sel_tmp2 [1/1] 1.37ns
._crit_edge243.i_ifconv:50  %sel_tmp2 = and i1 %readbuffer_load, %sel_tmp1

ST_1: sel_tmp3 [1/1] 1.37ns
._crit_edge243.i_ifconv:51  %sel_tmp3 = xor i1 %tmp_9, true

ST_1: sel_tmp4 [1/1] 1.37ns
._crit_edge243.i_ifconv:52  %sel_tmp4 = and i1 %sel_tmp2, %sel_tmp3

ST_1: sel_tmp5 [1/1] 1.37ns
._crit_edge243.i_ifconv:53  %sel_tmp5 = and i1 %sel_tmp4, %tmp_12

ST_1: sel_tmp6 [1/1] 1.37ns
._crit_edge243.i_ifconv:54  %sel_tmp6 = xor i1 %tmp_12, true

ST_1: tmp1 [1/1] 1.37ns
._crit_edge243.i_ifconv:55  %tmp1 = and i1 %tmp_16, %sel_tmp6

ST_1: sel_tmp7 [1/1] 1.37ns
._crit_edge243.i_ifconv:56  %sel_tmp7 = and i1 %tmp1, %sel_tmp4

ST_1: tmp345_demorgan [1/1] 1.37ns
._crit_edge243.i_ifconv:57  %tmp345_demorgan = or i1 %sel_tmp5, %sel_tmp7

ST_1: tmp2 [1/1] 1.37ns
._crit_edge243.i_ifconv:58  %tmp2 = xor i1 %tmp345_demorgan, true

ST_1: counter_rd1_flag [1/1] 1.37ns
._crit_edge243.i_ifconv:59  %counter_rd1_flag = and i1 %sel_tmp, %tmp2

ST_1: sel_tmp8 [1/1] 1.37ns
._crit_edge243.i_ifconv:60  %sel_tmp8 = select i1 %sel_tmp, i32 %tmp_10, i32 %counter_rd1_load

ST_1: sel_tmp9 [1/1] 1.37ns
._crit_edge243.i_ifconv:61  %sel_tmp9 = and i1 %sel_tmp2, %tmp_9

ST_1: sel_tmp10 [1/1] 1.37ns
._crit_edge243.i_ifconv:62  %sel_tmp10 = select i1 %sel_tmp9, i32 %counter_rd1_load, i32 %sel_tmp8

ST_1: sel_tmp11 [1/1] 1.37ns
._crit_edge243.i_ifconv:63  %sel_tmp11 = select i1 %sel_tmp5, i32 %counter_rd1_load, i32 %sel_tmp10

ST_1: sel_tmp12 [1/1] 1.37ns
._crit_edge243.i_ifconv:64  %sel_tmp12 = select i1 %sel_tmp7, i32 %counter_rd1_load, i32 %sel_tmp11

ST_1: counter_rd1_loc [1/1] 1.37ns
._crit_edge243.i_ifconv:65  %counter_rd1_loc = select i1 %readbuffer_load, i32 %sel_tmp12, i32 %counter_rd1_load

ST_1: sel_tmp13 [1/1] 1.37ns
._crit_edge243.i_ifconv:66  %sel_tmp13 = select i1 %sel_tmp9, i32 %tmp_14, i32 %counter_rd1b_load

ST_1: sel_tmp14 [1/1] 1.37ns
._crit_edge243.i_ifconv:67  %sel_tmp14 = select i1 %sel_tmp5, i32 %counter_rd1b_load, i32 %sel_tmp13

ST_1: sel_tmp15 [1/1] 1.37ns
._crit_edge243.i_ifconv:68  %sel_tmp15 = select i1 %sel_tmp7, i32 %counter_rd1b_load, i32 %sel_tmp14

ST_1: counter_rd1b_loc [1/1] 1.37ns
._crit_edge243.i_ifconv:69  %counter_rd1b_loc = select i1 %readbuffer_load, i32 %sel_tmp15, i32 %counter_rd1b_load

ST_1: sel_tmp16 [1/1] 1.37ns
._crit_edge243.i_ifconv:70  %sel_tmp16 = select i1 %sel_tmp5, i32 %tmp_18, i32 %counter_rd2_load

ST_1: sel_tmp17 [1/1] 1.37ns
._crit_edge243.i_ifconv:71  %sel_tmp17 = select i1 %sel_tmp7, i32 %counter_rd2_load, i32 %sel_tmp16

ST_1: counter_rd2_loc [1/1] 1.37ns
._crit_edge243.i_ifconv:72  %counter_rd2_loc = select i1 %readbuffer_load, i32 %sel_tmp17, i32 %counter_rd2_load

ST_1: sel_tmp18 [1/1] 1.37ns
._crit_edge243.i_ifconv:73  %sel_tmp18 = select i1 %sel_tmp7, i32 %tmp_21, i32 %counter_rd2b_load

ST_1: counter_rd2b_loc [1/1] 1.37ns
._crit_edge243.i_ifconv:74  %counter_rd2b_loc = select i1 %readbuffer_load, i32 %sel_tmp18, i32 %counter_rd2b_load

ST_1: counter_pad_load [1/1] 0.00ns
._crit_edge243.i_ifconv:80  %counter_pad_load = load i32* @counter_pad, align 4

ST_1: counter3_load [1/1] 0.00ns
._crit_edge243.i_ifconv:81  %counter3_load = load i32* @counter3, align 4

ST_1: tmp_22 [1/1] 2.44ns
._crit_edge243.i_ifconv:82  %tmp_22 = add nsw i32 %counter_pad_load, 1

ST_1: tmp_23 [1/1] 2.52ns
._crit_edge243.i_ifconv:83  %tmp_23 = icmp slt i32 %tmp_22, 65

ST_1: tmp_24 [1/1] 2.44ns
._crit_edge243.i_ifconv:84  %tmp_24 = add nsw i32 %counter3_load, 1

ST_1: tmp_24_counter3_load [1/1] 1.37ns
._crit_edge243.i_ifconv:85  %tmp_24_counter3_load = select i1 %tmp_23, i32 %tmp_24, i32 %counter3_load

ST_1: counter_pad_loc [1/1] 1.37ns
._crit_edge243.i_ifconv:86  %counter_pad_loc = select i1 %begin2pad_load, i32 %tmp_22, i32 %counter_pad_load

ST_1: counter3_flag_1 [1/1] 1.37ns
._crit_edge243.i_ifconv:87  %counter3_flag_1 = and i1 %begin2pad_load, %tmp_23

ST_1: counter3_loc_1 [1/1] 1.37ns
._crit_edge243.i_ifconv:88  %counter3_loc_1 = select i1 %begin2pad_load, i32 %tmp_24_counter3_load, i32 %counter3_load

ST_1: tmp_26 [1/1] 2.52ns
._crit_edge243.i_ifconv:94  %tmp_26 = icmp eq i32 %counter2_loc, 1

ST_1: cond_eol1 [1/1] 2.52ns
._crit_edge243.i_ifconv:95  %cond_eol1 = icmp eq i32 %counter_rd1_loc, 64

ST_1: cond_eol2 [1/1] 2.52ns
._crit_edge243.i_ifconv:96  %cond_eol2 = icmp eq i32 %counter_rd2_loc, 64

ST_1: cond_eol3 [1/1] 2.52ns
._crit_edge243.i_ifconv:97  %cond_eol3 = icmp eq i32 %counter_rd1b_loc, 64

ST_1: cond_eol4 [1/1] 2.52ns
._crit_edge243.i_ifconv:98  %cond_eol4 = icmp eq i32 %counter_rd2b_loc, 64

ST_1: cond_eol5 [1/1] 2.52ns
._crit_edge243.i_ifconv:99  %cond_eol5 = icmp eq i32 %counter_pad_loc, 64

ST_1: tmp3 [1/1] 1.37ns
._crit_edge243.i_ifconv:100  %tmp3 = or i1 %cond_eol1, %cond_eol2

ST_1: tmp4 [1/1] 1.37ns
._crit_edge243.i_ifconv:101  %tmp4 = or i1 %cond_eol4, %cond_eol5

ST_1: tmp5 [1/1] 1.37ns
._crit_edge243.i_ifconv:102  %tmp5 = or i1 %tmp4, %cond_eol3

ST_1: tmp_27 [1/1] 2.52ns
._crit_edge243.i_ifconv:104  %tmp_27 = icmp sgt i32 %counter_rd1_loc, 0

ST_1: tmp_28 [1/1] 2.52ns
._crit_edge243.i_ifconv:105  %tmp_28 = icmp slt i32 %counter_rd1_loc, 65

ST_1: cond_vld1 [1/1] 1.37ns
._crit_edge243.i_ifconv:106  %cond_vld1 = and i1 %tmp_27, %tmp_28

ST_1: tmp_29 [1/1] 2.52ns
._crit_edge243.i_ifconv:107  %tmp_29 = icmp sgt i32 %counter_rd1b_loc, 0

ST_1: tmp_30 [1/1] 2.52ns
._crit_edge243.i_ifconv:108  %tmp_30 = icmp slt i32 %counter_rd1b_loc, 65

ST_1: cond_vld2 [1/1] 1.37ns
._crit_edge243.i_ifconv:109  %cond_vld2 = and i1 %tmp_29, %tmp_30

ST_1: tmp_31 [1/1] 2.52ns
._crit_edge243.i_ifconv:110  %tmp_31 = icmp sgt i32 %counter_rd2_loc, 0

ST_1: tmp_32 [1/1] 2.52ns
._crit_edge243.i_ifconv:111  %tmp_32 = icmp slt i32 %counter_rd2_loc, 65

ST_1: cond_vld3 [1/1] 1.37ns
._crit_edge243.i_ifconv:112  %cond_vld3 = and i1 %tmp_31, %tmp_32

ST_1: tmp_33 [1/1] 2.52ns
._crit_edge243.i_ifconv:113  %tmp_33 = icmp sgt i32 %counter_rd2b_loc, 0

ST_1: tmp_34 [1/1] 2.52ns
._crit_edge243.i_ifconv:114  %tmp_34 = icmp slt i32 %counter_rd2b_loc, 65

ST_1: cond_vld4 [1/1] 1.37ns
._crit_edge243.i_ifconv:115  %cond_vld4 = and i1 %tmp_33, %tmp_34

ST_1: tmp_35 [1/1] 2.52ns
._crit_edge243.i_ifconv:116  %tmp_35 = icmp sgt i32 %counter_pad_loc, 0

ST_1: tmp_36 [1/1] 2.52ns
._crit_edge243.i_ifconv:117  %tmp_36 = icmp slt i32 %counter_pad_loc, 65

ST_1: cond_vld5 [1/1] 1.37ns
._crit_edge243.i_ifconv:118  %cond_vld5 = and i1 %tmp_35, %tmp_36

ST_1: tmp7 [1/1] 1.37ns
._crit_edge243.i_ifconv:120  %tmp7 = or i1 %cond_vld4, %cond_vld5

ST_1: tmp_37 [1/1] 2.52ns
._crit_edge243.i_ifconv:123  %tmp_37 = icmp sgt i32 %counter_rd1_loc, 65

ST_1: tmp_38 [1/1] 2.52ns
._crit_edge243.i_ifconv:124  %tmp_38 = icmp slt i32 %counter_rd1_loc, 78

ST_1: cond_hsync1 [1/1] 1.37ns
._crit_edge243.i_ifconv:125  %cond_hsync1 = and i1 %tmp_37, %tmp_38

ST_1: tmp_39 [1/1] 2.52ns
._crit_edge243.i_ifconv:126  %tmp_39 = icmp sgt i32 %counter_rd1b_loc, 65

ST_1: tmp_40 [1/1] 2.52ns
._crit_edge243.i_ifconv:127  %tmp_40 = icmp slt i32 %counter_rd1b_loc, 78

ST_1: cond_hsync2 [1/1] 1.37ns
._crit_edge243.i_ifconv:128  %cond_hsync2 = and i1 %tmp_39, %tmp_40

ST_1: tmp_41 [1/1] 2.52ns
._crit_edge243.i_ifconv:129  %tmp_41 = icmp sgt i32 %counter_rd2_loc, 65

ST_1: tmp_42 [1/1] 2.52ns
._crit_edge243.i_ifconv:130  %tmp_42 = icmp slt i32 %counter_rd2_loc, 78

ST_1: cond_hsync3 [1/1] 1.37ns
._crit_edge243.i_ifconv:131  %cond_hsync3 = and i1 %tmp_41, %tmp_42

ST_1: tmp_43 [1/1] 2.52ns
._crit_edge243.i_ifconv:132  %tmp_43 = icmp sgt i32 %counter_rd2b_loc, 65

ST_1: tmp_44 [1/1] 2.52ns
._crit_edge243.i_ifconv:133  %tmp_44 = icmp slt i32 %counter_rd2b_loc, 78

ST_1: cond_hsync4 [1/1] 1.37ns
._crit_edge243.i_ifconv:134  %cond_hsync4 = and i1 %tmp_43, %tmp_44

ST_1: tmp_45 [1/1] 2.52ns
._crit_edge243.i_ifconv:135  %tmp_45 = icmp sgt i32 %counter_pad_loc, 65

ST_1: tmp_46 [1/1] 2.52ns
._crit_edge243.i_ifconv:136  %tmp_46 = icmp slt i32 %counter_pad_loc, 78

ST_1: cond_hsync5 [1/1] 1.37ns
._crit_edge243.i_ifconv:137  %cond_hsync5 = and i1 %tmp_45, %tmp_46

ST_1: tmp10 [1/1] 1.37ns
._crit_edge243.i_ifconv:139  %tmp10 = or i1 %cond_hsync4, %cond_hsync5

ST_1: tmp_47 [1/1] 2.52ns
._crit_edge243.i_ifconv:143  %tmp_47 = icmp eq i32 %col_counter_loc_2, 64

ST_1: tmp_48 [1/1] 2.52ns
._crit_edge243.i_ifconv:144  %tmp_48 = icmp eq i32 %col_counter2_loc_1, 64

ST_1: p_col_counter2_loc_1 [1/1] 1.37ns
._crit_edge243.i_ifconv:145  %p_col_counter2_loc_1 = select i1 %tmp_48, i32 0, i32 %col_counter2_loc_1

ST_1: col_counter_flag_3 [1/1] 1.37ns
._crit_edge243.i_ifconv:146  %col_counter_flag_3 = or i1 %tmp_47, %col_counter_flag_2

ST_1: col_counter_new_3 [1/1] 1.37ns
._crit_edge243.i_ifconv:147  %col_counter_new_3 = select i1 %tmp_47, i32 0, i32 %col_counter_new_2

ST_1: not_tmp_3 [1/1] 1.37ns
._crit_edge243.i_ifconv:148  %not_tmp_3 = xor i1 %tmp_47, true

ST_1: p_col_counter2_flag_1 [1/1] 1.37ns
._crit_edge243.i_ifconv:149  %p_col_counter2_flag_1 = and i1 %tmp_48, %not_tmp_3

ST_1: col_counter2_flag_3 [1/1] 1.37ns
._crit_edge243.i_ifconv:150  %col_counter2_flag_3 = or i1 %col_counter2_flag_1, %p_col_counter2_flag_1

ST_1: col_counter2_new_3 [1/1] 1.37ns
._crit_edge243.i_ifconv:151  %col_counter2_new_3 = select i1 %tmp_47, i32 %col_counter2_loc_1, i32 %p_col_counter2_loc_1

ST_1: tmp_49 [1/1] 2.52ns
._crit_edge243.i_ifconv:152  %tmp_49 = icmp eq i32 %counter_rd1_loc, 78

ST_1: stg_170 [1/1] 0.00ns
._crit_edge243.i_ifconv:153  br i1 %col_counter2_flag_3, label %mergeST8, label %.new9

ST_1: stg_171 [1/1] 0.00ns
mergeST8:0  store i32 %col_counter2_new_3, i32* @col_counter2, align 4

ST_1: stg_172 [1/1] 0.00ns
.new9:0  br i1 %col_counter_flag_3, label %mergeST5, label %.new_ifconv

ST_1: stg_173 [1/1] 0.00ns
mergeST5:0  store i32 %col_counter_new_3, i32* @col_counter, align 4

ST_1: tmp_50 [1/1] 2.52ns
.new_ifconv:0  %tmp_50 = icmp eq i32 %counter_rd1b_loc, 78

ST_1: tmp_51 [1/1] 2.52ns
.new_ifconv:1  %tmp_51 = icmp eq i32 %counter_rd2_loc, 78

ST_1: tmp_52 [1/1] 2.52ns
.new_ifconv:2  %tmp_52 = icmp eq i32 %counter_rd2b_loc, 78

ST_1: p_counter_rd2b_loc [1/1] 1.37ns
.new_ifconv:3  %p_counter_rd2b_loc = select i1 %tmp_52, i32 0, i32 %counter_rd2b_loc

ST_1: sel_tmp23 [1/1] 1.37ns
.new_ifconv:4  %sel_tmp23 = xor i1 %tmp_49, true

ST_1: sel_tmp24 [1/1] 1.37ns
.new_ifconv:5  %sel_tmp24 = and i1 %tmp_50, %sel_tmp23

ST_1: sel_tmp259_demorgan [1/1] 1.37ns
.new_ifconv:6  %sel_tmp259_demorgan = or i1 %tmp_49, %tmp_50

ST_1: sel_tmp25 [1/1] 1.37ns
.new_ifconv:7  %sel_tmp25 = xor i1 %sel_tmp259_demorgan, true

ST_1: sel_tmp26 [1/1] 1.37ns
.new_ifconv:8  %sel_tmp26 = and i1 %tmp_51, %sel_tmp25

ST_1: sel_tmp262_cast [1/1] 0.00ns
.new_ifconv:9  %sel_tmp262_cast = zext i1 %tmp_49 to i2

ST_1: counter_rd1_flag_1 [1/1] 1.37ns
.new_ifconv:10  %counter_rd1_flag_1 = or i1 %counter_rd1_flag, %tmp_49

ST_1: sel_tmp27 [1/1] 1.37ns
.new_ifconv:11  %sel_tmp27 = select i1 %tmp_49, i32 0, i32 %counter_rd1_loc

ST_1: sel_tmp28 [1/1] 1.37ns
.new_ifconv:12  %sel_tmp28 = select i1 %sel_tmp24, i32 %counter_rd1_loc, i32 %sel_tmp27

ST_1: counter_rd1_new_1 [1/1] 1.37ns
.new_ifconv:13  %counter_rd1_new_1 = select i1 %sel_tmp26, i32 %counter_rd1_loc, i32 %sel_tmp28

ST_1: counter_rd1b_flag_2 [1/1] 1.37ns
.new_ifconv:14  %counter_rd1b_flag_2 = or i1 %sel_tmp9, %sel_tmp24

ST_1: sel_tmp29 [1/1] 1.37ns
.new_ifconv:15  %sel_tmp29 = select i1 %sel_tmp24, i32 0, i32 %counter_rd1b_loc

ST_1: counter_rd1b_new_2 [1/1] 1.37ns
.new_ifconv:16  %counter_rd1b_new_2 = select i1 %sel_tmp26, i32 %counter_rd1b_loc, i32 %sel_tmp29

ST_1: counter_rd2_flag_3 [1/1] 1.37ns
.new_ifconv:17  %counter_rd2_flag_3 = or i1 %sel_tmp26, %sel_tmp5

ST_1: counter_rd2_new_3 [1/1] 1.37ns
.new_ifconv:18  %counter_rd2_new_3 = select i1 %sel_tmp26, i32 0, i32 %counter_rd2_loc

ST_1: tmp_50_not [1/1] 1.37ns
.new_ifconv:19  %tmp_50_not = xor i1 %tmp_50, true

ST_1: not_sel_tmp [1/1] 1.37ns
.new_ifconv:20  %not_sel_tmp = or i1 %tmp_49, %tmp_50_not

ST_1: tmp_51_not [1/1] 1.37ns
.new_ifconv:21  %tmp_51_not = xor i1 %tmp_51, true

ST_1: not_sel_tmp1 [1/1] 1.37ns
.new_ifconv:22  %not_sel_tmp1 = or i1 %sel_tmp259_demorgan, %tmp_51_not

ST_1: tmp12 [1/1] 1.37ns
.new_ifconv:23  %tmp12 = and i1 %tmp_52, %sel_tmp23

ST_1: tmp13 [1/1] 1.37ns
.new_ifconv:24  %tmp13 = and i1 %not_sel_tmp, %not_sel_tmp1

ST_1: sel_tmp30 [1/1] 1.37ns
.new_ifconv:25  %sel_tmp30 = and i1 %tmp13, %tmp12

ST_1: counter_rd2b_flag_4 [1/1] 1.37ns
.new_ifconv:26  %counter_rd2b_flag_4 = or i1 %sel_tmp7, %sel_tmp30

ST_1: sel_tmp31 [1/1] 1.37ns
.new_ifconv:27  %sel_tmp31 = select i1 %tmp_49, i32 %counter_rd2b_loc, i32 %p_counter_rd2b_loc

ST_1: sel_tmp32 [1/1] 1.37ns
.new_ifconv:28  %sel_tmp32 = select i1 %sel_tmp24, i32 %counter_rd2b_loc, i32 %sel_tmp31

ST_1: counter_rd2b_new_4 [1/1] 1.37ns
.new_ifconv:29  %counter_rd2b_new_4 = select i1 %sel_tmp26, i32 %counter_rd2b_loc, i32 %sel_tmp32

ST_1: tmp_53 [1/1] 2.52ns
.new_ifconv:30  %tmp_53 = icmp eq i32 %counter_pad_loc, 78

ST_1: stg_205 [1/1] 0.00ns
.new_ifconv:31  br i1 %counter_rd2b_flag_4, label %mergeST20, label %.new21

ST_1: stg_206 [1/1] 0.00ns
mergeST20:0  store i32 %counter_rd2b_new_4, i32* @counter_rd2b, align 4

ST_1: stg_207 [1/1] 0.00ns
.new21:0  br i1 %counter_rd2_flag_3, label %mergeST18, label %.new19

ST_1: stg_208 [1/1] 0.00ns
mergeST18:0  store i32 %counter_rd2_new_3, i32* @counter_rd2, align 4

ST_1: stg_209 [1/1] 0.00ns
.new19:0  br i1 %counter_rd1b_flag_2, label %mergeST16, label %.new17

ST_1: stg_210 [1/1] 0.00ns
mergeST16:0  store i32 %counter_rd1b_new_2, i32* @counter_rd1b, align 4

ST_1: stg_211 [1/1] 0.00ns
.new17:0  br i1 %counter_rd1_flag_1, label %mergeST14, label %.new15

ST_1: stg_212 [1/1] 0.00ns
mergeST14:0  store i32 %counter_rd1_new_1, i32* @counter_rd1, align 4

ST_1: tmp_54 [1/1] 2.52ns
.new15:0  %tmp_54 = icmp eq i32 %counter_loc_1, 64

ST_1: tmp_55 [1/1] 2.52ns
.new15:1  %tmp_55 = icmp eq i32 %counter_loc_1, 21696

ST_1: p_begin2buffer_flag [1/1] 1.37ns
.new15:2  %p_begin2buffer_flag = or i1 %tmp_55, %begin2buffer_flag

ST_1: not_tmp_s [1/1] 1.37ns
.new15:3  %not_tmp_s = xor i1 %tmp_55, true

ST_1: p_counter_flag_1 [1/1] 1.37ns
.new15:4  %p_counter_flag_1 = or i1 %tmp_55, %counter_flag_1

ST_1: p_counter_new_1 [1/1] 1.37ns
.new15:5  %p_counter_new_1 = select i1 %tmp_55, i32 0, i32 %counter_new_1

ST_1: tmp_56 [1/1] 2.52ns
.new15:6  %tmp_56 = icmp eq i32 %counter2_loc, 52884

ST_1: stg_220 [1/1] 0.00ns
.new15:7  br i1 %p_counter_flag_1, label %mergeST3, label %._crit_edge257.i.new4

ST_1: stg_221 [1/1] 0.00ns
mergeST3:0  store i32 %p_counter_new_1, i32* @counter, align 4

ST_1: stg_222 [1/1] 0.00ns
._crit_edge257.i.new4:0  br i1 %p_begin2buffer_flag, label %mergeST2, label %._crit_edge257.i.new

ST_1: stg_223 [1/1] 0.00ns
mergeST2:0  store i1 %not_tmp_s, i1* @begin2buffer, align 1

ST_1: p_s [1/1] 1.37ns
._crit_edge257.i.new:0  %p_s = or i1 %tmp_56, %tmp_54

ST_1: not_tmp_1 [1/1] 1.37ns
._crit_edge257.i.new:1  %not_tmp_1 = xor i1 %tmp_56, true

ST_1: p_counter2_flag [1/1] 1.37ns
._crit_edge257.i.new:2  %p_counter2_flag = or i1 %tmp_56, %readbuffer_load

ST_1: p_counter2_loc [1/1] 1.37ns
._crit_edge257.i.new:3  %p_counter2_loc = select i1 %tmp_56, i32 0, i32 %counter2_loc

ST_1: tmp_57 [1/1] 2.52ns
._crit_edge257.i.new:4  %tmp_57 = icmp eq i32 %counter3_loc_1, 5760

ST_1: stg_229 [1/1] 0.00ns
._crit_edge257.i.new:5  br i1 %p_counter2_flag, label %mergeST10, label %._crit_edge258.i.new11

ST_1: stg_230 [1/1] 0.00ns
mergeST10:0  store i32 %p_counter2_loc, i32* @counter2, align 4

ST_1: stg_231 [1/1] 0.00ns
._crit_edge258.i.new11:0  br i1 %p_s, label %mergeST1, label %._crit_edge258.i.new

ST_1: stg_232 [1/1] 0.00ns
mergeST1:0  store i1 %not_tmp_1, i1* @readbuffer, align 1

ST_1: p_begin2pad_flag [1/1] 1.37ns
._crit_edge258.i.new:0  %p_begin2pad_flag = or i1 %tmp_57, %tmp_56

ST_1: not_tmp_2 [1/1] 1.37ns
._crit_edge258.i.new:1  %not_tmp_2 = xor i1 %tmp_57, true

ST_1: tmp14 [1/1] 1.37ns
._crit_edge258.i.new:2  %tmp14 = or i1 %tmp_48, %tmp_57

ST_1: p_buff_in_flag_1 [1/1] 1.37ns
._crit_edge258.i.new:3  %p_buff_in_flag_1 = or i1 %tmp14, %tmp_47

ST_1: p_buff_in_new_1 [1/1] 1.37ns
._crit_edge258.i.new:4  %p_buff_in_new_1 = and i1 %tmp_47, %not_tmp_2

ST_1: tmp15 [1/1] 1.37ns
._crit_edge258.i.new:5  %tmp15 = or i1 %tmp_49, %tmp_52

ST_1: tmp16 [1/1] 1.37ns
._crit_edge258.i.new:6  %tmp16 = or i1 %sel_tmp26, %tmp_57

ST_1: tmp17 [1/1] 1.37ns
._crit_edge258.i.new:7  %tmp17 = or i1 %tmp16, %sel_tmp24

ST_1: p_buff2read_flag_3 [1/1] 1.37ns
._crit_edge258.i.new:8  %p_buff2read_flag_3 = or i1 %tmp17, %tmp15

ST_1: not_tmp_5 [1/1] 1.37ns
._crit_edge258.i.new:9  %not_tmp_5 = xor i1 %tmp_57, true

ST_1: newSel_cast [1/1] 1.37ns
._crit_edge258.i.new:10  %newSel_cast = select i1 %not_tmp_5, i2 -1, i2 0

ST_1: newSel1 [1/1] 1.37ns
._crit_edge258.i.new:11  %newSel1 = select i1 %sel_tmp24, i2 -2, i2 %sel_tmp262_cast

ST_1: newSel2 [1/1] 1.37ns
._crit_edge258.i.new:12  %newSel2 = select i1 %tmp16, i2 %newSel_cast, i2 %newSel1

ST_1: tmp18 [1/1] 1.37ns
._crit_edge258.i.new:13  %tmp18 = or i1 %begin2pad_load, %tmp_57

ST_1: p_counter_pad_flag_1 [1/1] 1.37ns
._crit_edge258.i.new:14  %p_counter_pad_flag_1 = or i1 %tmp18, %tmp_53

ST_1: tmp_59 [1/1] 1.37ns
._crit_edge258.i.new:15  %tmp_59 = or i1 %tmp_57, %tmp_53

ST_1: p_counter_pad_new_1 [1/1] 1.37ns
._crit_edge258.i.new:16  %p_counter_pad_new_1 = select i1 %tmp_59, i32 0, i32 %counter_pad_loc

ST_1: p_counter3_flag_1 [1/1] 1.37ns
._crit_edge258.i.new:17  %p_counter3_flag_1 = or i1 %tmp_57, %counter3_flag_1

ST_1: p_counter3_loc_1 [1/1] 1.37ns
._crit_edge258.i.new:18  %p_counter3_loc_1 = select i1 %tmp_57, i32 0, i32 %counter3_loc_1

ST_1: stg_252 [1/1] 0.00ns
._crit_edge258.i.new:20  br i1 %p_counter3_flag_1, label %mergeST24, label %._crit_edge259.i.new25

ST_1: stg_253 [1/1] 0.00ns
mergeST24:0  store i32 %p_counter3_loc_1, i32* @counter3, align 4

ST_1: stg_254 [1/1] 0.00ns
._crit_edge259.i.new25:0  br i1 %p_counter_pad_flag_1, label %mergeST22, label %._crit_edge259.i.new23

ST_1: stg_255 [1/1] 0.00ns
mergeST22:0  store i32 %p_counter_pad_new_1, i32* @counter_pad, align 4

ST_1: stg_256 [1/1] 0.00ns
._crit_edge259.i.new23:0  br i1 %p_buff2read_flag_3, label %mergeST12, label %._crit_edge259.i.new13

ST_1: stg_257 [1/1] 0.00ns
mergeST12:0  store i2 %newSel2, i2* @buff2read, align 1

ST_1: stg_258 [1/1] 0.00ns
._crit_edge259.i.new13:0  br i1 %p_buff_in_flag_1, label %mergeST6, label %._crit_edge259.i.new7

ST_1: stg_259 [1/1] 0.00ns
mergeST6:0  store i1 %p_buff_in_new_1, i1* @buff_in, align 1

ST_1: stg_260 [1/1] 0.00ns
._crit_edge259.i.new7:0  br i1 %p_begin2pad_flag, label %mergeST, label %._crit_edge259.i.new

ST_1: stg_261 [1/1] 0.00ns
mergeST:0  store i1 %not_tmp_2, i1* @begin2pad, align 1


 <State 2>: 11.98ns
ST_2: stg_262 [1/1] 0.00ns
_ifconv:0  call void (...)* @_ssdm_op_SpecBitsMap(i16* %src_V_V), !map !7

ST_2: stg_263 [1/1] 0.00ns
_ifconv:1  call void (...)* @_ssdm_op_SpecBitsMap(i16* %dst_V), !map !11

ST_2: stg_264 [1/1] 0.00ns
_ifconv:2  call void (...)* @_ssdm_op_SpecBitsMap(i1* %sof_dst_V), !map !15

ST_2: stg_265 [1/1] 0.00ns
_ifconv:3  call void (...)* @_ssdm_op_SpecBitsMap(i1* %eol_dst_V), !map !19

ST_2: stg_266 [1/1] 0.00ns
_ifconv:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %dst_valid_dst_V), !map !23

ST_2: stg_267 [1/1] 0.00ns
_ifconv:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %src_valid_V), !map !27

ST_2: stg_268 [1/1] 0.00ns
_ifconv:6  call void (...)* @_ssdm_op_SpecBitsMap(i1* %sof_src_V), !map !31

ST_2: stg_269 [1/1] 0.00ns
_ifconv:7  call void (...)* @_ssdm_op_SpecBitsMap(i1* %hsync_V), !map !35

ST_2: stg_270 [1/1] 0.00ns
_ifconv:8  call void (...)* @_ssdm_op_SpecBitsMap(i1* %vsync_V), !map !39

ST_2: stg_271 [1/1] 0.00ns
_ifconv:9  call void (...)* @_ssdm_op_SpecTopModule([23 x i8]* @str) nounwind

ST_2: stg_272 [1/1] 0.00ns
_ifconv:10  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_2: stg_273 [1/1] 0.00ns
_ifconv:11  call void (...)* @_ssdm_op_SpecInterface(i16* %src_V_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_2: stg_274 [1/1] 0.00ns
_ifconv:12  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_2: rbegin [1/1] 0.00ns
_ifconv:13  %rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([25 x i8]* @p_str4) nounwind

ST_2: stg_276 [1/1] 0.00ns
_ifconv:14  call void (...)* @_ssdm_op_SpecMemCore([64 x i16]* @linebuffer2_V, [1 x i8]* @p_str, [12 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_2: tmp2i_V [1/2] 2.39ns
._crit_edge243.i_ifconv:21  %tmp2i_V = load i16* %linebuffer1_V_addr_1, align 2

ST_2: p_0131_0_i [1/1] 1.37ns
._crit_edge243.i_ifconv:22  %p_0131_0_i = select i1 %icmp, i16 %tmp2i_V, i16 0

ST_2: tmp2i_V_1 [1/2] 2.39ns
._crit_edge243.i_ifconv:29  %tmp2i_V_1 = load i16* %linebuffer1b_V_addr_1, align 2

ST_2: p_0131_1_i [1/1] 1.37ns
._crit_edge243.i_ifconv:30  %p_0131_1_i = select i1 %icmp4, i16 %tmp2i_V_1, i16 0

ST_2: tmp2i_V_2 [1/2] 2.39ns
._crit_edge243.i_ifconv:37  %tmp2i_V_2 = load i16* %linebuffer2_V_addr_1, align 2

ST_2: p_0131_2_i [1/1] 1.37ns
._crit_edge243.i_ifconv:38  %p_0131_2_i = select i1 %icmp7, i16 %tmp2i_V_2, i16 0

ST_2: tmp2i_V_3 [1/2] 2.39ns
._crit_edge243.i_ifconv:44  %tmp2i_V_3 = load i16* %linebuffer2b_V_addr_1, align 2

ST_2: p_0131_3_i [1/1] 1.37ns
._crit_edge243.i_ifconv:45  %p_0131_3_i = select i1 %icmp1, i16 %tmp2i_V_3, i16 0

ST_2: sel_tmp19 [1/1] 1.37ns
._crit_edge243.i_ifconv:75  %sel_tmp19 = select i1 %sel_tmp, i16 %p_0131_0_i, i16 0

ST_2: sel_tmp20 [1/1] 1.37ns
._crit_edge243.i_ifconv:76  %sel_tmp20 = select i1 %sel_tmp9, i16 %p_0131_1_i, i16 %sel_tmp19

ST_2: sel_tmp21 [1/1] 1.37ns
._crit_edge243.i_ifconv:77  %sel_tmp21 = select i1 %sel_tmp5, i16 %p_0131_2_i, i16 %sel_tmp20

ST_2: sel_tmp22 [1/1] 1.37ns
._crit_edge243.i_ifconv:78  %sel_tmp22 = select i1 %sel_tmp7, i16 %p_0131_3_i, i16 %sel_tmp21

ST_2: p_0131_8_i [1/1] 1.37ns
._crit_edge243.i_ifconv:79  %p_0131_8_i = select i1 %readbuffer_load, i16 %sel_tmp22, i16 0

ST_2: p_0131_9_i [1/1] 1.37ns
._crit_edge243.i_ifconv:89  %p_0131_9_i = select i1 %begin2pad_load, i16 0, i16 %p_0131_8_i

ST_2: beginvsync_load [1/1] 0.00ns
._crit_edge243.i_ifconv:90  %beginvsync_load = load i1* @beginvsync, align 1

ST_2: counter_vsync_load [1/1] 0.00ns
._crit_edge243.i_ifconv:91  %counter_vsync_load = load i32* @counter_vsync, align 4

ST_2: tmp_25 [1/1] 2.44ns
._crit_edge243.i_ifconv:92  %tmp_25 = add nsw i32 %counter_vsync_load, 1

ST_2: counter_vsync_loc [1/1] 1.37ns
._crit_edge243.i_ifconv:93  %counter_vsync_loc = select i1 %beginvsync_load, i32 %tmp_25, i32 %counter_vsync_load

ST_2: p_215_i [1/1] 1.37ns
._crit_edge243.i_ifconv:103  %p_215_i = or i1 %tmp5, %tmp3

ST_2: tmp6 [1/1] 1.37ns
._crit_edge243.i_ifconv:119  %tmp6 = or i1 %cond_vld1, %cond_vld2

ST_2: tmp8 [1/1] 1.37ns
._crit_edge243.i_ifconv:121  %tmp8 = or i1 %tmp7, %cond_vld3

ST_2: p_i [1/1] 1.37ns
._crit_edge243.i_ifconv:122  %p_i = or i1 %tmp8, %tmp6

ST_2: tmp9 [1/1] 1.37ns
._crit_edge243.i_ifconv:138  %tmp9 = or i1 %cond_hsync1, %cond_hsync2

ST_2: tmp11 [1/1] 1.37ns
._crit_edge243.i_ifconv:140  %tmp11 = or i1 %tmp10, %cond_hsync3

ST_2: p_216_i [1/1] 1.37ns
._crit_edge243.i_ifconv:141  %p_216_i = or i1 %tmp11, %tmp9

ST_2: cond_vsync [1/1] 2.52ns
._crit_edge243.i_ifconv:142  %cond_vsync = icmp eq i32 %counter_vsync_loc, 5

ST_2: stg_303 [1/1] 0.00ns
mergeST8:1  br label %.new9

ST_2: stg_304 [1/1] 0.00ns
mergeST5:1  br label %.new_ifconv

ST_2: stg_305 [1/1] 0.00ns
mergeST20:1  br label %.new21

ST_2: stg_306 [1/1] 0.00ns
mergeST18:1  br label %.new19

ST_2: stg_307 [1/1] 0.00ns
mergeST16:1  br label %.new17

ST_2: stg_308 [1/1] 0.00ns
mergeST14:1  br label %.new15

ST_2: stg_309 [1/1] 0.00ns
mergeST3:1  br label %._crit_edge257.i.new4

ST_2: stg_310 [1/1] 0.00ns
mergeST2:1  br label %._crit_edge257.i.new

ST_2: stg_311 [1/1] 0.00ns
mergeST10:1  br label %._crit_edge258.i.new11

ST_2: stg_312 [1/1] 0.00ns
mergeST1:1  br label %._crit_edge258.i.new

ST_2: tmp_58 [1/1] 2.52ns
._crit_edge258.i.new:19  %tmp_58 = icmp eq i32 %counter_vsync_loc, 10

ST_2: stg_314 [1/1] 0.00ns
mergeST24:1  br label %._crit_edge259.i.new25

ST_2: stg_315 [1/1] 0.00ns
mergeST22:1  br label %._crit_edge259.i.new23

ST_2: stg_316 [1/1] 0.00ns
mergeST12:1  br label %._crit_edge259.i.new13

ST_2: stg_317 [1/1] 0.00ns
mergeST6:1  br label %._crit_edge259.i.new7

ST_2: stg_318 [1/1] 0.00ns
mergeST:1  br label %._crit_edge259.i.new

ST_2: p_beginvsync_flag [1/1] 1.37ns
._crit_edge259.i.new:0  %p_beginvsync_flag = or i1 %tmp_58, %tmp_57

ST_2: not_tmp_4 [1/1] 1.37ns
._crit_edge259.i.new:1  %not_tmp_4 = xor i1 %tmp_58, true

ST_2: p_counter_vsync_flag [1/1] 1.37ns
._crit_edge259.i.new:2  %p_counter_vsync_flag = or i1 %tmp_58, %beginvsync_load

ST_2: p_counter_vsync_loc [1/1] 1.37ns
._crit_edge259.i.new:3  %p_counter_vsync_loc = select i1 %tmp_58, i32 0, i32 %counter_vsync_loc

ST_2: stg_323 [1/1] 0.00ns
._crit_edge259.i.new:4  call void @_ssdm_op_Write.ap_auto.i16P(i16* %dst_V, i16 %p_0131_9_i)

ST_2: stg_324 [1/1] 0.00ns
._crit_edge259.i.new:5  call void @_ssdm_op_Write.ap_auto.i1P(i1* %sof_dst_V, i1 %tmp_26)

ST_2: stg_325 [1/1] 0.00ns
._crit_edge259.i.new:6  call void @_ssdm_op_Write.ap_auto.i1P(i1* %eol_dst_V, i1 %p_215_i)

ST_2: stg_326 [1/1] 0.00ns
._crit_edge259.i.new:7  call void @_ssdm_op_Write.ap_auto.i1P(i1* %dst_valid_dst_V, i1 %p_i)

ST_2: stg_327 [1/1] 0.00ns
._crit_edge259.i.new:8  call void @_ssdm_op_Write.ap_auto.i1P(i1* %hsync_V, i1 %p_216_i)

ST_2: stg_328 [1/1] 0.00ns
._crit_edge259.i.new:9  call void @_ssdm_op_Write.ap_auto.i1P(i1* %vsync_V, i1 %cond_vsync)

ST_2: rend [1/1] 0.00ns
._crit_edge259.i.new:10  %rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([25 x i8]* @p_str4, i32 %rbegin) nounwind

ST_2: stg_330 [1/1] 0.00ns
._crit_edge259.i.new:11  br i1 %p_counter_vsync_flag, label %mergeST27, label %hls_cropping_vert.exit.new28

ST_2: stg_331 [1/1] 0.00ns
mergeST27:0  store i32 %p_counter_vsync_loc, i32* @counter_vsync, align 4

ST_2: stg_332 [1/1] 0.00ns
mergeST27:1  br label %hls_cropping_vert.exit.new28

ST_2: stg_333 [1/1] 0.00ns
hls_cropping_vert.exit.new28:0  br i1 %p_beginvsync_flag, label %mergeST26, label %hls_cropping_vert.exit.new

ST_2: stg_334 [1/1] 0.00ns
mergeST26:0  store i1 %not_tmp_4, i1* @beginvsync, align 1

ST_2: stg_335 [1/1] 0.00ns
mergeST26:1  br label %hls_cropping_vert.exit.new

ST_2: stg_336 [1/1] 0.00ns
hls_cropping_vert.exit.new:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
