-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_cropping_strm is
port (
    src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    dst_valid : OUT STD_LOGIC_VECTOR (0 downto 0);
    sof_sig : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    dst_V_V_TVALID : OUT STD_LOGIC;
    dst_V_V_TREADY : IN STD_LOGIC;
    sof_sig_ap_vld : OUT STD_LOGIC;
    dst_valid_ap_vld : OUT STD_LOGIC );
end;


architecture behav of hls_cropping_strm is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hls_cropping_strm,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=15.182000,HLS_SYN_LAT=191,HLS_SYN_TPT=192,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=6115,HLS_SYN_LUT=4430}";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_true : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_ap_start : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_ap_done : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_ap_continue : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_ap_idle : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_ap_ready : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_src_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_cropping_strm_Block_proc_U0_src_TVALID : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_src_TREADY : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_src_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal hls_cropping_strm_Block_proc_U0_src_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal hls_cropping_strm_Block_proc_U0_src_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal hls_cropping_strm_Block_proc_U0_src_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal hls_cropping_strm_Block_proc_U0_src_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal hls_cropping_strm_Block_proc_U0_src_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal hls_cropping_strm_Block_proc_U0_dst_V_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_cropping_strm_Block_proc_U0_dst_V_V_TVALID : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_dst_V_V_TREADY : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_sof_sig : STD_LOGIC_VECTOR (0 downto 0);
    signal hls_cropping_strm_Block_proc_U0_sof_sig_ap_vld : STD_LOGIC;
    signal hls_cropping_strm_Block_proc_U0_dst_valid : STD_LOGIC_VECTOR (0 downto 0);
    signal hls_cropping_strm_Block_proc_U0_dst_valid_ap_vld : STD_LOGIC;
    signal ap_sig_hs_continue : STD_LOGIC;
    signal ap_CS : STD_LOGIC;
    signal ap_sig_hs_done : STD_LOGIC;

    component hls_cropping_strm_Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        src_TVALID : IN STD_LOGIC;
        src_TREADY : OUT STD_LOGIC;
        src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        dst_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        dst_V_V_TVALID : OUT STD_LOGIC;
        dst_V_V_TREADY : IN STD_LOGIC;
        sof_sig : OUT STD_LOGIC_VECTOR (0 downto 0);
        sof_sig_ap_vld : OUT STD_LOGIC;
        dst_valid : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_valid_ap_vld : OUT STD_LOGIC );
    end component;



begin
    hls_cropping_strm_Block_proc_U0 : component hls_cropping_strm_Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => hls_cropping_strm_Block_proc_U0_ap_start,
        ap_done => hls_cropping_strm_Block_proc_U0_ap_done,
        ap_continue => hls_cropping_strm_Block_proc_U0_ap_continue,
        ap_idle => hls_cropping_strm_Block_proc_U0_ap_idle,
        ap_ready => hls_cropping_strm_Block_proc_U0_ap_ready,
        src_TDATA => hls_cropping_strm_Block_proc_U0_src_TDATA,
        src_TVALID => hls_cropping_strm_Block_proc_U0_src_TVALID,
        src_TREADY => hls_cropping_strm_Block_proc_U0_src_TREADY,
        src_TKEEP => hls_cropping_strm_Block_proc_U0_src_TKEEP,
        src_TSTRB => hls_cropping_strm_Block_proc_U0_src_TSTRB,
        src_TUSER => hls_cropping_strm_Block_proc_U0_src_TUSER,
        src_TLAST => hls_cropping_strm_Block_proc_U0_src_TLAST,
        src_TID => hls_cropping_strm_Block_proc_U0_src_TID,
        src_TDEST => hls_cropping_strm_Block_proc_U0_src_TDEST,
        dst_V_V_TDATA => hls_cropping_strm_Block_proc_U0_dst_V_V_TDATA,
        dst_V_V_TVALID => hls_cropping_strm_Block_proc_U0_dst_V_V_TVALID,
        dst_V_V_TREADY => hls_cropping_strm_Block_proc_U0_dst_V_V_TREADY,
        sof_sig => hls_cropping_strm_Block_proc_U0_sof_sig,
        sof_sig_ap_vld => hls_cropping_strm_Block_proc_U0_sof_sig_ap_vld,
        dst_valid => hls_cropping_strm_Block_proc_U0_dst_valid,
        dst_valid_ap_vld => hls_cropping_strm_Block_proc_U0_dst_valid_ap_vld);





    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_0;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(hls_cropping_strm_Block_proc_U0_ap_done)
    begin
        if ((hls_cropping_strm_Block_proc_U0_ap_done = ap_const_logic_1)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;

    dst_V_V_TDATA <= hls_cropping_strm_Block_proc_U0_dst_V_V_TDATA;
    dst_V_V_TVALID <= hls_cropping_strm_Block_proc_U0_dst_V_V_TVALID;
    dst_valid(0) <= hls_cropping_strm_Block_proc_U0_dst_valid(0);
    dst_valid_ap_vld <= hls_cropping_strm_Block_proc_U0_dst_valid_ap_vld;
    hls_cropping_strm_Block_proc_U0_ap_continue <= ap_const_logic_1;
    hls_cropping_strm_Block_proc_U0_ap_start <= ap_const_logic_1;
    hls_cropping_strm_Block_proc_U0_dst_V_V_TREADY <= dst_V_V_TREADY;
    hls_cropping_strm_Block_proc_U0_src_TDATA <= src_TDATA;
    hls_cropping_strm_Block_proc_U0_src_TDEST <= src_TDEST;
    hls_cropping_strm_Block_proc_U0_src_TID <= src_TID;
    hls_cropping_strm_Block_proc_U0_src_TKEEP <= src_TKEEP;
    hls_cropping_strm_Block_proc_U0_src_TLAST <= src_TLAST;
    hls_cropping_strm_Block_proc_U0_src_TSTRB <= src_TSTRB;
    hls_cropping_strm_Block_proc_U0_src_TUSER <= src_TUSER;
    hls_cropping_strm_Block_proc_U0_src_TVALID <= src_TVALID;
    sof_sig(0) <= hls_cropping_strm_Block_proc_U0_sof_sig(0);
    sof_sig_ap_vld <= hls_cropping_strm_Block_proc_U0_sof_sig_ap_vld;
    src_TREADY <= hls_cropping_strm_Block_proc_U0_src_TREADY;
end behav;
