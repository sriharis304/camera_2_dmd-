// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hls_cropping_vert_strm,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=17.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=21.688000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=307,HLS_SYN_LUT=2439}" *)

module hls_cropping_vert_strm (
        ap_clk,
        ap_rst_n,
        src_V_V_TDATA,
        src_V_V_TVALID,
        src_V_V_TREADY,
        dst_V,
        dst_V_ap_vld,
        sof_dst_V,
        sof_dst_V_ap_vld,
        eol_dst_V,
        eol_dst_V_ap_vld,
        dst_valid_dst_V,
        dst_valid_dst_V_ap_vld,
        src_valid_V,
        sof_src_V
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_true = 1'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_54C0 = 32'b101010011000000;
parameter    ap_const_lv32_A980 = 32'b1010100110000000;
parameter    ap_const_lv32_1680 = 32'b1011010000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;

input   ap_clk;
input   ap_rst_n;
input  [15:0] src_V_V_TDATA;
input   src_V_V_TVALID;
output   src_V_V_TREADY;
output  [15:0] dst_V;
output   dst_V_ap_vld;
output  [0:0] sof_dst_V;
output   sof_dst_V_ap_vld;
output  [0:0] eol_dst_V;
output   eol_dst_V_ap_vld;
output  [0:0] dst_valid_dst_V;
output   dst_valid_dst_V_ap_vld;
input  [0:0] src_valid_V;
input  [0:0] sof_src_V;

reg src_V_V_TREADY;
reg dst_V_ap_vld;
reg sof_dst_V_ap_vld;
reg eol_dst_V_ap_vld;
reg dst_valid_dst_V_ap_vld;
reg    ap_rst_n_inv;
reg   [0:0] begin2pad = 1'b0;
reg   [0:0] readbuffer = 1'b0;
reg   [0:0] begin2buffer = 1'b0;
reg   [31:0] counter = 32'b00000000000000000000000000000000;
reg   [31:0] col_counter = 32'b00000000000000000000000000000000;
reg   [0:0] buff_in = 1'b0;
reg   [31:0] col_counter2 = 32'b00000000000000000000000000000000;
wire   [5:0] linebuffer1_V_address0;
reg    linebuffer1_V_ce0;
reg    linebuffer1_V_we0;
wire   [15:0] linebuffer1_V_d0;
wire   [5:0] linebuffer1_V_address1;
reg    linebuffer1_V_ce1;
wire   [15:0] linebuffer1_V_q1;
wire   [5:0] linebuffer1b_V_address0;
reg    linebuffer1b_V_ce0;
reg    linebuffer1b_V_we0;
wire   [15:0] linebuffer1b_V_d0;
wire   [5:0] linebuffer1b_V_address1;
reg    linebuffer1b_V_ce1;
wire   [15:0] linebuffer1b_V_q1;
wire   [5:0] linebuffer2_V_address0;
reg    linebuffer2_V_ce0;
wire   [15:0] linebuffer2_V_q0;
wire   [5:0] linebuffer2_V_address1;
reg    linebuffer2_V_ce1;
reg    linebuffer2_V_we1;
wire   [15:0] linebuffer2_V_d1;
wire   [5:0] linebuffer2b_V_address0;
reg    linebuffer2b_V_ce0;
reg    linebuffer2b_V_we0;
wire   [15:0] linebuffer2b_V_d0;
wire   [5:0] linebuffer2b_V_address1;
reg    linebuffer2b_V_ce1;
wire   [15:0] linebuffer2b_V_q1;
reg   [31:0] counter2 = 32'b00000000000000000000000000000000;
reg   [1:0] buff2read = 2'b00;
reg   [31:0] counter_rd1 = 32'b00000000000000000000000000000000;
reg   [31:0] counter_rd1b = 32'b00000000000000000000000000000000;
reg   [31:0] counter_rd2 = 32'b00000000000000000000000000000000;
reg   [31:0] counter_rd2b = 32'b00000000000000000000000000000000;
reg   [31:0] counter3 = 32'b00000000000000000000000000000000;
reg   [0:0] begin2pad_load_reg_1468;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_109;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] readbuffer_load_reg_1473;
wire   [0:0] sel_tmp_fu_597_p2;
reg   [0:0] sel_tmp_reg_1504;
wire   [0:0] sel_tmp5_fu_627_p2;
reg   [0:0] sel_tmp5_reg_1509;
wire   [0:0] sel_tmp7_fu_645_p2;
reg   [0:0] sel_tmp7_reg_1514;
wire   [0:0] sel_tmp9_fu_677_p2;
reg   [0:0] sel_tmp9_reg_1519;
wire   [0:0] tmp_19_fu_809_p2;
reg   [0:0] tmp_19_reg_1524;
wire   [0:0] tmp3_fu_857_p2;
reg   [0:0] tmp3_reg_1529;
wire   [0:0] tmp5_fu_869_p2;
reg   [0:0] tmp5_reg_1534;
wire   [0:0] tmp6_fu_899_p2;
reg   [0:0] tmp6_reg_1539;
wire   [0:0] tmp8_fu_911_p2;
reg   [0:0] tmp8_reg_1544;
wire   [0:0] col_counter_flag_3_fu_937_p2;
wire   [0:0] col_counter2_flag_3_fu_963_p2;
wire   [0:0] counter_rd1_flag_1_fu_1031_p2;
wire   [0:0] counter_rd1b_flag_2_fu_1061_p2;
wire   [0:0] counter_rd2_flag_3_fu_1083_p2;
wire   [0:0] counter_rd2b_flag_4_fu_1139_p2;
wire   [0:0] p_begin2buffer_flag_fu_1205_p2;
wire   [0:0] p_counter_flag_1_fu_1217_p2;
wire   [0:0] p_readbuffer_flag_fu_1249_p2;
wire   [0:0] p_counter2_flag_fu_1261_p2;
wire   [0:0] p_begin2pad_flag_fu_1293_p2;
wire   [0:0] p_buff_in_flag_1_fu_1311_p2;
wire   [0:0] p_buff2read_flag_3_fu_1341_p2;
wire   [0:0] p_counter3_flag_fu_1377_p2;
wire   [0:0] begin2buffer_flag_fu_404_p2;
wire   [0:0] ap_reg_phiprechg_counter_flag_1_reg_258pp0_it0;
wire   [0:0] tmp_fu_438_p2;
reg   [0:0] counter_flag_1_phi_fu_261_p6;
wire   [0:0] buff_in_load_load_fu_444_p1;
wire   [31:0] ap_reg_phiprechg_counter_new_1_reg_271pp0_it0;
reg   [31:0] counter_new_1_phi_fu_274_p6;
wire   [31:0] tmp_1_fu_454_p2;
wire   [31:0] counter_loc_fu_419_p3;
wire   [31:0] ap_reg_phiprechg_counter_loc_1_reg_283pp0_it0;
reg   [31:0] counter_loc_1_phi_fu_286_p6;
wire   [0:0] ap_reg_phiprechg_col_counter_flag_2_reg_294pp0_it0;
reg   [0:0] col_counter_flag_2_phi_fu_297_p6;
wire   [31:0] ap_reg_phiprechg_col_counter_new_2_reg_306pp0_it0;
reg   [31:0] col_counter_new_2_phi_fu_309_p6;
wire   [31:0] tmp_5_fu_470_p2;
wire   [31:0] col_counter_loc_fu_428_p3;
wire   [31:0] ap_reg_phiprechg_col_counter_loc_2_reg_319pp0_it0;
reg   [31:0] col_counter_loc_2_phi_fu_322_p6;
wire   [0:0] ap_reg_phiprechg_col_counter2_flag_1_reg_330pp0_it0;
reg   [0:0] col_counter2_flag_1_phi_fu_333_p6;
wire   [31:0] ap_reg_phiprechg_col_counter2_loc_1_reg_344pp0_it0;
reg   [31:0] col_counter2_loc_1_phi_fu_347_p6;
wire   [31:0] tmp_3_fu_484_p2;
wire  signed [63:0] tmp_4_fu_464_p1;
wire  signed [63:0] tmp_2_fu_478_p1;
wire  signed [63:0] tmp_8_fu_527_p1;
wire  signed [63:0] tmp_10_fu_544_p1;
wire  signed [63:0] tmp_13_fu_561_p1;
wire  signed [63:0] tmp_16_fu_578_p1;
wire   [0:0] not_tmp_2_fu_1299_p2;
wire   [0:0] not_tmp_1_fu_1255_p2;
wire   [0:0] not_tmp_s_fu_1211_p2;
wire   [31:0] p_counter_new_1_fu_1223_p3;
wire   [31:0] col_counter_new_3_fu_943_p3;
wire   [0:0] p_buff_in_new_1_fu_1317_p2;
wire   [31:0] col_counter2_new_3_fu_969_p3;
wire   [31:0] p_counter2_loc_fu_1267_p3;
wire   [1:0] newSel2_fu_1369_p3;
wire   [31:0] counter_rd1_new_1_fu_1053_p3;
wire   [31:0] counter_rd1b_new_2_fu_1075_p3;
wire   [31:0] counter_rd2_new_3_fu_1089_p3;
wire   [31:0] counter_rd2b_new_4_fu_1161_p3;
wire   [31:0] p_counter3_loc_fu_1383_p3;
wire   [0:0] brmerge_fu_376_p2;
wire   [0:0] not_brmerge_fu_398_p2;
wire   [31:0] p_counter_load_fu_382_p3;
wire   [31:0] p_col_counter_load_fu_390_p3;
wire   [0:0] begin2buffer_loc_fu_413_p2;
wire   [31:0] tmp_6_fu_515_p2;
wire   [0:0] tmp_7_fu_521_p2;
wire   [0:0] sel_tmp1_fu_603_p2;
wire   [0:0] tmp_s_fu_538_p2;
wire   [0:0] sel_tmp2_fu_609_p2;
wire   [0:0] sel_tmp3_fu_615_p2;
wire   [0:0] sel_tmp4_fu_621_p2;
wire   [0:0] tmp_12_fu_555_p2;
wire   [0:0] tmp_15_fu_572_p2;
wire   [0:0] sel_tmp6_fu_633_p2;
wire   [0:0] tmp1_fu_639_p2;
wire   [0:0] tmp342_demorgan_fu_651_p2;
wire   [0:0] tmp2_fu_657_p2;
wire   [31:0] tmp_9_fu_532_p2;
wire   [31:0] sel_tmp8_fu_669_p3;
wire   [31:0] sel_tmp10_fu_683_p3;
wire   [31:0] sel_tmp11_fu_691_p3;
wire   [31:0] sel_tmp12_fu_699_p3;
wire   [31:0] tmp_11_fu_549_p2;
wire   [31:0] sel_tmp13_fu_715_p3;
wire   [31:0] sel_tmp14_fu_723_p3;
wire   [31:0] sel_tmp15_fu_731_p3;
wire   [31:0] tmp_14_fu_566_p2;
wire   [31:0] sel_tmp16_fu_747_p3;
wire   [31:0] sel_tmp17_fu_755_p3;
wire   [31:0] tmp_17_fu_583_p2;
wire   [31:0] sel_tmp18_fu_771_p3;
wire   [31:0] tmp_18_fu_791_p2;
wire   [31:0] counter3_loc_fu_797_p3;
wire   [31:0] counter2_loc_fu_589_p3;
wire   [31:0] counter_rd1_loc_fu_707_p3;
wire   [31:0] counter_rd2_loc_fu_763_p3;
wire   [31:0] counter_rd1b_loc_fu_739_p3;
wire   [31:0] counter_rd2b_loc_fu_779_p3;
wire   [5:0] tmp_36_fu_805_p1;
wire   [0:0] tmp_24_fu_839_p2;
wire   [0:0] tmp_25_fu_845_p2;
wire   [0:0] tmp_20_fu_815_p2;
wire   [0:0] tmp_21_fu_821_p2;
wire   [0:0] tmp_23_fu_833_p2;
wire   [0:0] cond_eol_fu_851_p2;
wire   [0:0] tmp4_fu_863_p2;
wire   [0:0] tmp_22_fu_827_p2;
wire   [0:0] tmp_26_fu_875_p2;
wire   [0:0] tmp_27_fu_881_p2;
wire   [0:0] tmp_29_fu_893_p2;
wire   [0:0] tmp7_fu_905_p2;
wire   [0:0] tmp_28_fu_887_p2;
wire   [0:0] tmp_31_fu_923_p2;
wire   [0:0] tmp_30_fu_917_p2;
wire   [0:0] not_tmp_3_fu_951_p2;
wire   [0:0] p_col_counter2_flag_1_fu_957_p2;
wire   [31:0] p_col_counter2_loc_1_fu_929_p3;
wire   [0:0] sel_tmp23_fu_997_p2;
wire   [0:0] sel_tmp256_demorgan_fu_1009_p2;
wire   [0:0] sel_tmp25_fu_1015_p2;
wire   [0:0] counter_rd1_flag_fu_663_p2;
wire   [0:0] sel_tmp24_fu_1003_p2;
wire   [31:0] sel_tmp27_fu_1037_p3;
wire   [0:0] sel_tmp26_fu_1021_p2;
wire   [31:0] sel_tmp28_fu_1045_p3;
wire   [31:0] sel_tmp29_fu_1067_p3;
wire   [0:0] tmp_22_not_fu_1097_p2;
wire   [0:0] tmp_21_not_fu_1109_p2;
wire   [0:0] not_sel_tmp_fu_1103_p2;
wire   [0:0] not_sel_tmp1_fu_1115_p2;
wire   [0:0] tmp10_fu_1127_p2;
wire   [0:0] tmp9_fu_1121_p2;
wire   [0:0] sel_tmp30_fu_1133_p2;
wire   [31:0] p_counter_rd2b_loc_fu_989_p3;
wire   [31:0] sel_tmp31_fu_1145_p3;
wire   [31:0] sel_tmp32_fu_1153_p3;
wire   [0:0] tmp_33_fu_1199_p2;
wire   [0:0] tmp_34_fu_1231_p2;
wire   [0:0] tmp_32_fu_1169_p2;
wire   [0:0] tmp_35_fu_1275_p2;
wire   [0:0] tmp11_fu_1305_p2;
wire   [0:0] tmp13_fu_1329_p2;
wire   [0:0] tmp14_fu_1335_p2;
wire   [0:0] tmp12_fu_1323_p2;
wire   [0:0] not_tmp_4_fu_1347_p2;
wire   [1:0] sel_tmp259_cast_fu_1027_p1;
wire   [1:0] newSel_cast_fu_1353_p3;
wire   [1:0] newSel1_fu_1361_p3;
wire   [15:0] sel_tmp19_fu_1415_p3;
wire   [15:0] sel_tmp20_fu_1422_p3;
wire   [15:0] sel_tmp21_fu_1429_p3;
wire   [15:0] sel_tmp22_fu_1436_p3;
wire   [15:0] p_0118_4_i_fu_1443_p3;
reg   [0:0] ap_NS_fsm;
wire    ap_sig_pprstidle_pp0;


hls_cropping_vert_strm_linebuffer1_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( linebuffer1_V_address0 ),
    .ce0( linebuffer1_V_ce0 ),
    .we0( linebuffer1_V_we0 ),
    .d0( linebuffer1_V_d0 ),
    .address1( linebuffer1_V_address1 ),
    .ce1( linebuffer1_V_ce1 ),
    .q1( linebuffer1_V_q1 )
);

hls_cropping_vert_strm_linebuffer1_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer1b_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( linebuffer1b_V_address0 ),
    .ce0( linebuffer1b_V_ce0 ),
    .we0( linebuffer1b_V_we0 ),
    .d0( linebuffer1b_V_d0 ),
    .address1( linebuffer1b_V_address1 ),
    .ce1( linebuffer1b_V_ce1 ),
    .q1( linebuffer1b_V_q1 )
);

hls_cropping_vert_strm_linebuffer2_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( linebuffer2_V_address0 ),
    .ce0( linebuffer2_V_ce0 ),
    .q0( linebuffer2_V_q0 ),
    .address1( linebuffer2_V_address1 ),
    .ce1( linebuffer2_V_ce1 ),
    .we1( linebuffer2_V_we1 ),
    .d1( linebuffer2_V_d1 )
);

hls_cropping_vert_strm_linebuffer1_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linebuffer2b_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( linebuffer2b_V_address0 ),
    .ce0( linebuffer2b_V_ce0 ),
    .we0( linebuffer2b_V_we0 ),
    .d0( linebuffer2b_V_d0 ),
    .address1( linebuffer2b_V_address1 ),
    .ce1( linebuffer2b_V_ce1 ),
    .q1( linebuffer2b_V_q1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_begin2buffer_flag_fu_1205_p2))) begin
        begin2buffer <= not_tmp_s_fu_1211_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_begin2pad_flag_fu_1293_p2))) begin
        begin2pad <= not_tmp_2_fu_1299_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        begin2pad_load_reg_1468 <= begin2pad;
        readbuffer_load_reg_1473 <= readbuffer;
        sel_tmp5_reg_1509 <= sel_tmp5_fu_627_p2;
        sel_tmp7_reg_1514 <= sel_tmp7_fu_645_p2;
        sel_tmp9_reg_1519 <= sel_tmp9_fu_677_p2;
        sel_tmp_reg_1504 <= sel_tmp_fu_597_p2;
        tmp3_reg_1529 <= tmp3_fu_857_p2;
        tmp5_reg_1534 <= tmp5_fu_869_p2;
        tmp6_reg_1539 <= tmp6_fu_899_p2;
        tmp8_reg_1544 <= tmp8_fu_911_p2;
        tmp_19_reg_1524 <= tmp_19_fu_809_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_buff2read_flag_3_fu_1341_p2))) begin
        buff2read <= newSel2_fu_1369_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_buff_in_flag_1_fu_1311_p2))) begin
        buff_in <= p_buff_in_new_1_fu_1317_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == col_counter_flag_3_fu_937_p2))) begin
        col_counter <= col_counter_new_3_fu_943_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == col_counter2_flag_3_fu_963_p2))) begin
        col_counter2 <= col_counter2_new_3_fu_969_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_counter_flag_1_fu_1217_p2))) begin
        counter <= p_counter_new_1_fu_1223_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_counter2_flag_fu_1261_p2))) begin
        counter2 <= p_counter2_loc_fu_1267_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_counter3_flag_fu_1377_p2))) begin
        counter3 <= p_counter3_loc_fu_1383_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == counter_rd1_flag_1_fu_1031_p2))) begin
        counter_rd1 <= counter_rd1_new_1_fu_1053_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == counter_rd1b_flag_2_fu_1061_p2))) begin
        counter_rd1b <= counter_rd1b_new_2_fu_1075_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == counter_rd2_flag_3_fu_1083_p2))) begin
        counter_rd2 <= counter_rd2_new_3_fu_1089_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == counter_rd2b_flag_4_fu_1139_p2))) begin
        counter_rd2b <= counter_rd2b_new_4_fu_1161_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == p_readbuffer_flag_fu_1249_p2))) begin
        readbuffer <= not_tmp_1_fu_1255_p2;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. ///
always @ (ap_sig_bdd_109)
begin
    if (ap_sig_bdd_109) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

assign ap_sig_pprstidle_pp0 = ap_const_logic_0;

/// col_counter2_flag_1_phi_fu_333_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1 or ap_reg_phiprechg_col_counter2_flag_1_reg_330pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        col_counter2_flag_1_phi_fu_333_p6 = ap_const_lv1_1;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_438_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1)))) begin
        col_counter2_flag_1_phi_fu_333_p6 = ap_const_lv1_0;
    end else begin
        col_counter2_flag_1_phi_fu_333_p6 = ap_reg_phiprechg_col_counter2_flag_1_reg_330pp0_it0;
    end
end

/// col_counter2_loc_1_phi_fu_347_p6 assign process. ///
always @ (col_counter2 or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1 or ap_reg_phiprechg_col_counter2_loc_1_reg_344pp0_it0 or tmp_3_fu_484_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        col_counter2_loc_1_phi_fu_347_p6 = tmp_3_fu_484_p2;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_438_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1)))) begin
        col_counter2_loc_1_phi_fu_347_p6 = col_counter2;
    end else begin
        col_counter2_loc_1_phi_fu_347_p6 = ap_reg_phiprechg_col_counter2_loc_1_reg_344pp0_it0;
    end
end

/// col_counter_flag_2_phi_fu_297_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or begin2buffer_flag_fu_404_p2 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1 or ap_reg_phiprechg_col_counter_flag_2_reg_294pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        col_counter_flag_2_phi_fu_297_p6 = ap_const_lv1_1;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_438_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1)))) begin
        col_counter_flag_2_phi_fu_297_p6 = begin2buffer_flag_fu_404_p2;
    end else begin
        col_counter_flag_2_phi_fu_297_p6 = ap_reg_phiprechg_col_counter_flag_2_reg_294pp0_it0;
    end
end

/// col_counter_loc_2_phi_fu_322_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1 or tmp_5_fu_470_p2 or col_counter_loc_fu_428_p3 or ap_reg_phiprechg_col_counter_loc_2_reg_319pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        col_counter_loc_2_phi_fu_322_p6 = tmp_5_fu_470_p2;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_438_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1)))) begin
        col_counter_loc_2_phi_fu_322_p6 = col_counter_loc_fu_428_p3;
    end else begin
        col_counter_loc_2_phi_fu_322_p6 = ap_reg_phiprechg_col_counter_loc_2_reg_319pp0_it0;
    end
end

/// col_counter_new_2_phi_fu_309_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1 or ap_reg_phiprechg_col_counter_new_2_reg_306pp0_it0 or tmp_5_fu_470_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        col_counter_new_2_phi_fu_309_p6 = tmp_5_fu_470_p2;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_438_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1)))) begin
        col_counter_new_2_phi_fu_309_p6 = ap_const_lv32_0;
    end else begin
        col_counter_new_2_phi_fu_309_p6 = ap_reg_phiprechg_col_counter_new_2_reg_306pp0_it0;
    end
end

/// counter_flag_1_phi_fu_261_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or begin2buffer_flag_fu_404_p2 or ap_reg_phiprechg_counter_flag_1_reg_258pp0_it0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1)))) begin
        counter_flag_1_phi_fu_261_p6 = ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_438_p2))) begin
        counter_flag_1_phi_fu_261_p6 = begin2buffer_flag_fu_404_p2;
    end else begin
        counter_flag_1_phi_fu_261_p6 = ap_reg_phiprechg_counter_flag_1_reg_258pp0_it0;
    end
end

/// counter_loc_1_phi_fu_286_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1 or tmp_1_fu_454_p2 or counter_loc_fu_419_p3 or ap_reg_phiprechg_counter_loc_1_reg_283pp0_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1)))) begin
        counter_loc_1_phi_fu_286_p6 = tmp_1_fu_454_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_438_p2))) begin
        counter_loc_1_phi_fu_286_p6 = counter_loc_fu_419_p3;
    end else begin
        counter_loc_1_phi_fu_286_p6 = ap_reg_phiprechg_counter_loc_1_reg_283pp0_it0;
    end
end

/// counter_new_1_phi_fu_274_p6 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1 or ap_reg_phiprechg_counter_new_1_reg_271pp0_it0 or tmp_1_fu_454_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1)))) begin
        counter_new_1_phi_fu_274_p6 = tmp_1_fu_454_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_lv1_0 == tmp_fu_438_p2))) begin
        counter_new_1_phi_fu_274_p6 = ap_const_lv32_0;
    end else begin
        counter_new_1_phi_fu_274_p6 = ap_reg_phiprechg_counter_new_1_reg_271pp0_it0;
    end
end

/// dst_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        dst_V_ap_vld = ap_const_logic_1;
    end else begin
        dst_V_ap_vld = ap_const_logic_0;
    end
end

/// dst_valid_dst_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        dst_valid_dst_V_ap_vld = ap_const_logic_1;
    end else begin
        dst_valid_dst_V_ap_vld = ap_const_logic_0;
    end
end

/// eol_dst_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        eol_dst_V_ap_vld = ap_const_logic_1;
    end else begin
        eol_dst_V_ap_vld = ap_const_logic_0;
    end
end

/// linebuffer1_V_ce0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer1_V_ce0 = ap_const_logic_1;
    end else begin
        linebuffer1_V_ce0 = ap_const_logic_0;
    end
end

/// linebuffer1_V_ce1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer1_V_ce1 = ap_const_logic_1;
    end else begin
        linebuffer1_V_ce1 = ap_const_logic_0;
    end
end

/// linebuffer1_V_we0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        linebuffer1_V_we0 = ap_const_logic_1;
    end else begin
        linebuffer1_V_we0 = ap_const_logic_0;
    end
end

/// linebuffer1b_V_ce0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer1b_V_ce0 = ap_const_logic_1;
    end else begin
        linebuffer1b_V_ce0 = ap_const_logic_0;
    end
end

/// linebuffer1b_V_ce1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer1b_V_ce1 = ap_const_logic_1;
    end else begin
        linebuffer1b_V_ce1 = ap_const_logic_0;
    end
end

/// linebuffer1b_V_we0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & (ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        linebuffer1b_V_we0 = ap_const_logic_1;
    end else begin
        linebuffer1b_V_we0 = ap_const_logic_0;
    end
end

/// linebuffer2_V_ce0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer2_V_ce0 = ap_const_logic_1;
    end else begin
        linebuffer2_V_ce0 = ap_const_logic_0;
    end
end

/// linebuffer2_V_ce1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer2_V_ce1 = ap_const_logic_1;
    end else begin
        linebuffer2_V_ce1 = ap_const_logic_0;
    end
end

/// linebuffer2_V_we1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        linebuffer2_V_we1 = ap_const_logic_1;
    end else begin
        linebuffer2_V_we1 = ap_const_logic_0;
    end
end

/// linebuffer2b_V_ce0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer2b_V_ce0 = ap_const_logic_1;
    end else begin
        linebuffer2b_V_ce0 = ap_const_logic_0;
    end
end

/// linebuffer2b_V_ce1 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        linebuffer2b_V_ce1 = ap_const_logic_1;
    end else begin
        linebuffer2b_V_ce1 = ap_const_logic_0;
    end
end

/// linebuffer2b_V_we0 assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or tmp_fu_438_p2 or buff_in_load_load_fu_444_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)) & ~(ap_const_lv1_0 == tmp_fu_438_p2) & ~(ap_const_lv1_0 == buff_in_load_load_fu_444_p1))) begin
        linebuffer2b_V_we0 = ap_const_logic_1;
    end else begin
        linebuffer2b_V_we0 = ap_const_logic_0;
    end
end

/// sof_dst_V_ap_vld assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        sof_dst_V_ap_vld = ap_const_logic_1;
    end else begin
        sof_dst_V_ap_vld = ap_const_logic_0;
    end
end

/// src_V_V_TREADY assign process. ///
always @ (src_V_V_TVALID or ap_sig_cseq_ST_pp0_stg0_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_const_logic_1) & ~((src_V_V_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        src_V_V_TREADY = ap_const_logic_1;
    end else begin
        src_V_V_TREADY = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (src_V_V_TVALID or ap_CS_fsm or ap_sig_pprstidle_pp0)
begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_phiprechg_col_counter2_flag_1_reg_330pp0_it0 = 'bx;
assign ap_reg_phiprechg_col_counter2_loc_1_reg_344pp0_it0 = 'bx;
assign ap_reg_phiprechg_col_counter_flag_2_reg_294pp0_it0 = 'bx;
assign ap_reg_phiprechg_col_counter_loc_2_reg_319pp0_it0 = 'bx;
assign ap_reg_phiprechg_col_counter_new_2_reg_306pp0_it0 = 'bx;
assign ap_reg_phiprechg_counter_flag_1_reg_258pp0_it0 = 'bx;
assign ap_reg_phiprechg_counter_loc_1_reg_283pp0_it0 = 'bx;
assign ap_reg_phiprechg_counter_new_1_reg_271pp0_it0 = 'bx;
assign ap_reg_ppiten_pp0_it0 = ap_const_logic_1;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_109 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_109 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign begin2buffer_flag_fu_404_p2 = (sof_src_V & not_brmerge_fu_398_p2);
assign begin2buffer_loc_fu_413_p2 = (begin2buffer | begin2buffer_flag_fu_404_p2);
assign brmerge_fu_376_p2 = (begin2pad | readbuffer);
assign buff_in_load_load_fu_444_p1 = buff_in;
assign col_counter2_flag_3_fu_963_p2 = (col_counter2_flag_1_phi_fu_333_p6 | p_col_counter2_flag_1_fu_957_p2);
assign col_counter2_new_3_fu_969_p3 = ((tmp_30_fu_917_p2)? col_counter2_loc_1_phi_fu_347_p6: p_col_counter2_loc_1_fu_929_p3);
assign col_counter_flag_3_fu_937_p2 = (tmp_30_fu_917_p2 | col_counter_flag_2_phi_fu_297_p6);
assign col_counter_loc_fu_428_p3 = ((brmerge_fu_376_p2)? col_counter: p_col_counter_load_fu_390_p3);
assign col_counter_new_3_fu_943_p3 = ((tmp_30_fu_917_p2)? ap_const_lv32_0: col_counter_new_2_phi_fu_309_p6);
assign cond_eol_fu_851_p2 = (tmp_24_fu_839_p2 & tmp_25_fu_845_p2);
assign counter2_loc_fu_589_p3 = ((readbuffer)? tmp_6_fu_515_p2: counter2);
assign counter3_loc_fu_797_p3 = ((begin2pad)? tmp_18_fu_791_p2: counter3);
assign counter_loc_fu_419_p3 = ((brmerge_fu_376_p2)? counter: p_counter_load_fu_382_p3);
assign counter_rd1_flag_1_fu_1031_p2 = (counter_rd1_flag_fu_663_p2 | tmp_20_fu_815_p2);
assign counter_rd1_flag_fu_663_p2 = (sel_tmp_fu_597_p2 & tmp2_fu_657_p2);
assign counter_rd1_loc_fu_707_p3 = ((readbuffer)? sel_tmp12_fu_699_p3: counter_rd1);
assign counter_rd1_new_1_fu_1053_p3 = ((sel_tmp26_fu_1021_p2)? counter_rd1_loc_fu_707_p3: sel_tmp28_fu_1045_p3);
assign counter_rd1b_flag_2_fu_1061_p2 = (sel_tmp9_fu_677_p2 | sel_tmp24_fu_1003_p2);
assign counter_rd1b_loc_fu_739_p3 = ((readbuffer)? sel_tmp15_fu_731_p3: counter_rd1b);
assign counter_rd1b_new_2_fu_1075_p3 = ((sel_tmp26_fu_1021_p2)? counter_rd1b_loc_fu_739_p3: sel_tmp29_fu_1067_p3);
assign counter_rd2_flag_3_fu_1083_p2 = (sel_tmp26_fu_1021_p2 | sel_tmp5_fu_627_p2);
assign counter_rd2_loc_fu_763_p3 = ((readbuffer)? sel_tmp17_fu_755_p3: counter_rd2);
assign counter_rd2_new_3_fu_1089_p3 = ((sel_tmp26_fu_1021_p2)? ap_const_lv32_0: counter_rd2_loc_fu_763_p3);
assign counter_rd2b_flag_4_fu_1139_p2 = (sel_tmp7_fu_645_p2 | sel_tmp30_fu_1133_p2);
assign counter_rd2b_loc_fu_779_p3 = ((readbuffer)? sel_tmp18_fu_771_p3: counter_rd2b);
assign counter_rd2b_new_4_fu_1161_p3 = ((sel_tmp26_fu_1021_p2)? counter_rd2b_loc_fu_779_p3: sel_tmp32_fu_1153_p3);
assign dst_V = ((begin2pad_load_reg_1468)? ap_const_lv16_0: p_0118_4_i_fu_1443_p3);
assign dst_valid_dst_V = (tmp8_reg_1544 | tmp6_reg_1539);
assign eol_dst_V = (tmp5_reg_1534 | tmp3_reg_1529);
assign linebuffer1_V_address0 = tmp_4_fu_464_p1;
assign linebuffer1_V_address1 = tmp_8_fu_527_p1;
assign linebuffer1_V_d0 = src_V_V_TDATA;
assign linebuffer1b_V_address0 = tmp_4_fu_464_p1;
assign linebuffer1b_V_address1 = tmp_10_fu_544_p1;
assign linebuffer1b_V_d0 = src_V_V_TDATA;
assign linebuffer2_V_address0 = tmp_13_fu_561_p1;
assign linebuffer2_V_address1 = tmp_2_fu_478_p1;
assign linebuffer2_V_d1 = src_V_V_TDATA;
assign linebuffer2b_V_address0 = tmp_2_fu_478_p1;
assign linebuffer2b_V_address1 = tmp_16_fu_578_p1;
assign linebuffer2b_V_d0 = src_V_V_TDATA;
assign newSel1_fu_1361_p3 = ((sel_tmp24_fu_1003_p2)? ap_const_lv2_2: sel_tmp259_cast_fu_1027_p1);
assign newSel2_fu_1369_p3 = ((tmp13_fu_1329_p2)? newSel_cast_fu_1353_p3: newSel1_fu_1361_p3);
assign newSel_cast_fu_1353_p3 = ((not_tmp_4_fu_1347_p2)? ap_const_lv2_3: ap_const_lv2_0);
assign not_brmerge_fu_398_p2 = (brmerge_fu_376_p2 ^ ap_const_lv1_1);
assign not_sel_tmp1_fu_1115_p2 = (sel_tmp256_demorgan_fu_1009_p2 | tmp_21_not_fu_1109_p2);
assign not_sel_tmp_fu_1103_p2 = (tmp_20_fu_815_p2 | tmp_22_not_fu_1097_p2);
assign not_tmp_1_fu_1255_p2 = (tmp_34_fu_1231_p2 ^ ap_const_lv1_1);
assign not_tmp_2_fu_1299_p2 = (tmp_35_fu_1275_p2 ^ ap_const_lv1_1);
assign not_tmp_3_fu_951_p2 = (tmp_30_fu_917_p2 ^ ap_const_lv1_1);
assign not_tmp_4_fu_1347_p2 = (tmp_35_fu_1275_p2 ^ ap_const_lv1_1);
assign not_tmp_s_fu_1211_p2 = (tmp_33_fu_1199_p2 ^ ap_const_lv1_1);
assign p_0118_4_i_fu_1443_p3 = ((readbuffer_load_reg_1473)? sel_tmp22_fu_1436_p3: ap_const_lv16_0);
assign p_begin2buffer_flag_fu_1205_p2 = (tmp_33_fu_1199_p2 | begin2buffer_flag_fu_404_p2);
assign p_begin2pad_flag_fu_1293_p2 = (tmp_35_fu_1275_p2 | tmp_34_fu_1231_p2);
assign p_buff2read_flag_3_fu_1341_p2 = (tmp14_fu_1335_p2 | tmp12_fu_1323_p2);
assign p_buff_in_flag_1_fu_1311_p2 = (tmp11_fu_1305_p2 | tmp_30_fu_917_p2);
assign p_buff_in_new_1_fu_1317_p2 = (tmp_30_fu_917_p2 & not_tmp_2_fu_1299_p2);
assign p_col_counter2_flag_1_fu_957_p2 = (tmp_31_fu_923_p2 & not_tmp_3_fu_951_p2);
assign p_col_counter2_loc_1_fu_929_p3 = ((tmp_31_fu_923_p2)? ap_const_lv32_0: col_counter2_loc_1_phi_fu_347_p6);
assign p_col_counter_load_fu_390_p3 = ((sof_src_V)? ap_const_lv32_0: col_counter);
assign p_counter2_flag_fu_1261_p2 = (tmp_34_fu_1231_p2 | readbuffer);
assign p_counter2_loc_fu_1267_p3 = ((tmp_34_fu_1231_p2)? ap_const_lv32_0: counter2_loc_fu_589_p3);
assign p_counter3_flag_fu_1377_p2 = (tmp_35_fu_1275_p2 | begin2pad);
assign p_counter3_loc_fu_1383_p3 = ((tmp_35_fu_1275_p2)? ap_const_lv32_0: counter3_loc_fu_797_p3);
assign p_counter_flag_1_fu_1217_p2 = (tmp_33_fu_1199_p2 | counter_flag_1_phi_fu_261_p6);
assign p_counter_load_fu_382_p3 = ((sof_src_V)? ap_const_lv32_0: counter);
assign p_counter_new_1_fu_1223_p3 = ((tmp_33_fu_1199_p2)? ap_const_lv32_0: counter_new_1_phi_fu_274_p6);
assign p_counter_rd2b_loc_fu_989_p3 = ((tmp_23_fu_833_p2)? ap_const_lv32_0: counter_rd2b_loc_fu_779_p3);
assign p_readbuffer_flag_fu_1249_p2 = (tmp_34_fu_1231_p2 | tmp_32_fu_1169_p2);
assign sel_tmp10_fu_683_p3 = ((sel_tmp9_fu_677_p2)? counter_rd1: sel_tmp8_fu_669_p3);
assign sel_tmp11_fu_691_p3 = ((sel_tmp5_fu_627_p2)? counter_rd1: sel_tmp10_fu_683_p3);
assign sel_tmp12_fu_699_p3 = ((sel_tmp7_fu_645_p2)? counter_rd1: sel_tmp11_fu_691_p3);
assign sel_tmp13_fu_715_p3 = ((sel_tmp9_fu_677_p2)? tmp_11_fu_549_p2: counter_rd1b);
assign sel_tmp14_fu_723_p3 = ((sel_tmp5_fu_627_p2)? counter_rd1b: sel_tmp13_fu_715_p3);
assign sel_tmp15_fu_731_p3 = ((sel_tmp7_fu_645_p2)? counter_rd1b: sel_tmp14_fu_723_p3);
assign sel_tmp16_fu_747_p3 = ((sel_tmp5_fu_627_p2)? tmp_14_fu_566_p2: counter_rd2);
assign sel_tmp17_fu_755_p3 = ((sel_tmp7_fu_645_p2)? counter_rd2: sel_tmp16_fu_747_p3);
assign sel_tmp18_fu_771_p3 = ((sel_tmp7_fu_645_p2)? tmp_17_fu_583_p2: counter_rd2b);
assign sel_tmp19_fu_1415_p3 = ((sel_tmp_reg_1504)? linebuffer1_V_q1: ap_const_lv16_0);
assign sel_tmp1_fu_603_p2 = (tmp_7_fu_521_p2 ^ ap_const_lv1_1);
assign sel_tmp20_fu_1422_p3 = ((sel_tmp9_reg_1519)? linebuffer1b_V_q1: sel_tmp19_fu_1415_p3);
assign sel_tmp21_fu_1429_p3 = ((sel_tmp5_reg_1509)? linebuffer2_V_q0: sel_tmp20_fu_1422_p3);
assign sel_tmp22_fu_1436_p3 = ((sel_tmp7_reg_1514)? linebuffer2b_V_q1: sel_tmp21_fu_1429_p3);
assign sel_tmp23_fu_997_p2 = (tmp_20_fu_815_p2 ^ ap_const_lv1_1);
assign sel_tmp24_fu_1003_p2 = (tmp_22_fu_827_p2 & sel_tmp23_fu_997_p2);
assign sel_tmp256_demorgan_fu_1009_p2 = (tmp_20_fu_815_p2 | tmp_22_fu_827_p2);
assign sel_tmp259_cast_fu_1027_p1 = tmp_20_fu_815_p2;
assign sel_tmp25_fu_1015_p2 = (sel_tmp256_demorgan_fu_1009_p2 ^ ap_const_lv1_1);
assign sel_tmp26_fu_1021_p2 = (tmp_21_fu_821_p2 & sel_tmp25_fu_1015_p2);
assign sel_tmp27_fu_1037_p3 = ((tmp_20_fu_815_p2)? ap_const_lv32_0: counter_rd1_loc_fu_707_p3);
assign sel_tmp28_fu_1045_p3 = ((sel_tmp24_fu_1003_p2)? counter_rd1_loc_fu_707_p3: sel_tmp27_fu_1037_p3);
assign sel_tmp29_fu_1067_p3 = ((sel_tmp24_fu_1003_p2)? ap_const_lv32_0: counter_rd1b_loc_fu_739_p3);
assign sel_tmp2_fu_609_p2 = (readbuffer & sel_tmp1_fu_603_p2);
assign sel_tmp30_fu_1133_p2 = (tmp10_fu_1127_p2 & tmp9_fu_1121_p2);
assign sel_tmp31_fu_1145_p3 = ((tmp_20_fu_815_p2)? counter_rd2b_loc_fu_779_p3: p_counter_rd2b_loc_fu_989_p3);
assign sel_tmp32_fu_1153_p3 = ((sel_tmp24_fu_1003_p2)? counter_rd2b_loc_fu_779_p3: sel_tmp31_fu_1145_p3);
assign sel_tmp3_fu_615_p2 = (tmp_s_fu_538_p2 ^ ap_const_lv1_1);
assign sel_tmp4_fu_621_p2 = (sel_tmp2_fu_609_p2 & sel_tmp3_fu_615_p2);
assign sel_tmp5_fu_627_p2 = (sel_tmp4_fu_621_p2 & tmp_12_fu_555_p2);
assign sel_tmp6_fu_633_p2 = (tmp_12_fu_555_p2 ^ ap_const_lv1_1);
assign sel_tmp7_fu_645_p2 = (tmp1_fu_639_p2 & sel_tmp4_fu_621_p2);
assign sel_tmp8_fu_669_p3 = ((sel_tmp_fu_597_p2)? tmp_9_fu_532_p2: counter_rd1);
assign sel_tmp9_fu_677_p2 = (sel_tmp2_fu_609_p2 & tmp_s_fu_538_p2);
assign sel_tmp_fu_597_p2 = (readbuffer & tmp_7_fu_521_p2);
assign sof_dst_V = tmp_19_reg_1524;
assign tmp10_fu_1127_p2 = (not_sel_tmp_fu_1103_p2 & not_sel_tmp1_fu_1115_p2);
assign tmp11_fu_1305_p2 = (tmp_31_fu_923_p2 | tmp_35_fu_1275_p2);
assign tmp12_fu_1323_p2 = (tmp_20_fu_815_p2 | tmp_23_fu_833_p2);
assign tmp13_fu_1329_p2 = (sel_tmp26_fu_1021_p2 | tmp_35_fu_1275_p2);
assign tmp14_fu_1335_p2 = (tmp13_fu_1329_p2 | sel_tmp24_fu_1003_p2);
assign tmp1_fu_639_p2 = (tmp_15_fu_572_p2 & sel_tmp6_fu_633_p2);
assign tmp2_fu_657_p2 = (tmp342_demorgan_fu_651_p2 ^ ap_const_lv1_1);
assign tmp342_demorgan_fu_651_p2 = (sel_tmp5_fu_627_p2 | sel_tmp7_fu_645_p2);
assign tmp3_fu_857_p2 = (tmp_20_fu_815_p2 | tmp_21_fu_821_p2);
assign tmp4_fu_863_p2 = (tmp_23_fu_833_p2 | cond_eol_fu_851_p2);
assign tmp5_fu_869_p2 = (tmp4_fu_863_p2 | tmp_22_fu_827_p2);
assign tmp6_fu_899_p2 = (tmp_26_fu_875_p2 | tmp_27_fu_881_p2);
assign tmp7_fu_905_p2 = (tmp_29_fu_893_p2 | tmp_25_fu_845_p2);
assign tmp8_fu_911_p2 = (tmp7_fu_905_p2 | tmp_28_fu_887_p2);
assign tmp9_fu_1121_p2 = (tmp_23_fu_833_p2 & sel_tmp23_fu_997_p2);
assign tmp_10_fu_544_p1 = $signed(counter_rd1b);
assign tmp_11_fu_549_p2 = (counter_rd1b + ap_const_lv32_1);
assign tmp_12_fu_555_p2 = (buff2read == ap_const_lv2_2? 1'b1: 1'b0);
assign tmp_13_fu_561_p1 = $signed(counter_rd2);
assign tmp_14_fu_566_p2 = (counter_rd2 + ap_const_lv32_1);
assign tmp_15_fu_572_p2 = (buff2read == ap_const_lv2_3? 1'b1: 1'b0);
assign tmp_16_fu_578_p1 = $signed(counter_rd2b);
assign tmp_17_fu_583_p2 = (counter_rd2b + ap_const_lv32_1);
assign tmp_18_fu_791_p2 = (counter3 + ap_const_lv32_1);
assign tmp_19_fu_809_p2 = (counter2_loc_fu_589_p3 == ap_const_lv32_1? 1'b1: 1'b0);
assign tmp_1_fu_454_p2 = (counter_loc_fu_419_p3 + ap_const_lv32_1);
assign tmp_20_fu_815_p2 = (counter_rd1_loc_fu_707_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_21_fu_821_p2 = (counter_rd2_loc_fu_763_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_21_not_fu_1109_p2 = (tmp_21_fu_821_p2 ^ ap_const_lv1_1);
assign tmp_22_fu_827_p2 = (counter_rd1b_loc_fu_739_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_22_not_fu_1097_p2 = (tmp_22_fu_827_p2 ^ ap_const_lv1_1);
assign tmp_23_fu_833_p2 = (counter_rd2b_loc_fu_779_p3 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_24_fu_839_p2 = (tmp_36_fu_805_p1 == ap_const_lv6_0? 1'b1: 1'b0);
assign tmp_25_fu_845_p2 = ($signed(counter3_loc_fu_797_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_26_fu_875_p2 = ($signed(counter_rd1_loc_fu_707_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_27_fu_881_p2 = ($signed(counter_rd1b_loc_fu_739_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_28_fu_887_p2 = ($signed(counter_rd2_loc_fu_763_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_29_fu_893_p2 = ($signed(counter_rd2b_loc_fu_779_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_2_fu_478_p1 = $signed(col_counter2);
assign tmp_30_fu_917_p2 = (col_counter_loc_2_phi_fu_322_p6 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_31_fu_923_p2 = (col_counter2_loc_1_phi_fu_347_p6 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_32_fu_1169_p2 = (counter_loc_1_phi_fu_286_p6 == ap_const_lv32_40? 1'b1: 1'b0);
assign tmp_33_fu_1199_p2 = (counter_loc_1_phi_fu_286_p6 == ap_const_lv32_54C0? 1'b1: 1'b0);
assign tmp_34_fu_1231_p2 = (counter2_loc_fu_589_p3 == ap_const_lv32_A980? 1'b1: 1'b0);
assign tmp_35_fu_1275_p2 = (counter3_loc_fu_797_p3 == ap_const_lv32_1680? 1'b1: 1'b0);
assign tmp_36_fu_805_p1 = counter3_loc_fu_797_p3[5:0];
assign tmp_3_fu_484_p2 = (col_counter2 + ap_const_lv32_1);
assign tmp_4_fu_464_p1 = $signed(col_counter_loc_fu_428_p3);
assign tmp_5_fu_470_p2 = (col_counter_loc_fu_428_p3 + ap_const_lv32_1);
assign tmp_6_fu_515_p2 = (counter2 + ap_const_lv32_1);
assign tmp_7_fu_521_p2 = (buff2read == ap_const_lv2_0? 1'b1: 1'b0);
assign tmp_8_fu_527_p1 = $signed(counter_rd1);
assign tmp_9_fu_532_p2 = (counter_rd1 + ap_const_lv32_1);
assign tmp_fu_438_p2 = (begin2buffer_loc_fu_413_p2 & src_valid_V);
assign tmp_s_fu_538_p2 = (buff2read == ap_const_lv2_1? 1'b1: 1'b0);


endmodule //hls_cropping_vert_strm

